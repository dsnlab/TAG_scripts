#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# Utility for computing a distance matrix between each pair of
# nodes in a given parcellation or atlas
###################################################################

###################################################################
# Constants
###################################################################
source ${XCPEDIR}/core/constants
source ${XCPEDIR}/core/functions/library.sh

###################################################################
# Usage function
###################################################################
Usage(){
cat << endstream
___________________________________________________________________


Usage: `basename $0` -a <atlas> -o <output> <options>

Compulsory arguments:
 -a : Atlas
      The atlas that defines regions or groupings of voxels
      for distance computation. This should be a NIfTI image; use
      distmat.R instead for spatial coordinate libraries.

 -q : Test values
      The edgewise values to be assessed for distance dependence.
      These could, for instance, be QC-FC estimates.

 -o : Output root
      The path where distance-dependence values are to be written.

 -d : Distance matrix
      The path where the nodewise distance matrix should be 
      printed.

 -f : Output figure
      The path where the distance-dependence plot should be 
      printed.

Optional arguments:
 -i : Intermediate output path
      A path where intermediate files are to be written

endstream
}





###################################################################
# Parse arguments
###################################################################
while getopts "a:q:o:i:d:f:" OPTION
   do
   case $OPTION in
   a)
      atlas=${OPTARG}
      ! is_image ${atlas} && Usage && exit
      ;;
   q)
      covar=${OPTARG}
      ;;
   o)
      output=${OPTARG}
      ;;
   i)
      intermediate=${OPTARG}-roi2distmat
      ;;
   d)
      dmat=${OPTARG}
      ;;
   f)
      outfig=${OPTARG}
      ;;
   *)
      echo "Option not recognised: ${OPTARG}"
      Usage
      exit
      ;;
   esac
done
###################################################################
# Ensure that all compulsory arguments have been defined
###################################################################
[[ -z ${atlas}  ]]            && Usage && exit
[[ -z ${output} ]]            && Usage && exit
[[ -z ${outfig} ]]            && Usage && exit
[[ -z ${dmat}   ]]            && Usage && exit
[[ -z ${intermediate} ]]      && intermediate=${output_root}





###################################################################
# Compute the distance matrix over the provided atlas
###################################################################
subroutine                    @u.1  Estimating distance matrix
exec_sys rm -f ${intermediate}-distmat.txt
exec_xcp roi2distmat -a ${atlas}          \
                     -o ${dmat}           \
                     -i ${intermediate}





###################################################################
# Compute the overall correlation between distance and motion
# effects to infer distance-dependence of motion effects.
###################################################################
subroutine                    @u.2  Computing distance-dependence
exec_sys rm -f ${output}
exec_xcp featureCorrelation.R       \
   -i    ${dmat},${covar}           \
   -f    ${outfig}                  \
   >>    ${output}
