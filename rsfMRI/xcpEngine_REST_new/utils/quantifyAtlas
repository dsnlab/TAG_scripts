#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# Utility for atlas-based (or ROI-wise) quantification of
# voxelwise data
###################################################################

###################################################################
# Constants
###################################################################
source ${XCPEDIR}/core/constants
source ${XCPEDIR}/core/functions/library.sh

###################################################################
# Usage function
###################################################################
Usage(){
cat << endstream
___________________________________________________________________


Usage: `basename $0` -a <atlas> -o <output> <options>

Compulsory arguments:
 -a : Atlas
      The atlas that defines regions or groupings of voxels
      for quantification

 -o : Output values
      The path where the ROI-wise values are to be written

 -n : Name
      The name of the atlas

Optional arguments:
 -v : Voxelwise map
      The voxelwise map whose values are to be quantified
      regionally

 -p : Subject identifiers
      A comma-separated list of subject identifiers

 -d : Derivative name
      The name of the voxelwise map

 -s : Statistic
      The statistic to compute over each region of interest
      [default: mean]

 -i : Index
      A list of relevant regions of interest

 -r : Region names
      A list of names corresponding to the indices passed to
      option i

 -t : Intermediate output path
      Base path for any intermediate outputs

 -w : Overwrite existing
      If -w 0 is provided, then quantifyAtlas will not overwrite
      any existing output that it detects.

endstream
}





###################################################################
# Define defaults
###################################################################
stats=mean
overwrite=1
###################################################################
# Parse arguments
###################################################################
while getopts "a:o:v:s:i:n:t:d:p:r:w:" OPTION
   do
   case $OPTION in
   a)
      atlas=${OPTARG}
      ! is_image ${atlas} && Usage && exit
      ;;
   o)
      opath=${OPTARG}
      ;;
   v)
      voxel=${OPTARG}
      ! is_image ${voxel} && Usage && exit
      ;;
   s)
      stats=${OPTARG}
      ;;
   i)
      index=${OPTARG}
      ;;
   n)
      aname=${OPTARG}
      ;;
   t)
      oroot=${OPTARG}-quantifyAtlas
      ;;
   d)
      dname=${OPTARG}_
      ;;
   p)
      prpnd=${OPTARG}
      ;;
   r)
      rname=${OPTARG}
      ;;
   w)
      overwrite=${OPTARG}
      ;;
   *)
      echo "Option not recognised: ${OPTARG}"
      Usage
      exit
      ;;
   esac
done
###################################################################
# Ensure that all compulsory arguments have been defined
###################################################################
(( overwrite == 0 )) && [[ -s ${opath} ]] && echo "[already complete]" && exit 0
[[ -z ${atlas} ]]    && Usage && exit 1
[[ -z ${opath} ]]    && Usage && exit 2
[[ -z ${aname} ]]    && Usage && exit 3
[[ -z ${oroot} ]]    && oroot=$(exec_fsl remove_ext ${opath})
[[ -z ${voxel} ]]    && [[ ${stats} != vol ]] \
   && stats=vol      && subroutine @u.0 No voxelwise values -- computing regional volumes
if [[ ! -s ${index} ]]
   then
   [[ -z ${index} ]] \
      && index=( $(exec_fsl   fslstats ${atlas} -R) ) \
      && maxim=$(strslice     ${index[1]} 1 '.') \
      && index=( $(eval       echo {1..${maxim}}) )
   index=( ${index[@]//,/ } )
   printf '%d\n' ${index[@]}  >> ${oroot}_index.1D
   unset index
   index=${oroot}_index.1D
fi
if [[ ! -s ${rname} ]]
   then
   exec_sys rm -f ${oroot}_rname.txt
   if [[ -z ${rname} ]]
      then
      mapfile indices < ${index}
      rname=( $(printf 'Node_%d ' "${index[@]}") )
   fi
   rname=${rname//,/ }
   printf '%d\n' ${rname[@]}  >> ${oroot}_rname.1D
   unset rname
   rname=${oroot}_rname.txt
fi





###################################################################
# Perform the statistical computations.
###################################################################
rargs="
   -1DRformat
   -nomeanout
   -nobriklab
   -roisel        ${index}
   -mask          ${atlas}"
case $stats in
mean)
   subroutine                 @u.1  Mean ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzmean     \
      ${voxel}    \
      >> ${oroot}_${aname}_${stats}.1D
   ;;
median)
   subroutine                 @u.2  Median ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzmedian   \
      ${voxel}    \
      >> ${oroot}_${aname}_${stats}.1D
   ;;
mode)
   subroutine                 @u.3  Modal ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzmode     \
      ${voxel}    \
      >> ${oroot}_${aname}_${stats}.1D
   ;;
minmax)
   subroutine                 @u.4  Min/Max ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzminmax   \
      ${voxel}    \
      >> ${oroot}_${aname}_${stats}.1D
   ;;
stdev)
   subroutine                 @u.5  Standard deviation ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzsigma    \
      ${voxel}    \
      >> ${oroot}_${aname}_${stats}.1D
   ;;
vol)
   subroutine                 @u.6  Volume ${dname//_/ } over ${aname}
   exec_afni 3dROIstats \
      ${rargs}    \
      -nzvoxels   \
      ${atlas}    \
      >> ${oroot}_${aname}_${stats}.1D
   dim[0]=$(exec_fsl fslval      ${atlas}       pixdim1)
   dim[1]=$(exec_fsl fslval      ${atlas}       pixdim2)
   dim[2]=$(exec_fsl fslval      ${atlas}       pixdim3)
   scale="-s "$(arithmetic ${dim[0]}\*${dim[1]}\*${dim[2]})
   ;;
*)
   subroutine                 @u.7  Invalid statistic: ${stats}
   Usage
   exit 4
   ;;
esac





###################################################################
# Reformat the output to conform to pipeline standards.
###################################################################
subroutine                    @u.8
exec_xcp rs2rq.R \
   -i ${oroot}_${aname}_${stats}.1D \
   -a ${dname}${stats}_${aname} \
   -n ${rname}   \
   -o ${opath}   \
   -p ${prpnd}  \
   ${scale}
