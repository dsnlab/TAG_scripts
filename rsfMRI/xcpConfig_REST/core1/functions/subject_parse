subject_parse() {
   local abs_test i id_vals idx subject_vals subject_vars v val_full
   unset subject prefix[sub] out[sub]
   cohort_vars=()
   subject_vals=( ${1//,/ } )
   # Faster this way than using IFS=','
   read -r subject_vars < ${2}
   subject_vars=( ${subject_vars//,/ } )
   i=0
   for v in "${subject_vars[@]}"
      do
      if contains ${v} '^id[0-9]*$'
         then
         idx=${v//id/}
         eval subject[idx]=\${subject_vals[i]}
         id_vals=( "${id_vals[@]}" "${subject[idx]}" )
      else
         cohort_vars+=(${v}[${sub}])
         eval ${v}[${sub}]=\${subject_vals[i]}
         # If paths are defined relative, make sure the current
         # cohort field is actually a file and not some other type
         # of input first
         if [[ -n ${inroot} ]]; then val_full=$(abspath ${inroot}/${subject_vals[i]})
         if [[ -s ${val_full} ]]
            then
            eval ${v}[${sub}]=\${val_full}
         fi; fi
      fi
      (( i++ ))
   done
   (( ${#subject[@]} == 0 )) && id_vals=( ${sub} ) && subject=( ${sub} )
   ids[sub]=$(   join_by ',' ${id_vals[@]})
   prefix[sub]=$(join_by '_' ${subject[@]})
   out[sub]=${out_super}/$(join_by '/' ${subject[@]})
}
