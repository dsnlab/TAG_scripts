#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# Function for converting a label set to a layered label set.
# Each label k is scaled to span the range (100(k-1),100k]
###################################################################

###################################################################
# Constants
###################################################################
source ${XCPEDIR}/core/constants
source ${XCPEDIR}/core/functions/library.sh

###################################################################
# Usage function
###################################################################
Usage(){
cat << endstream
___________________________________________________________________


Usage: `basename $0` -l <labels> -o <output> <options>

Compulsory arguments:
 -l : Labels
      The raw label set.

 -o : Output path
      The path where the layered label set will be written.

Optional arguments:
 -i : Intermediate output path
      Path for input and output of temporary files (intermediates)
      (default: current directory)


endstream
}

###################################################################
# Define defaults
###################################################################
[[ -z ${intermediate} ]] && intermediate=$(pwd)/layerLabels~TEMP~
###################################################################
# Parse arguments
###################################################################
while getopts "l:o:i:t" OPTION
   do
   case $OPTION in
   l)
      label=${OPTARG}
      ! is_image ${label} && Usage && exit
      ;;
   o)
      out=${OPTARG}
      ;;
   i)
      intermediate=${OPTARG}-layerLabels
      ;;
   t)
      set -x
      ;;
   *)
      echo "Option not recognised: ${OPTARG}"
      Usage
      exit
      ;;
   esac
done
###################################################################
# Ensure that all compulsory arguments have been defined
###################################################################
[[ -z ${label} ]] && Usage && exit
[[ -z ${out}   ]] && Usage && exit





###################################################################
# Obtain all labels
###################################################################
subroutine                    @u.1
classes=( $(exec_xcp unique.R -i ${label}) )

###################################################################
# Iterate through all labels
###################################################################
for i in ${!classes[@]}
   do
   ################################################################
   # Extract the the current label and invert it
   ################################################################
   subroutine                 @u.2
   c=${classes[i]}
   exec_fsl    fslmaths ${label} \
      -thr     ${c}  \
      -uthr    ${c}  \
      -div     ${c}  \
      -sub     1     \
      -mul     -1    \
               ${intermediate}-class-${c}.nii.gz
   ################################################################
   # Compute the depth of each voxel in the current label as the
   # distance to the label boundary
   ################################################################
   exec_ants   ImageMath   3  ${intermediate}-depth-${c}.nii.gz \
               MaurerDistance ${intermediate}-class-${c}.nii.gz
   ################################################################
   # Rebuild the label by inverting the inverse
   ################################################################
   exec_fsl    fslmaths ${intermediate}-class-${c}.nii.gz \
      -sub     1  \
      -mul     -1 \
               ${intermediate}-class-${c}.nii.gz
   ################################################################
   # Mask out any depth indicators that are outside of the label
   ################################################################
   exec_fsl    fslmaths ${intermediate}-class-${c}.nii.gz \
      -mul     ${intermediate}-depth-${c}.nii.gz          \
               ${intermediate}-depth-${c}.nii.gz
   ################################################################
   # Convert the raw depth values to percentiles
   ################################################################
   subroutine                 @u.3
   exec_xcp    val2pct.R                         \
      -i       ${intermediate}-depth-${c}.nii.gz \
      -m       ${intermediate}-class-${c}.nii.gz \
      -o       ${intermediate}-depth-${c}.nii.gz
   ################################################################
   # Rescale the output
   ################################################################
   subroutine                 @u.4
   offset=$(( ${c}*100 ))
   exec_fsl    fslmaths ${intermediate}-class-${c}.nii.gz \
      -mul     ${offset}                                  \
               ${intermediate}-class-${c}.nii.gz
   exec_fsl    fslmaths ${intermediate}-depth-${c}.nii.gz \
      -mul     100                               \
      -add     ${intermediate}-class-${c}.nii.gz \
               ${intermediate}-depth-${c}.nii.gz
   ################################################################
   # Build the aggregator command
   ################################################################
   (( i == 0 )) \
               && sum_cmd=${intermediate}-depth-${c}.nii.gz \
               || sum_cmd="${sum_cmd} -add ${intermediate}-depth-${c}.nii.gz"
done

###################################################################
# Combine the relayered labels to produce the output
###################################################################
subroutine                    @u.5
exec_fsl    fslmaths ${sum_cmd} \
            ${out}
            
(( trace == 0 )) && rm -f ${intermediate}*
