#!/usr/bin/env bash


###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################

###################################################################
# GENERAL GROUP MODULE HEADER
###################################################################
export FSLOUTPUTTYPE=NIFTI_GZ
usage_flag=0

###################################################################
# Read in:
#  * path to cohort file
#  * overall context in pipeline
#  * whether to explicitly trace all commands
# Trace status is, by default, set to 0 (no trace)
###################################################################
printx      ${mod_head}
trace=0
if (( $# < 4 ))
   then
   usage_flag=1
fi
while getopts "s:c:o:t:" OPTION
   do
   case $OPTION in
   s)
      incohort=${OPTARG}
      ;;
   c)
      cxt=${OPTARG}
      ! is+integer ${cxt} && usage_flag=1
      ;;
   
   o)
      out_super=${OPTARG}
      ;;
   t)
      trace=${OPTARG}
      if (( ${trace} != 0 )) \
      && (( ${trace} != 1 )) \
      && (( ${trace} != 2 )) \
      && (( ${trace} != 3 ))
         then
         usage_flag=1
      fi
      ;;
   *)
      echo "Option not recognised: ${OPTION} ${OPTARG}"
      usage_flag=1
      ;;
   esac
done
shift $((OPTIND-1))
###################################################################
# Ensure that the compulsory incohort and out_super variables have
# been defined reasonably.
###################################################################
[[ ! -s ${incohort}  ]] && usage_flag=1
[[ ! -d ${out_super} ]] && usage_flag=1
###################################################################
# Terminator setup. This only affects the terminator module. This
# solution is quite hacky and should be changed in the future.
###################################################################
terminator_rerun[cxt]=1
terminator_cleanup[cxt]=1
###################################################################
# Usage and exit
###################################################################
if (( ${usage_flag} == 1 ))
   then
   cat ${XCPEDIR}/core/USAGE_GROUP
   exit 1
fi
###################################################################
# Set trace status, if applicable
###################################################################
case ${trace} in
0)
   trace=0
   ;;
1)
   trace=1
   ;;
2)
   export trace=1
   ;;
3)
   set -x
   export SHELLOPTS
   ;;
esac
###################################################################
# Source all design files.
###################################################################
source ${XCPEDIR}/core/xcpDelocaliser
source ${XCPEDIR}/core/defineLogs
###################################################################
# Create the primary module output directory.
###################################################################
(( ${NUMOUT} == 1 )) && prep=${cxt}_
outdir=${out_group}/${prep}${mod_name_short}
if [[ ! -e ${outdir} ]]
   then
   mkdir -p ${outdir}
fi
echo \
"


[I][${out_super}]
[O][${outdir}]"
###################################################################
# * Define the root path to processing intermediates.
# * If a scratch space has been specified, then write any
#   intermediates to the scratch space.
###################################################################
if [[ -n ${scratch} ]]
   then
   mkdir -p ${scratch}
   intermediate=${scratch}/${prefix}-${mod_name_short}-$(date +%N)~TEMP~
   intermediate=${intermediate//\/\//\/}
else
   intermediate=${outdir}/${prefix}~TEMP~
fi
intermediate_root=${intermediate}
###################################################################
# Parse quality variables.
###################################################################
quality_group=${out_group}/${sequence}_quality.csv
if [[ ! -s ${quality_group} ]]
   then
   echo \
"sequence
${sequence}" \
   >> ${quality_group}
fi
mapfile  quality_lines < ${quality_group}
qvars=( ${quality_lines[0]//,/ } )
qvals=( ${quality_lines[1]//,/ } )
###################################################################
# Begin mapping the module workflow.
###################################################################
routine_map='· START'
###################################################################
# Determine whether the user requested the module to be re-run.
###################################################################
if rerun
   then
   exec_sys rm -rf ${intermediate}*
fi
