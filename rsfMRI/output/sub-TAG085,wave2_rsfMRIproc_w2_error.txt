echo auto-generated by afni_proc.py, Tue Jan 22 09:48:11 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG085
endif
set output_dir = sub-TAG085.results
if ( -d sub-TAG085.results ) then
set runs = ( `count -digits 2 1 2` )
count -digits 2 1 2
mkdir sub-TAG085.results
mkdir sub-TAG085.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG085/SUMA/sub-TAG085_SurfVol.nii.gz sub-TAG085.results/sub-TAG085_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG085/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG085.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG085/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG085.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG085/SUMA/sub-TAG085_vent.nii.gz sub-TAG085.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG085/SUMA/sub-TAG085_WM.nii.gz sub-TAG085.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG085.results/pb00.sub-TAG085.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG085/ses-wave2/func/sub-TAG085_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 7.2 s
3dTcat -prefix sub-TAG085.results/pb00.sub-TAG085.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG085/ses-wave2/func/sub-TAG085_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.5 s
set tr_counts = ( 390 390 )
cd sub-TAG085.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG085.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG085.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG085.r01.tcat+orig.BRIK is 6.092587 degrees from plumb.
++ 79499 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG085.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG085.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG085.r02.tcat+orig.BRIK is 6.092587 degrees from plumb.
++ 79614 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 -index_to_run_tr 306
set minoutrun = 01
set minouttr = 306
tee out.min_outlier.txt
echo min outlier: run 01, TR 306
foreach run ( 01 02 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG085.r01.despike pb00.sub-TAG085.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG085.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG085.r01.tcat+orig.BRIK is 6.092587 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG085.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 173ms

++ FINAL: 163137780 data points, 5501219 edits [3.372%], 265110 big edits [0.163%]
++ Output dataset ./pb01.sub-TAG085.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG085.r02.despike pb00.sub-TAG085.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG085.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG085.r02.tcat+orig.BRIK is 6.092587 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG085.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 97ms

++ FINAL: 163136610 data points, 5499731 edits [3.371%], 261293 big edits [0.160%]
++ Output dataset ./pb01.sub-TAG085.r02.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG085.r01.despike+orig[306]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG085_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG085_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 6.092587 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2047.794556
 + Used gradual clip level = 1839.167969 .. 2187.822998
 + Number voxels above clip level = 85849
 + Clustering voxels ...
 + Largest cluster has 82477 voxels
 + Clustering voxels ...
 + Largest cluster has 78605 voxels
 + Filled   846 voxels in small holes; now have 79451 voxels
 + Filled     9 voxels in large holes; now have 79460 voxels
 + Clustering voxels ...
 + Largest cluster has 79460 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 343900 voxels
 + Mask now has 79460 voxels
++ 79460 voxels in the mask [out of 423360: 18.77%]
++ first  18 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    5 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 6.092587 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 6.092587 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG085_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1461215 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 79460 voxels [17.6%] in weight mask
++ Output dataset ./__tt_sub-TAG085_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 79460
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 43.133 39.346 34.344 (index)
 + source center of mass = 146.238 156.412 172.075 (index)
 + source-target CM = -0.104 -3.213 -8.509 (xyz)
 + center of mass shifts = -0.104 -3.213 -8.509
++ shift param auto-range: -66.7..66.5 -69.8..63.4 -59.1..42.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.104095 .. 9.895905
 + Range param#2 [y-shift] = -13.213341 .. 6.786659
 + Range param#3 [z-shift] = -18.508713 .. 1.491287
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.104095 .. 39.895905
 + Range param#2 [y-shift] = -43.213341 .. 36.786659
 + Range param#3 [z-shift] = -48.508713 .. 31.491287
 + 12 free parameters
++ Normalized convergence radius = 0.000453
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1461215 [out of 24896210] voxels
 + base mask has 100223 [out of 451584] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=22 usiz=54
 + - copying weight image
 + - using 79460 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 30.6477 .. 132.429; base clip 1417.41 .. 5073.69
 +  - versus source range 0.023304 .. 123.87; base range 0 .. 6550.57
 + 72298 total points stored in 695 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oooo-.+-.+.oo-+-.$oo-o.+o.+.+ + - best 45 costs found:
    0 v= 0.743624:  -0.10  -3.21  -8.51   0.00   0.00   0.00  [grid]
    1 v= 1.031164:  -4.18  -9.44  -0.71   4.32  22.85  18.95  [rand]
    2 v= 1.057670:  -4.18  -9.44  -0.71   4.32  22.85 -18.95  [rand]
    3 v= 1.067697:   3.98  -9.44  -0.71  -4.32  22.85  18.95  [rand]
    4 v= 1.092715: -11.70  -7.77 -12.40  24.53 -29.49 -26.10  [rand]
    5 v= 1.100073:  -4.18  -9.44 -16.31   4.32 -22.85 -18.95  [rand]
    6 v= 1.128946:  -4.18  -9.44  -0.71  -4.32  22.85  18.95  [rand]
    7 v= 1.134438:   3.98  -9.44  -0.71   4.32  22.85  18.95  [rand]
    8 v= 1.173633:   3.98  -9.44  -0.71   4.32  22.85 -18.95  [rand]
    9 v= 1.178312:  -4.18  -9.44 -16.31  -4.32 -22.85 -18.95  [rand]
   10 v= 1.183912:   3.98  -9.44  -0.71  -4.32  22.85 -18.95  [rand]
   11 v= 1.190475:   3.98   3.01  -0.71  -4.32  22.85  18.95  [rand]
   12 v= 1.191465:   3.98  -9.44  -0.71  -4.32 -22.85  18.95  [rand]
   13 v= 1.218876: -11.70  -7.77  -4.61  24.53  29.49 -26.10  [rand]
   14 v= 1.219018:  11.49   1.34  -4.61 -24.53 -29.49  26.10  [rand]
   15 v= 1.221000: -14.31 -12.67 -13.35  15.99 -13.53 -29.93  [rand]
   16 v= 1.221010:  -4.18  -9.44  -0.71  -4.32  22.85 -18.95  [rand]
   17 v= 1.229770:   3.98   3.01  -0.71  -4.32 -22.85  18.95  [rand]
   18 v= 1.238956:  -4.18  -9.44 -16.31   4.32  22.85 -18.95  [rand]
   19 v= 1.240744:   3.98  -9.44  -0.71   4.32 -22.85  18.95  [rand]
   20 v= 1.260751:  -4.18   3.01 -16.31  -4.32 -22.85 -18.95  [rand]
   21 v= 1.275213:  -4.18   3.01 -16.31   4.32 -22.85 -18.95  [rand]
   22 v= 1.286374:  -4.18   3.01  -0.71  -4.32  22.85  18.95  [rand]
   23 v= 1.293289:  -4.18   3.01 -16.31  -4.32  22.85 -18.95  [rand]
   24 v= 1.293324: -11.70   1.34 -12.40  24.53 -29.49 -26.10  [rand]
   25 v= 1.294794:   3.98   3.01  -0.71   4.32  22.85  18.95  [rand]
   26 v= 1.299428:  -4.18  -9.44 -16.31  -4.32  22.85 -18.95  [rand]
   27 v= 1.312668:   3.98  -9.44 -16.31  -4.32 -22.85 -18.95  [rand]
   28 v= 1.329839:  -4.18   3.01  -0.71   4.32  22.85  18.95  [rand]
   29 v= 1.342832:   3.98   3.01  -0.71   4.32 -22.85  18.95  [rand]
   30 v= 1.346738: -14.31 -12.67  -3.67  15.99  13.53 -29.93  [rand]
   31 v= 1.354051:  -4.18  -9.44  -0.71   4.32 -22.85  18.95  [rand]
   32 v= 1.358388:  -4.18   3.01 -16.31   4.32  22.85 -18.95  [rand]
   33 v= 1.361667:  -4.18   3.01  -0.71  -4.32 -22.85  18.95  [rand]
   34 v= 1.364476: -14.31 -12.67  -3.67  15.99 -13.53 -29.93  [rand]
   35 v= 1.385099: -13.44 -16.55   4.82  30.00  15.00 -15.00  [grid]
   36 v= 1.387598: -13.44 -16.55   4.82  30.00  30.00  15.00  [grid]
   37 v= 1.400808: -11.70  -7.77  -4.61  24.53 -29.49 -26.10  [rand]
   38 v= 1.407303:  -4.18  -9.44  -0.71  -4.32 -22.85  18.95  [rand]
   39 v= 1.408040: -14.31 -12.67 -13.35  15.99  13.53 -29.93  [rand]
   40 v= 1.411233:   3.98  -9.44 -16.31   4.32 -22.85 -18.95  [rand]
   41 v= 1.428003: -13.44 -16.55   4.82  30.00  30.00 -15.00  [grid]
   42 v= 1.430896: -11.70  -7.77 -12.40  24.53  29.49 -26.10  [rand]
   43 v= 1.442639:   3.98  -9.44 -16.31  -4.32  22.85 -18.95  [rand]
   44 v= 1.445815:  -4.18   3.01  -0.71   4.32  22.85 -18.95  [rand]
*[#8004=0.552677] *[#8013=0.507624] *[#8018=0.493518] *[#8019=0.482596] *[#8020=0.451474] *[#8021=0.445389] *[#8025=0.442907] *[#8026=0.440942] *[#8027=0.433723] *[#8030=0.432675] *[#8031=0.431006] *[#8032=0.428562] *[#8033=0.42732] *[#8263=0.424253] *[#8499=0.423856] *[#10671=0.423739]  + - costs of the above after a little optimization:
    0 v= 0.427320:  -0.69  -1.77  -2.63  -0.11  -0.85   0.97  [grid]
    1 v= 0.431799:  -0.16  -1.34  -2.64  -0.04  -1.13   1.21  [rand]
    2 v= 0.429374:  -0.56  -1.97  -2.83   0.10  -0.76   0.65  [rand]
    3 v= 0.424253:  -0.73  -1.86  -2.73   0.11  -0.53   0.80  [rand]
    4 v= 0.973499: -10.20  -8.67  -8.82  26.12 -14.12 -28.90  [rand]
    5 v= 0.738505:  -3.13  -6.31  -7.79   8.75   3.98 -15.21  [rand]
    6 v= 0.437635:   0.01  -1.73  -2.75  -0.03  -0.42   1.57  [rand]
    7 v= 0.423856:  -0.52  -2.10  -2.76   0.06  -0.43   0.80  [rand]
    8 v= 0.426495:  -0.60  -2.04  -2.71   0.05  -0.65   0.79  [rand]
    9 v= 0.789467:  -3.66  -4.99 -10.34   5.63   0.76 -25.31  [rand]
   10 v= 0.529440:  -1.97  -3.63  -3.88   0.50   1.01  -1.33  [rand]
   11 v= 0.429005:  -0.32  -1.84  -2.96  -0.06  -0.65   1.01  [rand]
   12 v= 0.425864:  -0.51  -2.08  -2.78   0.19  -0.43   1.04  [rand]
   13 v= 0.786596:  -5.00  -7.13  -8.22  13.44   3.05 -21.07  [rand]
   14 v= 1.046105:   6.03   1.41  -0.93 -27.66 -24.86  29.96  [rand]
   15 v= 0.820136:  -6.23  -7.39  -9.29  13.22  -0.91 -28.68  [rand]
   16 v= 0.428680:  -0.55  -1.85  -2.60   0.35  -0.64   1.01  [rand]
   17 v= 0.809025:   1.96  -4.05  -2.18  -6.00  -4.65  21.18  [rand]
   18 v= 0.431060:  -0.58  -1.27  -2.67   0.04  -1.43   0.89  [rand]
   19 v= 0.432881:  -0.52  -1.29  -2.73   0.36  -1.36   0.78  [rand]
   20 v= 0.424491:  -0.56  -1.46  -2.76   0.15  -0.98   0.93  [rand]
   21 v= 0.534594:  -0.06  -3.87  -4.24   1.32   0.98   0.36  [rand]
   22 v= 0.424252:  -0.54  -1.92  -2.74   0.08  -0.45   0.83  [rand]
   23 v= 0.560239:  -1.22  -3.92  -4.90   1.40   1.61  -1.63  [rand]
   24 v= 0.821466:  -6.23  -8.22  -9.88  13.98  -1.49 -28.39  [rand]
   25 v= 0.425491:  -0.55  -2.00  -2.73  -0.06  -0.66   0.83  [rand]
   26 v= 0.522823:  -1.16  -3.95  -4.01   0.61   1.40  -0.24  [rand]
   27 v= 0.506842:  -0.73  -3.86  -3.09   0.83   0.88   0.15  [rand]
   28 v= 0.425771:  -0.34  -1.99  -2.80   0.31  -0.57   1.06  [rand]
   29 v= 0.820194:   0.86  -3.73  -3.03  -3.42  -9.25  18.17  [rand]
   30 v= 0.826160:  -6.13  -8.26  -9.14  15.26  -0.17 -29.89  [rand]
   31 v= 0.427648:  -0.66  -1.59  -2.58   0.25  -0.94   0.94  [rand]
   32 v= 0.428787:  -0.43  -2.24  -2.81   0.09  -0.28   0.89  [rand]
   33 v= 0.428431:  -0.29  -1.44  -2.88  -0.00  -0.95   1.20  [rand]
   34 v= 0.826566:  -6.43  -7.72  -8.91  14.13  -3.11 -30.75  [rand]
   35 v= 0.735680:  -2.89  -6.34  -7.84   8.15   1.04 -14.20  [grid]
   36 v= 1.004882:  -5.57  -8.84  -0.56  23.90  21.19  13.02  [grid]
   37 v= 0.822937:  -6.40  -5.14 -10.76   4.41  -1.92 -39.08  [rand]
   38 v= 0.425031:  -0.52  -1.94  -2.77   0.13  -0.47   1.01  [rand]
   39 v= 0.736871:  -2.61  -5.94  -8.41   6.97   1.32 -14.88  [rand]
   40 v= 0.659563:  -1.23  -6.69  -6.35   4.47   4.12  -4.18  [rand]
  *41 v= 0.423739:  -0.50  -2.12  -2.70   0.10  -0.48   0.83  [grid]
   42 v= 0.452355:  -0.72  -2.55  -3.03   1.02  -0.33   0.40  [rand]
   43 v= 0.425432:  -0.50  -1.99  -2.73   0.29  -0.40   0.93  [rand]
   44 v= 0.428006:  -0.47  -2.10  -2.51  -0.05  -0.48   0.91  [rand]
 + - save #41 for twobest
 + - skip # 7 for twobest: too close to set #41
 + - skip #22 for twobest: too close to set #41
 + - skip # 3 for twobest: too close to set #41
 + - skip #20 for twobest: too close to set #41
 + - skip #38 for twobest: too close to set #41
 + - skip #43 for twobest: too close to set #41
 + - skip #25 for twobest: too close to set #41
 + - skip #28 for twobest: too close to set #41
 + - skip #12 for twobest: too close to set #41
 + - skip # 8 for twobest: too close to set #41
 + - skip # 0 for twobest: too close to set #41
 + - skip #31 for twobest: too close to set #41
 + - skip #44 for twobest: too close to set #41
 + - skip #33 for twobest: too close to set #41
 + - skip #16 for twobest: too close to set #41
 + - skip #32 for twobest: too close to set #41
 + - skip #11 for twobest: too close to set #41
 + - skip # 2 for twobest: too close to set #41
 + - skip #18 for twobest: too close to set #41
 + - skip # 1 for twobest: too close to set #41
 + - skip #19 for twobest: too close to set #41
 + - skip # 6 for twobest: too close to set #41
 + - skip #42 for twobest: too close to set #41
 + - skip #27 for twobest: too close to set #41
 + - skip #26 for twobest: too close to set #41
 + - skip #10 for twobest: too close to set #41
 + - skip #21 for twobest: too close to set #41
 + - skip #23 for twobest: too close to set #41
 + - skip #40 for twobest: too close to set #27
 + - save #35 for twobest
 + - skip #39 for twobest: too close to set #35
 + - skip # 5 for twobest: too close to set #35
 + - save #13 for twobest
 + - save # 9 for twobest
 + - save #17 for twobest
 + - save #15 for twobest
 + - save #29 for twobest
 + - skip #24 for twobest: too close to set #15
 + - save #37 for twobest
 + - skip #30 for twobest: too close to set #15
 + - skip #34 for twobest: too close to set #15
 + - save # 4 for twobest
 + - save #36 for twobest
 + - save #14 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=22 usiz=54
 + - retaining old weight image
 + - using 79460 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 30.5777 .. 132.126; base clip 1422.48 .. 5148.37
 +  - versus source range 0.00137512 .. 123.912; base range 0 .. 6569.56
 + 73025 total points stored in 715 'RHDD(9.42766)' bloks
*[#10940=0.41894] *[#10941=0.402233] *[#10942=0.392529] *[#10943=0.38852] *[#10945=0.386657] *[#10950=0.381822] *[#10954=0.378473] *[#10955=0.374032] *[#10957=0.367711] *[#10958=0.364602] *[#10959=0.362283] *[#10960=0.360924] *[#10961=0.360117] *[#10968=0.359524] *[#10969=0.359177] *[#10970=0.3573] *[#10972=0.35595] *[#10973=0.355483] *[#10975=0.354459] *[#10977=0.353135] *[#10978=0.351328] *[#10979=0.349998] *[#10982=0.349544] *[#10985=0.34935] *[#10986=0.347317] *[#10988=0.346411] *[#10991=0.344695] *[#10992=0.344473] *[#10999=0.343113] *[#11001=0.343053] *[#11002=0.341711] *[#11003=0.339856] *[#11004=0.339398] *[#11005=0.338014] 
 + - param set #1 has cost=0.338014
 + -- Parameters = -0.2987 -2.1372 -2.3812 0.3816 -0.2063 1.0357 0.9899 0.9922 0.9792 0.0003 0.0025 -0.0001
 + - param set #2 has cost=0.485484
 + -- Parameters = -2.8535 -0.6115 -2.1588 -0.2933 7.1843 -0.5271 0.9533 0.9912 0.9260 0.0376 0.0150 0.0610
 + - param set #3 has cost=0.546564
 + -- Parameters = -4.3397 -2.6666 -5.3132 4.5616 7.4092 -12.9464 0.9575 0.9465 0.9794 0.0030 0.0057 -0.0028
 + - param set #4 has cost=0.405027
 + -- Parameters = -3.1622 -0.9719 -0.8059 1.3865 -0.9504 -1.7769 0.9237 0.9723 0.9400 0.0100 0.0425 -0.0064
*[#11404=0.33569] *[#11405=0.329499] *[#11407=0.32708] *[#11408=0.325745] 
 + - param set #5 has cost=0.325745
 + -- Parameters = -0.6050 -1.9723 -1.1572 0.6856 0.2230 0.7553 0.9899 0.9737 0.9468 0.0068 0.0044 0.0201
 + - param set #6 has cost=0.573895
 + -- Parameters = -8.7674 -6.6374 -7.7279 11.5849 10.7681 -37.6749 0.9410 0.9345 0.9182 0.0008 0.0081 0.0061
 + - param set #7 has cost=0.336196
 + -- Parameters = -0.4053 -1.5848 -0.6513 0.5492 -0.2678 1.5156 0.9808 0.9661 0.9233 0.0058 -0.0068 0.0041
 + - param set #8 has cost=0.585859
 + -- Parameters = -8.2451 -3.6988 -10.9212 5.7794 1.4551 -37.6022 0.9381 0.9449 0.9344 -0.0445 -0.0071 0.0073
 + - param set #9 has cost=0.581399
 + -- Parameters = -9.6374 -7.1450 -6.1729 17.0000 -10.5552 -24.0586 0.9143 0.9732 0.9195 -0.0239 0.0357 -0.0142
 + - param set #10 has cost=0.593347
 + -- Parameters = -6.8530 -9.8698 -1.4847 31.4721 15.1107 8.8639 0.9145 0.9355 0.9276 -0.0285 0.0133 0.0375
 + - param set #11 has cost=0.593769
 + -- Parameters = 4.3361 2.5063 -1.4990 -26.8823 -4.3804 22.2352 0.9447 0.9304 0.9421 -0.0220 -0.0151 0.0126
*[#12077=0.325134] *[#12079=0.324297] *[#12081=0.323385] *[#12086=0.32189] *[#12087=0.320304] *[#12088=0.319755] *[#12089=0.318506] *[#12091=0.317889] *[#12092=0.317386] *[#12097=0.316418] *[#12098=0.316116] *[#12102=0.314777] *[#12103=0.313204] *[#12105=0.313189] *[#12106=0.312313] *[#12107=0.311378] *[#12108=0.310362] *[#12109=0.309471] 
 + - param set #12 has cost=0.309471
 + -- Parameters = -0.6016 -1.6313 -2.4494 0.7115 -0.8626 1.1413 0.9661 0.9843 0.9918 0.0046 -0.0040 -0.0015
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.123 
 + --- dist(#3,#1) = 0.187 
 + --- dist(#4,#1) = 0.0648 
 + --- dist(#5,#1) = 0.209 
 + --- dist(#6,#1) = 0.281 
 + --- dist(#7,#1) = 0.157 
 + --- dist(#8,#1) = 0.431 
 + --- dist(#9,#1) = 0.28 
 + --- dist(#10,#1) = 0.43 
 + --- dist(#11,#1) = 0.342 
 + --- dist(#12,#1) = 0.307 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=22 usiz=54
 + - retaining old weight image
 + - using 79460 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 31.1577 .. 134.633; base clip 1426.42 .. 5229.36
 +  - versus source range 9.18495e-07 .. 123.891; base range 0 .. 6586.13
 + 72132 total points stored in 743 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.338366
 + -- Parameters = -0.6047 -1.5050 -2.0962 0.4738 -0.6293 1.0065 0.9811 0.9710 0.9770 0.0086 0.0006 -0.0023
 + - param set #2 has cost=0.344397
 + -- Parameters = -0.6297 -1.9854 -1.7546 0.3998 -0.0924 0.9628 0.9818 0.9790 0.9630 0.0065 0.0033 0.0072
 + - param set #3 has cost=0.351222
 + -- Parameters = -0.4519 -1.5322 -1.1706 0.3574 -0.6507 1.3978 0.9875 0.9790 0.9424 0.0040 -0.0076 -0.0016
 + - param set #4 has cost=0.339179
 + -- Parameters = -0.5316 -1.5172 -2.1357 0.3949 -0.6037 1.1968 0.9814 0.9721 0.9791 0.0062 -0.0037 0.0007
 + - param set #5 has cost=0.353776
 + -- Parameters = -1.3584 -1.3915 -1.4025 0.3109 -1.1929 -0.7210 0.9815 0.9793 0.9528 0.0062 0.0428 -0.0130
 + - param set #6 has cost=0.396422
 + -- Parameters = -1.0088 -2.7958 -1.3363 0.5342 2.5226 0.2486 0.9656 0.9866 0.9510 0.0289 0.0181 0.0600
 + - param set #7 has cost=0.481293
 + -- Parameters = -0.1013 -1.0972 -3.3623 1.9637 -1.0026 -2.8940 0.9742 0.9191 1.0060 -0.0021 0.0598 -0.0284
 + - param set #8 has cost=0.577566
 + -- Parameters = -8.4604 -7.3816 -8.2181 11.8492 11.0768 -37.1240 0.9420 0.9486 0.9208 0.0010 0.0082 0.0068
 + - param set #9 has cost=0.582494
 + -- Parameters = -9.4947 -6.6429 -6.9326 17.7761 -11.5306 -23.4232 0.9051 0.9779 0.9173 -0.0242 0.0459 -0.0148
 + - param set #10 has cost=0.580469
 + -- Parameters = -8.6388 -6.1353 -11.3151 8.3495 3.8753 -35.9210 0.9300 0.9408 0.9291 -0.0446 -0.0088 0.0036
 + - param set #11 has cost=0.582062
 + -- Parameters = -4.4175 -9.2413 -3.3525 35.1650 12.0510 13.7067 0.8984 0.8537 0.8889 -0.0501 0.0095 0.0344
 + - param set #12 has cost=0.581260
 + -- Parameters = 6.4266 1.1062 -3.3660 -17.8105 1.0946 20.6309 0.9470 0.9126 0.9323 -0.0199 -0.0179 -0.0008
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0193 XXX
 + --- dist(#3,#1) = 0.0944 
 + --- dist(#4,#1) = 0.19 
 + --- dist(#5,#1) = 0.28 
 + --- dist(#6,#1) = 0.267 
 + --- dist(#7,#1) = 0.424 
 + --- dist(#8,#1) = 0.41 
 + --- dist(#9,#1) = 0.218 
 + --- dist(#10,#1) = 0.385 
 + --- dist(#11,#1) = 0.271 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=22 usiz=54
 + - retaining old weight image
 + - using 79460 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 31.2967 .. 135.233; base clip 1429.42 .. 5277.03
 +  - versus source range 2.41635e-09 .. 123.882; base range 0 .. 6597.13
 + 72732 total points stored in 748 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.343551
 + -- Parameters = -0.5442 -1.4873 -2.1354 0.4512 -0.7024 0.9974 0.9823 0.9735 0.9746 0.0049 0.0006 -0.0054
 + - param set #2 has cost=0.349944
 + -- Parameters = -0.6319 -1.9805 -1.7567 0.4128 -0.0516 0.9558 0.9818 0.9791 0.9631 0.0065 0.0033 0.0069
 + - param set #3 has cost=0.340768
 + -- Parameters = -0.5841 -1.5969 -1.9880 0.4220 -0.9647 1.0758 0.9798 0.9772 0.9728 0.0000 0.0016 -0.0125
 + - param set #4 has cost=0.350784
 + -- Parameters = -1.2260 -1.4232 -1.6717 0.6427 -1.2372 -0.3468 0.9807 0.9789 0.9634 0.0107 0.0340 -0.0184
 + - param set #5 has cost=0.372092
 + -- Parameters = -0.9759 -2.6602 -1.7418 0.6263 1.1942 0.4472 0.9769 0.9840 0.9614 0.0175 0.0146 0.0332
 + - param set #6 has cost=0.358869
 + -- Parameters = -1.4024 -0.4859 -2.1000 0.3852 -2.6917 -0.5150 0.9674 0.9701 0.9798 -0.0035 0.0365 -0.0383
 + - param set #7 has cost=0.578939
 + -- Parameters = -8.1288 -7.2784 -8.0262 11.8681 12.6927 -37.2029 0.9409 0.9492 0.9224 0.0016 0.0081 0.0079
 + - param set #8 has cost=0.576070
 + -- Parameters = -9.0318 -6.8213 -11.1129 8.4836 4.1143 -35.6559 0.9300 0.9312 0.9303 -0.0481 -0.0024 -0.0057
 + - param set #9 has cost=0.580918
 + -- Parameters = 5.9962 1.6942 -2.5584 -15.4424 5.5003 17.8454 0.9494 0.9069 0.9237 -0.0175 -0.0210 -0.0014
 + - param set #10 has cost=0.583668
 + -- Parameters = -4.2843 -10.6685 -3.3172 35.5001 12.0067 13.6397 0.8990 0.8540 0.8894 -0.0499 0.0092 0.0348
 + - param set #11 has cost=0.584112
 + -- Parameters = -9.5582 -6.9913 -7.0576 17.5995 -11.6580 -23.0819 0.8983 0.9792 0.9175 -0.0234 0.0465 -0.0173
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0321 
 + --- dist(#3,#1) = 0.0874 
 + --- dist(#4,#1) = 0.146 
 + --- dist(#5,#1) = 0.157 
 + --- dist(#6,#1) = 0.206 
 + --- dist(#7,#1) = 0.408 
 + --- dist(#8,#1) = 0.425 
 + --- dist(#9,#1) = 0.192 
 + --- dist(#10,#1) = 0.39 
 + --- dist(#11,#1) = 0.268 
 + - Total coarse refinement net CPU time = 0.0 s; 3230 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=22 usiz=54
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 +  - histogram: source clip 31.2781 .. 135.153; base clip 1429.42 .. 5277.03
 +  - versus source range 9.08436e-12 .. 123.825; base range 0 .. 6597.66
 + 72083 total points stored in 752 'RHDD(9.27904)' bloks
 + - cost(#1)=0.345543 *
 + -- Parameters = -0.5841 -1.5969 -1.9880 0.4220 -0.9647 1.0758 0.9798 0.9772 0.9728 0.0000 0.0016 -0.0125
 + - cost(#2)=0.347842  
 + -- Parameters = -0.5442 -1.4873 -2.1354 0.4512 -0.7024 0.9974 0.9823 0.9735 0.9746 0.0049 0.0006 -0.0054
 + - cost(#3)=0.354981  
 + -- Parameters = -0.6319 -1.9805 -1.7567 0.4128 -0.0516 0.9558 0.9818 0.9791 0.9631 0.0065 0.0033 0.0069
 + - cost(#4)=0.355505  
 + -- Parameters = -1.2260 -1.4232 -1.6717 0.6427 -1.2372 -0.3468 0.9807 0.9789 0.9634 0.0107 0.0340 -0.0184
 + - cost(#5)=0.363389  
 + -- Parameters = -1.4024 -0.4859 -2.1000 0.3852 -2.6917 -0.5150 0.9674 0.9701 0.9798 -0.0035 0.0365 -0.0383
 + - cost(#6)=0.376856  
 + -- Parameters = -0.9759 -2.6602 -1.7418 0.6263 1.1942 0.4472 0.9769 0.9840 0.9614 0.0175 0.0146 0.0332
 + - cost(#7)=0.576384  
 + -- Parameters = -9.0318 -6.8213 -11.1129 8.4836 4.1143 -35.6559 0.9300 0.9312 0.9303 -0.0481 -0.0024 -0.0057
 + - cost(#8)=0.578711  
 + -- Parameters = -8.1288 -7.2784 -8.0262 11.8681 12.6927 -37.2029 0.9409 0.9492 0.9224 0.0016 0.0081 0.0079
 + - cost(#9)=0.580065  
 + -- Parameters = 5.9962 1.6942 -2.5584 -15.4424 5.5003 17.8454 0.9494 0.9069 0.9237 -0.0175 -0.0210 -0.0014
 + - cost(#10)=0.584467  
 + -- Parameters = -4.2843 -10.6685 -3.3172 35.5001 12.0067 13.6397 0.8990 0.8540 0.8894 -0.0499 0.0092 0.0348
 + - cost(#11)=0.585552  
 + -- Parameters = -9.5582 -6.9913 -7.0576 17.5995 -11.6580 -23.0819 0.8983 0.9792 0.9175 -0.0234 0.0465 -0.0173
 + - cost(#12)=0.754711  
 + -- Parameters = -0.1041 -3.2133 -8.5087 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=0.343433 *
 + -- Parameters = -0.4878 -1.3224 -1.9982 0.3663 -1.3324 1.0713 0.9811 0.9779 0.9725 0.0014 0.0006 -0.0182
 + - cost(#2)=0.346336  
 + -- Parameters = -0.5629 -1.4899 -2.0990 0.4294 -0.8001 1.0896 0.9810 0.9745 0.9749 0.0045 0.0001 -0.0087
 + - cost(#3)=0.351543  
 + -- Parameters = -0.5890 -1.9041 -1.8089 0.4135 -0.2173 0.9979 0.9817 0.9789 0.9678 0.0056 0.0024 0.0017
 + - cost(#4)=0.350864  
 + -- Parameters = -0.9862 -1.3900 -1.7413 0.4976 -1.2804 -0.0930 0.9794 0.9788 0.9656 0.0081 0.0281 -0.0193
 + - cost(#5)=0.344338  
 + -- Parameters = -0.8981 -0.6011 -1.9070 0.4310 -2.4111 0.3108 0.9801 0.9702 0.9719 0.0038 0.0158 -0.0401
 + - cost(#6)=0.351275  
 + -- Parameters = -0.9231 -1.4322 -1.7700 0.3084 -0.9959 0.1775 0.9783 0.9775 0.9670 -0.0037 0.0215 -0.0113
 + - cost(#7)=0.576328  
 + -- Parameters = -9.0364 -6.8668 -11.0810 8.4820 4.0959 -35.7206 0.9303 0.9310 0.9300 -0.0480 -0.0027 -0.0057
 + - cost(#8)=0.578006  
 + -- Parameters = -7.9089 -7.4179 -7.7446 11.7391 12.1626 -37.2148 0.9512 0.9483 0.9188 0.0003 0.0172 0.0093
 + - cost(#9)=0.574307  
 + -- Parameters = 5.8740 -0.9755 -0.0238 -15.8132 8.4985 16.0265 0.9655 0.9103 0.9299 -0.0187 -0.0197 -0.0035
 + - cost(#10)=0.582427  
 + -- Parameters = -3.9486 -10.7878 -2.9008 37.8768 11.6603 12.8995 0.8992 0.8553 0.8882 -0.0489 0.0097 0.0352
 + - cost(#11)=0.585181  
 + -- Parameters = -9.7775 -7.0576 -7.0103 17.7063 -11.7145 -22.9762 0.8908 0.9794 0.9168 -0.0234 0.0464 -0.0170
 + - cost(#12)=0.363950  
 + -- Parameters = -0.7653 -2.0510 -1.9831 -0.2577 -0.2579 0.5701 0.9771 0.9773 0.9730 -0.0304 0.0081 0.0037
 + - case #1 is now the best
 + - Initial  cost = 0.343433
 + - Initial fine Parameters = -0.4878 -1.3224 -1.9982 0.3663 -1.3324 1.0713 0.9811 0.9779 0.9725 0.0014 0.0006 -0.0182
 + - Finalish cost = 0.342822 ; 84 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 31.2786 .. 135.155; base clip 1429.42 .. 5277.03
 +  - versus source range 9.08436e-12 .. 123.825; base range 0 .. 6597.66
*[#15479=-0.221556] *[#15486=-0.228062] *[#15487=-0.228562] *[#15510=-0.235653] *[#15518=-0.241731] *[#15519=-0.244429] *[#15522=-0.245155] *[#15544=-0.248374] *[#15560=-0.24854] *[#15561=-0.24884] *[#15568=-0.249659] *[#15573=-0.250254] *[#15576=-0.250927] *[#15577=-0.250954] *[#15579=-0.251534] *[#15580=-0.251937] *[#15585=-0.252497] *[#15590=-0.25251] *[#15591=-0.252759] *[#15596=-0.252996] *[#15601=-0.253047] *[#15607=-0.253215] *[#15610=-0.25352] *[#15611=-0.253676] *[#15614=-0.254076] *[#15617=-0.254401] *[#15623=-0.254688] *[#15628=-0.255793] *[#15630=-0.25599] *[#15631=-0.256428] *[#15632=-0.256642] *[#15633=-0.257352] *[#15634=-0.258014] *[#15635=-0.2581] *[#15640=-0.258427] *[#15641=-0.258883] *[#15644=-0.259392] *[#15645=-0.259549] *[#15646=-0.260347] *[#15647=-0.260537] *[#15648=-0.260596] *[#15650=-0.260733] *[#15651=-0.26134] *[#15652=-0.261543] *[#15655=-0.261745] *[#15656=-0.262054] *[#15657=-0.262284] *[#15658=-0.26246] *[#15661=-0.262463] *[#15665=-0.262518] *[#15667=-0.263081] *[#15670=-0.263085] *[#15674=-0.263239] *[#15675=-0.263271] *[#15677=-0.263457] *[#15678=-0.263665] *[#15681=-0.26379] *[#15688=-0.264011] *[#15691=-0.264032] *[#15693=-0.264242] *[#15698=-0.264386] *[#15699=-0.26449] *[#15702=-0.264558] *[#15707=-0.26473] *[#15708=-0.264851] *[#15711=-0.264946] *[#15716=-0.265094] *[#15719=-0.265276] *[#15722=-0.265405] *[#15727=-0.265619] *[#15728=-0.265727] *[#15741=-0.265811] *[#15746=-0.265845] *[#15747=-0.265862] *[#15759=-0.265938] *[#15773=-0.265966] *[#15776=-0.265986] *[#15779=-0.266002] *[#15780=-0.266009] *[#15781=-0.266011] *[#15782=-0.266012] *[#15785=-0.266037] *[#15786=-0.266075] *[#15787=-0.266131] *[#15789=-0.266154] *[#15790=-0.266169] *[#15791=-0.266186] *[#15794=-0.266196] *[#15795=-0.266198] *[#15796=-0.266201] *[#15797=-0.266205] *[#15800=-0.266261] *[#15801=-0.266303] *[#15802=-0.266343] *[#15804=-0.266344] *[#15805=-0.266393] *[#15806=-0.266424] *[#15807=-0.266453] *[#15808=-0.266466] *[#15815=-0.266475] *[#15816=-0.266475] *[#15818=-0.266486] *[#15821=-0.2665] *[#15822=-0.266505] *[#15825=-0.26651] *[#15826=-0.266511] *[#15828=-0.266515] *[#15831=-0.266515] *[#15833=-0.266524] *[#15836=-0.266526] *[#15837=-0.266531] *[#15842=-0.266542] *[#15843=-0.266543] *[#15844=-0.266545] *[#15845=-0.266546] *[#15848=-0.266548] *[#15851=-0.266552] *[#15852=-0.26656] *[#15855=-0.266569] *[#15858=-0.266569] *[#15859=-0.266573] *[#15860=-0.266574] *[#15864=-0.266583] *[#15869=-0.266588] *[#15870=-0.266591] *[#15875=-0.266592] *[#15876=-0.266593] *[#15881=-0.266598] *[#15884=-0.266601] *[#15887=-0.266602] *[#15888=-0.266604] *[#15891=-0.266604] *[#15893=-0.266605] *[#15896=-0.266608] *[#15897=-0.266612] *[#15902=-0.266614] *[#15911=-0.266619] *[#15912=-0.26662] *[#15913=-0.266621] *[#15914=-0.266622] *[#15915=-0.266624] *[#15918=-0.266624] *[#15920=-0.266626] *[#15923=-0.266628] *[#15926=-0.266628] *[#15927=-0.266631] *[#15928=-0.266632] *[#15931=-0.266636] *[#15940=-0.266642] *[#15941=-0.266645] *[#15944=-0.266647] *[#15947=-0.266649] *[#15952=-0.266653] *[#15957=-0.266659] *[#15960=-0.26666] *[#15967=-0.266661] *[#15972=-0.266661] *[#15973=-0.266661] *[#15984=-0.266662] *[#15987=-0.266662] *[#15994=-0.266663] *[#15997=-0.266664] *[#16007=-0.266664] *[#16018=-0.266665] *[#16019=-0.266666] *[#16024=-0.266666] *[#16027=-0.266667] *[#16034=-0.266668] *[#16041=-0.26667] *[#16044=-0.26667] *[#16056=-0.266671] *[#16061=-0.266672] *[#16065=-0.266672] *[#16067=-0.266672] *[#16068=-0.266672] *[#16073=-0.266673] *[#16088=-0.266674] *[#16105=-0.266674] *[#16106=-0.266674] 
 + - Final    cost = -0.266674 ; 629 funcs
 + Final fine fit Parameters:
       x-shift=-0.4577   y-shift=-0.5401   z-shift=-2.2256
       z-angle= 0.0530   x-angle=-2.8054   y-angle= 0.8523
       x-scale= 1.0137   y-scale= 1.0096   z-scale= 0.9992
     y/x-shear=-0.0071 z/x-shear= 0.0028 z/y-shear=-0.0376
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.4577 -0.5401 -2.2256 0.0530 -2.8054 0.8523 1.0137 1.0096 0.9992 -0.0071 0.0028 -0.0376
++ Output dataset ./__tt_sub-TAG085_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG085_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 170.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 6.092587 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG085_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0083 0.0650 -0.0818 15.9265 -0.0837 -0.0740 -0.9972 189.2331 -0.0637 1.0036 -0.0297 21.7632
++ Output dataset ./sub-TAG085_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG085.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.092587 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG085.r01.despike+orig.BRIK is 6.092587 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG085.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 94802 voxels
 + 14573 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.089  pitch=-0.361  yaw=-0.120  dS=-0.074  dL=-0.090  dP=-0.312
++ Mean: roll=+0.075  pitch=-0.055  yaw=-0.048  dS=+0.122  dL=-0.015  dP=+0.050
++ Max : roll=+0.238  pitch=+0.195  yaw=+0.017  dS=+0.433  dL=+0.032  dP=+0.384
++ Max displacements (mm) for each sub-brick:
 0.88(0.00) 0.83(0.20) 0.90(0.37) 0.81(0.09) 0.71(0.29) 0.76(0.15) 0.72(0.07) 0.84(0.30) 0.93(0.24) 0.79(0.23) 0.85(0.32) 0.84(0.13) 0.85(0.37) 0.86(0.10) 0.81(0.17) 0.85(0.23) 0.80(0.14) 0.85(0.35) 0.79(0.10) 0.73(0.30) 0.72(0.19) 0.74(0.23) 0.81(0.26) 0.73(0.23) 0.81(0.27) 0.83(0.11) 0.95(0.40) 0.92(0.12) 0.77(0.27) 0.75(0.27) 0.77(0.11) 0.87(0.43) 0.90(0.08) 0.79(0.31) 0.79(0.27) 0.77(0.11) 0.80(0.37) 0.77(0.06) 0.69(0.23) 0.71(0.21) 0.68(0.08) 0.68(0.27) 0.79(0.29) 0.68(0.20) 0.72(0.25) 0.72(0.05) 0.76(0.30) 0.73(0.10) 0.71(0.32) 0.73(0.15) 0.75(0.30) 0.81(0.25) 0.66(0.29) 0.70(0.23) 0.70(0.07) 0.79(0.43) 0.71(0.08) 0.65(0.33) 0.66(0.14) 0.62(0.10) 0.67(0.33) 0.66(0.10) 0.61(0.24) 0.64(0.20) 0.67(0.10) 0.72(0.38) 0.80(0.29) 0.74(0.09) 0.64(0.28) 0.71(0.20) 0.67(0.09) 0.74(0.39) 0.75(0.13) 0.63(0.29) 0.63(0.25) 0.60(0.06) 0.68(0.37) 0.70(0.12) 0.59(0.29) 0.62(0.26) 0.59(0.08) 0.61(0.38) 0.63(0.17) 0.50(0.20) 0.54(0.25) 0.55(0.12) 0.52(0.21) 0.49(0.05) 0.49(0.19) 0.55(0.17) 0.54(0.06) 0.49(0.34) 0.54(0.16) 0.51(0.05) 0.48(0.10) 0.53(0.23) 0.55(0.11) 0.54(0.05) 0.48(0.13) 0.57(0.39) 0.57(0.05) 0.55(0.09) 0.53(0.12) 0.54(0.25) 0.57(0.17) 0.53(0.07) 0.53(0.27) 0.60(0.30) 0.53(0.06) 0.48(0.09) 0.47(0.13) 0.53(0.22) 0.59(0.13) 0.53(0.09) 0.40(0.20) 0.49(0.36) 0.49(0.06) 0.42(0.09) 0.40(0.08) 0.45(0.26) 0.49(0.17) 0.48(0.09) 0.44(0.26) 0.56(0.36) 0.54(0.06) 0.47(0.10) 0.43(0.13) 0.48(0.27) 0.55(0.20) 0.50(0.12) 0.42(0.18) 0.50(0.36) 0.53(0.09) 0.46(0.10) 0.41(0.19) 0.46(0.23) 0.51(0.12) 0.44(0.09) 0.38(0.12) 0.49(0.37) 0.53(0.13) 0.44(0.12) 0.40(0.14) 0.45(0.28) 0.50(0.15) 0.45(0.10) 0.39(0.16) 0.44(0.33) 0.57(0.21) 0.52(0.06) 0.42(0.14) 0.45(0.34) 0.55(0.18) 0.50(0.06) 0.44(0.34) 0.48(0.20) 0.44(0.05) 0.37(0.08) 0.36(0.10) 0.37(0.22) 0.41(0.13) 0.37(0.07) 0.31(0.14) 0.44(0.33) 0.50(0.12) 0.43(0.09) 0.36(0.10) 0.40(0.33) 0.46(0.22) 0.48(0.09) 0.37(0.18) 0.39(0.43) 0.46(0.14) 0.41(0.06) 0.32(0.10) 0.32(0.32) 0.40(0.16) 0.46(0.13) 0.36(0.40) 0.43(0.27) 0.46(0.06) 0.45(0.05) 0.37(0.09) 0.33(0.28) 0.43(0.11) 0.39(0.07) 0.38(0.11) 0.31(0.42) 0.52(0.25) 0.49(0.07) 0.24(0.29) 0.25(0.25) 0.35(0.21) 0.38(0.07) 0.32(0.15) 0.20(0.33) 0.24(0.07) 0.19(0.06) 0.14(0.19) 0.31(0.26) 0.38(0.08) 0.24(0.25) 0.19(0.21) 0.18(0.22) 0.30(0.14) 0.27(0.09) 0.23(0.33) 0.28(0.10) 0.21(0.09) 0.16(0.14) 0.25(0.15) 0.32(0.22) 0.35(0.05) 0.27(0.17) 0.21(0.18) 0.41(0.41) 0.45(0.07) 0.28(0.17) 0.16(0.15) 0.25(0.24) 0.39(0.25) 0.47(0.12) 0.39(0.16) 0.25(0.44) 0.31(0.15) 0.17(0.14) 0.19(0.23) 0.26(0.09) 0.23(0.05) 0.22(0.26) 0.25(0.11) 0.15(0.11) 0.27(0.18) 0.31(0.12) 0.27(0.10) 0.27(0.12) 0.17(0.27) 0.37(0.24) 0.34(0.06) 0.13(0.23) 0.25(0.25) 0.41(0.18) 0.37(0.10) 0.21(0.39) 0.23(0.08) 0.12(0.13) 0.24(0.22) 0.37(0.13) 0.36(0.09) 0.25(0.41) 0.36(0.16) 0.21(0.15) 0.14(0.22) 0.26(0.15) 0.36(0.11) 0.18(0.29) 0.23(0.17) 0.13(0.21) 0.32(0.23) 0.33(0.07) 0.25(0.37) 0.30(0.12) 0.14(0.17) 0.23(0.26) 0.40(0.19) 0.33(0.11) 0.24(0.40) 0.27(0.09) 0.11(0.19) 0.23(0.21) 0.36(0.14) 0.30(0.09) 0.26(0.39) 0.33(0.12) 0.12(0.22) 0.23(0.27) 0.32(0.10) 0.22(0.16) 0.27(0.33) 0.28(0.06) 0.13(0.25) 0.28(0.21) 0.35(0.10) 0.26(0.14) 0.25(0.36) 0.28(0.07) 0.14(0.14) 0.18(0.27) 0.30(0.12) 0.30(0.08) 0.20(0.37) 0.28(0.14) 0.17(0.14) 0.11(0.23) 0.16(0.06) 0.26(0.14) 0.17(0.33) 0.30(0.18) 0.20(0.10) 0.05(0.21) 0.20(0.18) 0.32(0.14) 0.33(0.15) 0.18(0.37) 0.27(0.18) 0.24(0.06) 0.00(0.24) 0.23(0.23) 0.35(0.12) 0.24(0.16) 0.22(0.38) 0.22(0.05) 0.13(0.10) 0.05(0.14) 0.25(0.24) 0.39(0.16) 0.43(0.17) 0.24(0.52) 0.33(0.18) 0.24(0.11) 0.09(0.17) 0.17(0.24) 0.38(0.22) 0.46(0.12) 0.21(0.36) 0.25(0.24) 0.23(0.03) 0.18(0.05) 0.15(0.24) 0.35(0.21) 0.33(0.06) 0.17(0.32) 0.21(0.16) 0.14(0.12) 0.21(0.26) 0.32(0.13) 0.26(0.10) 0.19(0.30) 0.20(0.07) 0.13(0.09) 0.16(0.21) 0.39(0.24) 0.43(0.08) 0.24(0.28) 0.32(0.30) 0.27(0.06) 0.17(0.15) 0.33(0.27) 0.49(0.16) 0.31(0.25) 0.25(0.34) 0.22(0.04) 0.15(0.17) 0.37(0.27) 0.44(0.11) 0.26(0.34) 0.29(0.20) 0.24(0.08) 0.24(0.26) 0.36(0.13) 0.23(0.17) 0.26(0.26) 0.23(0.17) 0.33(0.26) 0.37(0.07) 0.24(0.24) 0.25(0.17) 0.21(0.05) 0.23(0.17) 0.45(0.27) 0.46(0.05) 0.25(0.25) 0.30(0.33) 0.29(0.06) 0.22(0.18) 0.34(0.24) 0.41(0.08) 0.23(0.25) 0.29(0.23) 0.26(0.05) 0.21(0.10) 0.34(0.26) 0.48(0.15) 0.31(0.19) 0.28(0.31) 0.27(0.06) 0.28(0.20) 0.39(0.15) 0.29(0.18) 0.33(0.27)
++ Max displacement in automask = 0.95 (mm) at sub-brick 26
++ Max delta displ  in automask = 0.52 (mm) at sub-brick 317
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG085.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG085_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG085_SurfVol_ns+orig -input pb01.sub-TAG085.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG085.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG085.r01.despike+orig.BRIK is 6.092587 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG085.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG085_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.7
++ ###########################################################
3dAllineate -base sub-TAG085_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 6.092587 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG085.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.092587 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG085.r02.despike+orig.BRIK is 6.092587 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG085.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 95025 voxels
 + 14793 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.539  pitch=-0.993  yaw=-0.164  dS=-1.081  dL=+0.091  dP=-1.065
++ Mean: roll=-0.402  pitch=-0.434  yaw=-0.071  dS=-0.757  dL=+0.232  dP=-0.812
++ Max : roll=-0.187  pitch=-0.092  yaw=+0.008  dS=-0.599  dL=+0.352  dP=-0.586
++ Max displacements (mm) for each sub-brick:
 3.26(0.00) 3.26(0.06) 2.92(0.40) 2.62(0.30) 2.64(0.15) 2.99(0.41) 2.98(0.09) 2.67(0.39) 2.60(0.09) 2.92(0.41) 2.97(0.13) 2.68(0.39) 2.54(0.17) 2.93(0.51) 3.04(0.12) 2.80(0.40) 2.59(0.27) 2.57(0.09) 2.83(0.38) 2.98(0.18) 2.75(0.28) 2.46(0.32) 2.39(0.14) 2.70(0.40) 2.93(0.25) 2.69(0.29) 2.38(0.35) 2.38(0.10) 2.79(0.47) 2.55(0.34) 2.34(0.24) 2.43(0.18) 2.80(0.41) 2.80(0.09) 2.49(0.38) 2.30(0.23) 2.47(0.31) 2.79(0.36) 2.54(0.34) 2.30(0.27) 2.29(0.16) 2.68(0.43) 2.66(0.17) 2.34(0.37) 2.39(0.16) 2.76(0.41) 2.66(0.18) 2.30(0.42) 2.17(0.15) 2.46(0.42) 2.73(0.28) 2.58(0.26) 2.31(0.31) 2.27(0.08) 2.59(0.37) 2.79(0.21) 2.64(0.20) 2.38(0.32) 2.22(0.18) 2.45(0.31) 2.71(0.29) 2.42(0.34) 2.22(0.22) 2.44(0.26) 2.70(0.29) 2.55(0.23) 2.25(0.35) 2.17(0.12) 2.52(0.44) 2.64(0.14) 2.46(0.24) 2.16(0.34) 2.06(0.13) 2.39(0.41) 2.66(0.30) 2.49(0.24) 2.22(0.30) 2.12(0.13) 2.51(0.45) 2.63(0.13) 2.42(0.26) 2.13(0.33) 2.07(0.08) 2.49(0.49) 2.45(0.14) 2.13(0.35) 2.18(0.12) 2.55(0.43) 2.52(0.10) 2.17(0.39) 2.08(0.10) 2.37(0.32) 2.61(0.26) 2.41(0.26) 2.20(0.23) 2.16(0.09) 2.58(0.48) 2.37(0.28) 2.10(0.30) 2.25(0.18) 2.62(0.40) 2.54(0.13) 2.19(0.42) 2.04(0.19) 2.14(0.20) 2.56(0.46) 2.44(0.19) 2.12(0.36) 2.02(0.10) 2.31(0.36) 2.61(0.31) 2.35(0.33) 2.13(0.25) 2.10(0.08) 2.38(0.34) 2.52(0.16) 2.29(0.29) 1.98(0.34) 1.90(0.13) 2.24(0.38) 2.48(0.25) 2.22(0.29) 1.98(0.25) 2.01(0.08) 2.43(0.45) 2.38(0.10) 2.10(0.32) 1.92(0.20) 1.99(0.13) 2.41(0.46) 2.50(0.11) 2.21(0.34) 2.00(0.23) 1.95(0.12) 2.36(0.46) 2.38(0.06) 2.13(0.31) 1.93(0.22) 2.03(0.14) 2.42(0.43) 2.42(0.09) 2.12(0.34) 1.93(0.22) 1.91(0.05) 2.16(0.30) 2.47(0.33) 2.44(0.09) 2.18(0.32) 1.96(0.24) 1.93(0.07) 2.26(0.39) 2.45(0.21) 2.27(0.22) 2.01(0.30) 1.92(0.11) 2.25(0.39) 2.42(0.18) 2.05(0.42) 1.90(0.18) 2.20(0.35) 2.38(0.21) 2.09(0.33) 1.93(0.21) 2.23(0.35) 2.42(0.22) 2.07(0.42) 1.94(0.14) 2.05(0.20) 2.49(0.48) 2.48(0.12) 2.15(0.38) 1.97(0.20) 2.22(0.30) 2.48(0.29) 2.33(0.21) 2.03(0.33) 1.99(0.10) 2.38(0.42) 2.48(0.11) 2.20(0.32) 2.00(0.22) 2.03(0.07) 2.34(0.37) 2.43(0.10) 2.18(0.29) 1.96(0.24) 2.02(0.11) 2.41(0.42) 2.35(0.13) 2.01(0.40) 1.93(0.10) 2.12(0.26) 2.50(0.43) 2.49(0.09) 2.29(0.25) 2.03(0.30) 1.92(0.16) 2.25(0.41) 2.52(0.30) 2.40(0.16) 2.14(0.29) 2.05(0.11) 2.32(0.33) 2.50(0.20) 2.35(0.21) 2.07(0.32) 1.91(0.19) 2.01(0.19) 2.45(0.49) 2.27(0.26) 2.01(0.30) 2.01(0.07) 2.35(0.39) 2.46(0.13) 2.21(0.30) 1.97(0.27) 1.98(0.07) 2.43(0.51) 2.41(0.11) 2.08(0.37) 1.95(0.17) 2.09(0.21) 2.46(0.42) 2.35(0.21) 2.04(0.35) 1.94(0.12) 2.24(0.38) 2.36(0.14) 2.04(0.37) 1.89(0.17) 2.07(0.26) 2.43(0.40) 2.30(0.19) 2.01(0.34) 1.93(0.08) 2.27(0.40) 2.38(0.14) 2.22(0.21) 1.94(0.31) 1.77(0.22) 2.16(0.45) 2.39(0.25) 2.18(0.24) 1.89(0.31) 1.80(0.11) 2.19(0.43) 2.32(0.15) 2.01(0.36) 1.81(0.21) 1.84(0.08) 2.18(0.37) 2.23(0.07) 2.03(0.23) 1.89(0.17) 2.10(0.28) 2.29(0.21) 2.02(0.33) 1.83(0.21) 2.09(0.33) 2.34(0.27) 2.11(0.30) 1.88(0.27) 1.93(0.11) 2.32(0.45) 2.36(0.08) 2.03(0.37) 1.86(0.19) 1.95(0.18) 2.32(0.41) 2.30(0.07) 2.07(0.30) 1.89(0.20) 2.05(0.20) 2.33(0.31) 2.25(0.13) 2.01(0.26) 1.94(0.07) 2.32(0.43) 2.28(0.14) 1.94(0.37) 1.84(0.14) 2.12(0.37) 2.33(0.23) 1.98(0.39) 1.85(0.15) 2.01(0.26) 2.37(0.38) 2.13(0.32) 1.90(0.25) 2.04(0.20) 2.36(0.35) 2.13(0.37) 1.88(0.29) 2.00(0.24) 2.37(0.42) 2.16(0.28) 1.92(0.29) 2.00(0.19) 2.35(0.39) 2.09(0.35) 1.86(0.25) 2.12(0.37) 2.36(0.24) 2.12(0.32) 1.90(0.26) 1.92(0.10) 2.35(0.48) 2.34(0.10) 2.04(0.35) 1.87(0.18) 2.08(0.29) 2.35(0.29) 2.05(0.40) 1.93(0.13) 2.27(0.44) 2.34(0.07) 2.04(0.38) 1.91(0.15) 2.20(0.35) 2.26(0.07) 1.94(0.36) 1.92(0.13) 2.27(0.42) 2.34(0.09) 2.05(0.35) 1.82(0.24) 1.82(0.12) 2.19(0.42) 2.33(0.14) 2.09(0.31) 1.92(0.20) 1.86(0.10) 2.09(0.30) 2.43(0.41) 2.38(0.10) 2.10(0.33) 1.90(0.24) 1.84(0.11) 2.26(0.54) 2.40(0.16) 2.15(0.34) 1.88(0.35) 2.05(0.23) 2.32(0.33) 2.19(0.23) 1.91(0.31) 1.86(0.09) 2.17(0.38) 2.24(0.10) 1.96(0.34) 1.82(0.18) 1.86(0.14) 2.22(0.41) 2.25(0.07) 1.94(0.34) 1.77(0.20) 1.86(0.14) 2.21(0.40) 2.18(0.09) 1.89(0.34) 1.78(0.13) 1.86(0.11) 2.19(0.38) 2.13(0.11) 1.88(0.31) 1.84(0.06) 2.19(0.40) 2.25(0.11) 1.98(0.32) 1.77(0.23) 1.89(0.18) 2.24(0.40) 2.11(0.22) 1.85(0.30) 1.97(0.18) 2.27(0.36) 2.06(0.28) 1.76(0.34) 2.01(0.35) 2.30(0.30) 2.13(0.22) 1.82(0.36) 1.76(0.09) 2.13(0.44) 2.23(0.11) 1.91(0.39) 1.89(0.07) 2.19(0.39) 2.24(0.08) 1.90(0.40)
++ Max displacement in automask = 3.26 (mm) at sub-brick 0
++ Max delta displ  in automask = 0.54 (mm) at sub-brick 338
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG085.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG085_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG085_SurfVol_ns+orig -input pb01.sub-TAG085.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG085.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG085.r02.despike+orig.BRIK is 6.092587 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG085.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG085_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.9
++ ###########################################################
3dAllineate -base sub-TAG085_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 6.092587 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.9
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG085.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG085.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG085.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG085.r02.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG085_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG085_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.092587 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG085_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy sub-TAG085_SurfVol_ns+orig anat_final.sub-TAG085
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG085+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 1916 survived, 16775300 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 208628 survived, 16568588 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG085.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG085.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG085.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
foreach run ( 01 02 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG085.r01.blur pb02.sub-TAG085.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG085.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG085.r02.blur pb02.sub-TAG085.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG085.r02.blur+orig.BRIK
end
foreach run ( 01 02 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG085.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG085.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2046.106323
 + Used gradual clip level = 1877.383667 .. 2186.152588
 + Number voxels above clip level = 85839
 + Clustering voxels ...
 + Largest cluster has 82246 voxels
 + Clustering voxels ...
 + Largest cluster has 81400 voxels
 + Filled   365 voxels in small holes; now have 81765 voxels
 + Filled  1133 voxels in large holes; now have 82898 voxels
 + Clustering voxels ...
 + Largest cluster has 82896 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 978312 voxels
 + Mask now has 82896 voxels
++ 82896 voxels in the mask [out of 1061208: 7.81%]
++ first  24 x-planes are zero [from R]
++ last   25 x-planes are zero [from L]
++ first  14 y-planes are zero [from S]
++ last   32 y-planes are zero [from I]
++ first  13 z-planes are zero [from P]
++ last   22 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG085.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG085.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2044.273315
 + Used gradual clip level = 1899.071045 .. 2164.172119
 + Number voxels above clip level = 85967
 + Clustering voxels ...
 + Largest cluster has 82331 voxels
 + Clustering voxels ...
 + Largest cluster has 81437 voxels
 + Filled   365 voxels in small holes; now have 81802 voxels
 + Filled  1162 voxels in large holes; now have 82964 voxels
 + Clustering voxels ...
 + Largest cluster has 82963 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 978245 voxels
 + Mask now has 82963 voxels
++ 82963 voxels in the mask [out of 1061208: 7.82%]
++ first  24 x-planes are zero [from R]
++ last   26 x-planes are zero [from L]
++ first  14 y-planes are zero [from S]
++ last   32 y-planes are zero [from I]
++ first  13 z-planes are zero [from P]
++ last   22 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD -union -prefix full_mask.sub-TAG085
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 2 volumes gives min count 0
++ voxel limits: 0 clipped, 83369 survived, 977839 were zero
++ writing result full_mask.sub-TAG085...
++ Output dataset ./full_mask.sub-TAG085+orig.BRIK
3dresample -master full_mask.sub-TAG085+orig -input sub-TAG085_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG085
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 90162 survived, 971046 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG085...
++ Output dataset ./mask_anat.sub-TAG085+orig.BRIK
3dmask_tool -input full_mask.sub-TAG085+orig mask_anat.sub-TAG085+orig -inter -prefix mask_epi_anat.sub-TAG085
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 17611 clipped, 77960 survived, 965637 were zero
++ writing result mask_epi_anat.sub-TAG085...
++ Output dataset ./mask_epi_anat.sub-TAG085+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG085+orig mask_anat.sub-TAG085+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG085+orig mask_anat.sub-TAG085+orig
foreach run ( 01 02 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG085.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG085.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG085+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG085.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG085.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG085.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG085.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG085+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG085.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG085.r02.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG085
1deval -a motion_sub-TAG085_censor.1D -b outcount_sub-TAG085_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 2
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 2 -set_run_lengths 390 390 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 2 -set_run_lengths 390 390 -write bpass.r02.1D
end
1dcat bpass.r01.1D bpass.r02.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG085_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 )
1d_tool.py -set_run_lengths 390 390 -select_runs 01 -infile censor_sub-TAG085_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG085.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 129 ; remaining = 261
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 261 retained time points MINUS 4 regressors ==> 257 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 638922 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 1h 46m 6s 918ms
end
1d_tool.py -set_run_lengths 390 390 -select_runs 02 -infile censor_sub-TAG085_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG085.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 281 ; remaining = 109
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 109 retained time points MINUS 4 regressors ==> 105 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 638922 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 2h 14m 52s 908ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 2.7 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG085_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG085.r01.scale+orig.HEAD pb04.sub-TAG085.r02.scale+orig.HEAD -mask full_mask.sub-TAG085+orig -censor censor_sub-TAG085_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG085 -errts errts.sub-TAG085 -x1D_stop -bucket stats.sub-TAG085
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 557 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 780 (before censor) ; 370 (after)
 + Number of parameters:  565 [565 baseline ; 0 signal]
[7m** ERROR:[0m  *** Censoring has made regression impossible :( ***
[7m** FATAL ERROR:[0m 3dDeconvolve dies: Insufficient data (370) for estimating 565 parameters
** Program compile date = Jul  6 2018
