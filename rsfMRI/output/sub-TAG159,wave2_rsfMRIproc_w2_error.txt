echo auto-generated by afni_proc.py, Tue Jan 22 09:48:14 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG159
endif
set output_dir = sub-TAG159.results
if ( -d sub-TAG159.results ) then
set runs = ( `count -digits 2 1 2` )
count -digits 2 1 2
mkdir sub-TAG159.results
mkdir sub-TAG159.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG159/SUMA/sub-TAG159_SurfVol.nii.gz sub-TAG159.results/sub-TAG159_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG159/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG159.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG159/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG159.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG159/SUMA/sub-TAG159_vent.nii.gz sub-TAG159.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG159/SUMA/sub-TAG159_WM.nii.gz sub-TAG159.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG159.results/pb00.sub-TAG159.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG159/ses-wave2/func/sub-TAG159_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 7.9 s
3dTcat -prefix sub-TAG159.results/pb00.sub-TAG159.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG159/ses-wave2/func/sub-TAG159_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.1 s
set tr_counts = ( 390 390 )
cd sub-TAG159.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG159.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG159.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG159.r01.tcat+orig.BRIK is 18.039904 degrees from plumb.
++ 91966 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG159.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG159.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG159.r02.tcat+orig.BRIK is 18.039904 degrees from plumb.
++ 91829 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 -index_to_run_tr 669
set minoutrun = 02
set minouttr = 279
tee out.min_outlier.txt
echo min outlier: run 02, TR 279
foreach run ( 01 02 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG159.r01.despike pb00.sub-TAG159.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG159.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG159.r01.tcat+orig.BRIK is 18.039904 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG159.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 383ms

++ FINAL: 162612060 data points, 6204244 edits [3.815%], 367437 big edits [0.226%]
++ Output dataset ./pb01.sub-TAG159.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG159.r02.despike pb00.sub-TAG159.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG159.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG159.r02.tcat+orig.BRIK is 18.039904 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG159.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 429ms

++ FINAL: 162614010 data points, 6072375 edits [3.734%], 349131 big edits [0.215%]
++ Output dataset ./pb01.sub-TAG159.r02.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG159.r02.despike+orig[279]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG159_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG159_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 18.039904 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2652.219238
 + Used gradual clip level = 2483.144775 .. 2768.451904
 + Number voxels above clip level = 94384
 + Clustering voxels ...
 + Largest cluster has 92489 voxels
 + Clustering voxels ...
 + Largest cluster has 91084 voxels
 + Filled   767 voxels in small holes; now have 91851 voxels
 + Filled     7 voxels in large holes; now have 91858 voxels
 + Clustering voxels ...
 + Largest cluster has 91858 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 331490 voxels
 + Mask now has 91870 voxels
++ 91870 voxels in the mask [out of 423360: 21.70%]
++ first  15 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    4 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 18.039904 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 18.039904 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG159_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1575476 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 91870 voxels [20.3%] in weight mask
++ Output dataset ./__tt_sub-TAG159_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 91870
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 42.758 39.019 34.500 (index)
 + source center of mass = 136.642 172.101 184.519 (index)
 + source-target CM = -0.338 -0.529 -1.758 (xyz)
 + center of mass shifts = -0.338 -0.529 -1.758
++ shift param auto-range: -66.9..66.3 -67.1..66.1 -52.3..48.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.338493 .. 9.661507
 + Range param#2 [y-shift] = -10.528648 .. 9.471352
 + Range param#3 [z-shift] = -11.758198 .. 8.241802
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.338493 .. 39.661507
 + Range param#2 [y-shift] = -40.528648 .. 39.471352
 + Range param#3 [z-shift] = -41.758198 .. 38.241802
 + 12 free parameters
++ Normalized convergence radius = 0.000436
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1575476 [out of 29130840] voxels
 + base mask has 115605 [out of 451584] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=33 usiz=69
 + - copying weight image
 + - using 91870 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 41.2578 .. 175.296; base clip 1824.04 .. 6535.55
 +  - versus source range 0.00658262 .. 165.543; base range 0 .. 8422.72
 + 82964 total points stored in 795 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+oo-oo+ooo-+o+$-+- + - best 45 costs found:
    0 v= 0.312957:  -0.34  -0.53  -1.76   0.00   0.00   0.00  [grid]
    1 v= 0.759333:  12.99 -13.86  11.58  15.00  15.00  30.00  [grid]
    2 v= 0.763031:  13.87   8.92  -6.60  15.99 -13.53  29.93  [rand]
    3 v= 0.774805: -14.54  -9.98   3.08 -15.99  13.53 -29.93  [rand]
    4 v= 0.797246: -13.67 -13.86  11.58 -15.00  15.00 -30.00  [grid]
    5 v= 0.798182:  17.99  25.62  -7.80  -6.51 -20.18   7.56  [rand]
    6 v= 0.807327: -27.01 -13.86  11.58  15.00  15.00 -15.00  [grid]
    7 v= 0.815938: -13.67 -13.86  11.58  30.00  15.00  15.00  [grid]
    8 v= 0.847568:   8.30  19.90 -19.23 -25.20 -18.50 -13.54  [rand]
    9 v= 0.853931: -14.54   8.92  -6.60 -15.99 -13.53 -29.93  [rand]
   10 v= 0.862686: -13.67  26.14 -15.09 -30.00 -15.00 -30.00  [grid]
   11 v= 0.865495:  26.33 -13.86  11.58 -15.00  15.00  15.00  [grid]
   12 v= 0.876630: -27.01  12.80 -15.09 -15.00 -15.00 -30.00  [grid]
   13 v= 0.879463:  26.33 -13.86  24.91 -15.00  15.00  30.00  [grid]
   14 v= 0.885543:  -8.98  19.90 -19.23  25.20 -18.50  13.54  [rand]
   15 v= 0.887628: -18.67  25.62  -7.80   6.51 -20.18  -7.56  [rand]
   16 v= 0.888959: -27.01  12.80 -15.09  15.00 -15.00 -15.00  [grid]
   17 v= 0.896897:  32.15  14.16  10.05 -11.16  -9.40  34.39  [rand]
   18 v= 0.902715: -13.67  12.80 -15.09 -30.00 -15.00 -30.00  [grid]
   19 v= 0.904132: -27.01  26.14 -15.09  15.00 -30.00 -15.00  [grid]
   20 v= 0.905847: -13.67  12.80 -15.09  30.00 -15.00  15.00  [grid]
   21 v= 0.910520:  12.99  12.80 -15.09  30.00 -15.00  30.00  [grid]
   22 v= 0.927830: -27.01  26.14 -15.09 -15.00 -30.00 -30.00  [grid]
   23 v= 0.931154: -13.67  12.80 -15.09 -15.00 -15.00 -15.00  [grid]
   24 v= 0.933053:  13.87  -9.98   3.08  15.99  13.53  29.93  [rand]
   25 v= 0.933736: -27.01 -13.86  24.91  15.00  15.00 -30.00  [grid]
   26 v= 0.934681: -32.18  11.27  -4.50 -23.31  -3.26 -40.47  [rand]
   27 v= 0.936065: -32.18  11.27   0.98 -23.31  -3.26 -40.47  [rand]
   28 v= 0.938602:  26.33 -13.86  24.91 -15.00  15.00  15.00  [grid]
   29 v= 0.954900:  13.87   8.92   3.08  15.99 -13.53  29.93  [rand]
   30 v= 0.955509:  26.33  26.14 -15.09  15.00 -30.00  30.00  [grid]
   31 v= 0.967419: -32.82 -15.22  10.05  11.16   9.40 -34.39  [rand]
   32 v= 0.970007:  33.99  16.06   6.84  16.34  -8.64  40.54  [rand]
   33 v= 0.970739:  12.99  12.80 -15.09  15.00 -15.00  15.00  [grid]
   34 v= 0.979058:  -8.98 -20.96  15.71  25.20  18.50  13.54  [rand]
   35 v= 0.979141: -13.67 -13.86  11.58  15.00  15.00 -15.00  [grid]
   36 v= 0.988467: -13.67  12.80 -15.09 -15.00 -15.00 -30.00  [grid]
   37 v= 0.996856:  32.15  14.16  10.05  11.16  -9.40  34.39  [rand]
   38 v= 0.997527:  12.99  26.14 -15.09 -30.00 -15.00 -15.00  [grid]
   39 v= 1.001992: -15.63 -21.42  28.63  14.56  29.40 -15.92  [rand]
   40 v= 1.009518:  12.99 -13.86  11.58 -30.00  15.00 -15.00  [grid]
   41 v= 1.022805: -34.66  16.06 -10.36 -16.34  -8.64 -40.54  [rand]
   42 v= 1.030142:  12.99  12.80 -15.09 -30.00 -15.00 -15.00  [grid]
   43 v= 1.034483:  26.33  26.14 -15.09 -15.00 -30.00  15.00  [grid]
   44 v= 1.035466: -34.66  16.06   6.84 -16.34  -8.64 -40.54  [rand]
*[#8004=0.239703] *[#8013=0.148519] *[#8017=0.112272] *[#8018=0.0949636] *[#8019=0.0949538] *[#8021=0.0801089]  + - costs of the above after a little optimization:
  * 0 v= 0.080109:  -0.39  -1.02   1.23  -0.15   0.90  -0.24  [grid]
    1 v= 0.705313:  10.29 -13.05  10.60  15.85  12.20  30.37  [grid]
    2 v= 0.390666:   1.94   6.90  -2.78  -1.42  -4.95   0.04  [rand]
    3 v= 0.682600: -17.89  -9.03   5.34  -8.78   8.55 -27.81  [rand]
    4 v= 0.715005: -13.88 -12.07   9.19 -10.20  13.21 -27.35  [grid]
    5 v= 0.571185:  14.22  11.93  -4.10  -9.30 -13.96   5.51  [rand]
    6 v= 0.352259:  -1.23  -8.60   2.55   0.65   5.09   0.02  [grid]
    7 v= 0.773193: -13.16 -10.74   8.64  30.67  16.35  14.32  [grid]
    8 v= 0.522701:   1.41  10.12  -5.14   4.65 -10.41   2.50  [rand]
    9 v= 0.648535: -17.32  10.24  -7.25 -13.47  -8.29 -25.63  [rand]
   10 v= 0.649433: -13.89   4.80  -4.30 -16.42  -3.19 -26.35  [grid]
   11 v= 0.334131:   6.60  -4.79   3.80  -1.15   3.64   4.03  [grid]
   12 v= 0.623452: -22.80  10.84  -6.52  -3.56 -11.08 -23.67  [grid]
   13 v= 0.768087:  27.20 -13.80  22.59 -10.27  13.97  29.00  [grid]
   14 v= 0.516200: -13.66   3.08  -3.49   9.76  -6.43  -4.89  [rand]
   15 v= 0.447792:  -4.80   4.20  -2.96   2.24  -7.10  -1.66  [rand]
   16 v= 0.554836: -16.50   5.40  -2.34  14.51  -6.05  -4.49  [grid]
   17 v= 0.519407:   4.71  11.84  -6.42  -3.63 -12.83   2.10  [rand]
   18 v= 0.519614:  -7.86  10.35  -5.57   7.04 -10.54  -1.41  [grid]
   19 v= 0.538251:  -7.57   1.15  -4.24   6.24  -8.28  -4.27  [grid]
   20 v= 0.511229:  -1.26  11.67  -5.66   2.93 -12.87   0.80  [grid]
   21 v= 0.632867:  12.55   7.92  -4.99  14.36  -9.42  22.66  [grid]
   22 v= 0.755431: -25.75  23.27 -11.93 -11.85 -22.54 -29.84  [grid]
   23 v= 0.251749:  -3.83   1.97   0.94   0.81  -0.89  -2.25  [grid]
   24 v= 0.680286:  14.30  -7.72   6.98  17.63   7.90  32.40  [rand]
   25 v= 0.667231: -28.02  -8.98   9.61  15.03   8.30 -19.75  [grid]
   26 v= 0.652172: -27.96   4.95  -3.68 -10.17  -5.89 -34.02  [rand]
   27 v= 0.662520: -28.71   3.68  -1.82 -12.05  -3.63 -37.39  [rand]
   28 v= 0.700863:  25.64 -10.31  17.64 -13.13  11.83  20.35  [grid]
   29 v= 0.615804:  16.08   6.48  -2.01  10.12  -7.25  23.64  [rand]
   30 v= 0.577039:  16.40   7.05  -6.44  -6.75 -10.11  10.88  [grid]
   31 v= 0.622263: -26.86   7.77  -3.67   5.67 -10.69 -21.68  [rand]
   32 v= 0.658682:  30.24   7.47   3.87   9.72  -9.05  37.67  [rand]
   33 v= 0.405315:   2.79   6.43  -2.14  -2.48  -5.93   0.37  [grid]
   34 v= 0.692689:  -8.62 -10.91   9.33  18.36  12.57   6.94  [rand]
   35 v= 0.581178: -15.63 -11.26   7.80   9.05   9.51  -9.27  [grid]
   36 v= 0.326498:  -3.79   4.46  -1.53   0.04  -2.77  -2.90  [grid]
   37 v= 0.605309:  21.81   6.58  -1.27   3.16  -8.67  23.18  [rand]
   38 v= 0.614555:  -9.10  14.12 -11.31  -1.25 -17.28  -6.36  [grid]
   39 v= 0.613748: -25.75  -3.92   3.82  14.11   2.17 -15.49  [rand]
   40 v= 0.776283:  10.60  -9.56   7.43 -27.11  15.12 -14.90  [grid]
   41 v= 0.672605: -34.20   8.44  -2.45 -10.87  -9.85 -40.64  [rand]
   42 v= 0.424669:   5.11  -1.08  -1.06  -5.35  -2.60   1.76  [grid]
   43 v= 0.434805:   8.57  -4.63  -0.05  -3.61   1.81   5.58  [grid]
   44 v= 0.657364: -31.83   5.64  -0.12  -7.31  -5.53 -36.74  [rand]
 + - save # 0 for twobest
 + - skip #23 for twobest: too close to set # 0
 + - skip #36 for twobest: too close to set #23
 + - save #11 for twobest
 + - save # 6 for twobest
 + - save # 2 for twobest
 + - skip #33 for twobest: too close to set # 2
 + - save #42 for twobest
 + - skip #43 for twobest: too close to set #11
 + - skip #15 for twobest: too close to set #36
 + - save #20 for twobest
 + - save #14 for twobest
 + - save #17 for twobest
 + - save #18 for twobest
 + - skip # 8 for twobest: too close to set #20
 + - skip #19 for twobest: too close to set #15
 + - save #16 for twobest
 + - save # 5 for twobest
 + - save #30 for twobest
 + - save #35 for twobest
 + - save #37 for twobest
 + - save #39 for twobest
 + - save #38 for twobest
 + - save #29 for twobest
 + - save #31 for twobest
 + - save #12 for twobest
 + - skip #21 for twobest: too close to set #29
 + - save # 9 for twobest
 + - save #10 for twobest
 + - save #26 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=33 usiz=69
 + - retaining old weight image
 + - using 91870 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 41.354 .. 176.028; base clip 1829.3 .. 6654.3
 +  - versus source range 0.000337919 .. 165.459; base range 0 .. 8440.57
 + 84533 total points stored in 829 'RHDD(9.42766)' bloks
 + - param set #1 has cost=0.110857
 + -- Parameters = -0.5253 -1.0905 1.1742 -0.0171 0.6723 -0.3063 0.9943 1.0066 1.0003 0.0002 0.0000 -0.0020
 + - param set #2 has cost=0.139475
 + -- Parameters = -0.7352 -1.8780 2.8337 0.2069 1.6233 -0.2839 0.9999 0.9939 0.9832 0.0096 0.0003 0.0012
 + - param set #3 has cost=0.121313
 + -- Parameters = 0.4606 -3.2210 2.6764 0.0491 2.0261 0.5665 1.0044 1.0093 0.9875 0.0038 -0.0050 0.0080
 + - param set #4 has cost=0.141197
 + -- Parameters = -0.0706 0.2002 0.1628 -0.0790 -0.0590 0.0976 0.9887 0.9986 1.0082 -0.0064 -0.0084 -0.0071
 + - param set #5 has cost=0.211394
 + -- Parameters = 0.1139 1.7707 1.0967 -0.5945 0.3517 -0.1995 0.9920 0.9753 1.0009 -0.0172 0.0194 -0.0073
 + - param set #6 has cost=0.406972
 + -- Parameters = -3.9002 5.5180 -2.6854 3.0648 -3.0836 -0.8710 0.9785 0.9607 1.0092 -0.0063 0.0042 0.0058
 + - param set #7 has cost=0.308138
 + -- Parameters = -0.8744 2.7366 -0.4735 -1.4009 -1.6268 -1.8195 0.9744 1.0106 1.0057 0.0069 0.0524 -0.0018
 + - param set #8 has cost=0.386478
 + -- Parameters = 3.5203 6.2511 -1.5760 -0.5044 -3.8005 2.4175 0.9932 0.9924 0.9989 0.0080 -0.0131 0.0103
 + - param set #9 has cost=0.243283
 + -- Parameters = -3.5163 2.3919 -1.0450 0.6742 -1.8397 -2.3844 0.9620 1.0073 1.0151 0.0125 0.0243 -0.0230
 + - param set #10 has cost=0.435309
 + -- Parameters = -4.1909 4.2321 -3.2784 3.2697 -5.7447 -1.3880 0.9693 0.9649 1.0097 -0.0116 0.0158 0.0193
 + - param set #11 has cost=0.436151
 + -- Parameters = 6.1312 6.1402 -2.9297 -5.8247 -6.6332 2.3027 0.9577 0.9941 1.0188 0.0022 0.0135 -0.0079
 + - param set #12 has cost=0.125557
 + -- Parameters = -0.4333 -0.3341 0.9192 -0.0676 0.4908 -0.2260 0.9955 1.0002 0.9996 -0.0020 -0.0015 -0.0009
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0451 
 + --- dist(#3,#1) = 0.0174 XXX
 + --- dist(#4,#1) = 0.038 
 + --- dist(#5,#1) = 0.0872 
 + --- dist(#6,#1) = 0.109 
 + --- dist(#7,#1) = 0.235 
 + --- dist(#8,#1) = 0.0918 
 + --- dist(#9,#1) = 0.125 
 + --- dist(#10,#1) = 0.114 
 + --- dist(#11,#1) = 0.1 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #2 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=33 usiz=69
 + - retaining old weight image
 + - using 91870 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 41.4016 .. 176.594; base clip 1833.57 .. 6776.46
 +  - versus source range 0 .. 165.438; base range 0 .. 8465.99
 + 83553 total points stored in 861 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.125561
 + -- Parameters = -0.2712 -1.5675 2.2565 -0.0166 0.8398 -0.1203 0.9912 1.0112 0.9885 0.0015 0.0041 -0.0070
 + - param set #2 has cost=0.136397
 + -- Parameters = 0.3794 -3.0080 2.6945 -0.0363 1.8186 0.4132 1.0014 1.0123 0.9821 0.0050 -0.0059 0.0086
 + - param set #3 has cost=0.129939
 + -- Parameters = -0.8120 -2.0437 2.7136 0.3138 1.1688 -0.2642 0.9998 1.0132 0.9817 0.0120 0.0032 -0.0008
 + - param set #4 has cost=0.133424
 + -- Parameters = 0.0307 -1.2752 2.1405 -0.3186 0.6641 -0.0189 1.0012 1.0094 0.9922 -0.0132 0.0008 -0.0127
 + - param set #5 has cost=0.154305
 + -- Parameters = -0.6610 0.3064 1.1402 -0.1677 -0.0876 -0.5618 0.9951 0.9993 0.9986 -0.0161 0.0110 -0.0151
 + - param set #6 has cost=0.171490
 + -- Parameters = -2.1168 0.9500 1.0094 0.2064 -0.7566 -1.3800 0.9896 0.9981 1.0079 0.0093 0.0299 -0.0358
 + - param set #7 has cost=0.181680
 + -- Parameters = -3.2632 -0.5791 0.9947 0.3615 0.2915 -2.3877 0.9833 1.0032 1.0022 0.0082 0.0470 -0.0101
 + - param set #8 has cost=0.196588
 + -- Parameters = 1.8068 -1.1496 0.3105 -0.4150 1.1327 1.5572 0.9804 0.9969 1.0104 -0.0021 -0.0244 0.0049
 + - param set #9 has cost=0.249515
 + -- Parameters = -2.4541 4.2196 -0.0439 1.0815 -2.2757 -1.1689 0.9898 0.9755 1.0107 0.0486 0.0097 -0.0422
 + - param set #10 has cost=0.329457
 + -- Parameters = -1.0921 -0.3232 1.0526 0.2430 3.6870 -0.6260 0.9751 0.9433 1.0276 -0.0050 0.0085 0.0227
 + - param set #11 has cost=0.339186
 + -- Parameters = 3.9799 2.7199 -1.8435 -1.0144 -1.5110 2.9259 0.9534 0.9995 1.0348 -0.0015 0.0060 -0.0173
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0473 
 + --- dist(#3,#1) = 0.0661 
 + --- dist(#4,#1) = 0.0704 
 + --- dist(#5,#1) = 0.0792 
 + --- dist(#6,#1) = 0.13 
 + --- dist(#7,#1) = 0.193 
 + --- dist(#8,#1) = 0.128 
 + --- dist(#9,#1) = 0.212 
 + --- dist(#10,#1) = 0.185 
 + --- dist(#11,#1) = 0.126 
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=33 usiz=69
 + - retaining old weight image
 + - using 91870 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 41.5173 .. 176.949; base clip 1836.87 .. 6857.53
 +  - versus source range 0 .. 165.485; base range 0 .. 8479.85
 + 84569 total points stored in 870 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.140403
 + -- Parameters = -0.2738 -1.5563 2.2606 -0.0089 0.7437 -0.1265 0.9977 1.0120 0.9876 0.0007 0.0033 -0.0092
 + - param set #2 has cost=0.148529
 + -- Parameters = -0.6024 -2.0138 2.6998 0.2862 1.1145 -0.1279 0.9978 1.0132 0.9824 0.0111 0.0041 -0.0026
 + - param set #3 has cost=0.145019
 + -- Parameters = 0.0400 -1.2131 2.2124 -0.3680 0.5452 -0.1083 0.9958 1.0110 0.9893 -0.0129 0.0008 -0.0135
 + - param set #4 has cost=0.147397
 + -- Parameters = 0.3837 -2.7788 2.6042 -0.0190 1.5190 0.3602 0.9965 1.0173 0.9827 -0.0001 -0.0077 0.0050
 + - param set #5 has cost=0.152379
 + -- Parameters = -0.2013 -0.1061 1.7967 -0.2937 -0.0630 -0.2690 1.0004 1.0064 0.9913 -0.0117 0.0075 -0.0172
 + - param set #6 has cost=0.156084
 + -- Parameters = -1.5253 0.3617 2.3494 0.1194 -0.7087 -0.9866 0.9974 1.0102 0.9893 0.0073 0.0232 -0.0372
 + - param set #7 has cost=0.160874
 + -- Parameters = -2.2269 -1.4709 2.7675 0.3013 0.6287 -1.5478 0.9903 1.0143 0.9846 0.0031 0.0362 -0.0163
 + - param set #8 has cost=0.162868
 + -- Parameters = 1.4124 -1.7216 1.6227 -0.1612 0.9042 1.1840 0.9919 1.0133 0.9947 -0.0042 -0.0266 -0.0019
 + - param set #9 has cost=0.223175
 + -- Parameters = -1.8431 2.7613 1.4035 0.9254 -1.7075 -0.8042 0.9848 0.9875 1.0025 0.0432 0.0096 -0.0535
 + - param set #10 has cost=0.190811
 + -- Parameters = -1.4679 -1.6828 1.7490 0.3271 1.7021 -0.7611 1.0034 0.9977 0.9914 0.0104 0.0112 0.0131
 + - param set #11 has cost=0.234430
 + -- Parameters = 3.2649 1.2611 -0.0786 -0.6682 -0.9610 2.7043 0.9827 0.9960 1.0164 -0.0189 -0.0449 -0.0271
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0612 
 + --- dist(#3,#1) = 0.0637 
 + --- dist(#4,#1) = 0.0469 
 + --- dist(#5,#1) = 0.0559 
 + --- dist(#6,#1) = 0.126 
 + --- dist(#7,#1) = 0.148 
 + --- dist(#8,#1) = 0.135 
 + --- dist(#9,#1) = 0.1 
 + --- dist(#10,#1) = 0.199 
 + --- dist(#11,#1) = 0.217 
 + - Total coarse refinement net CPU time = 0.0 s; 3169 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=33 usiz=69
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 +  - histogram: source clip 41.4917 .. 177.142; base clip 1836.87 .. 6857.53
 +  - versus source range 0 .. 165.467; base range 0 .. 8475.97
 + 84153 total points stored in 881 'RHDD(9.27904)' bloks
 + - cost(#1)=0.140121 *
 + -- Parameters = -0.2738 -1.5563 2.2606 -0.0089 0.7437 -0.1265 0.9977 1.0120 0.9876 0.0007 0.0033 -0.0092
 + - cost(#2)=0.145649  
 + -- Parameters = 0.0400 -1.2131 2.2124 -0.3680 0.5452 -0.1083 0.9958 1.0110 0.9893 -0.0129 0.0008 -0.0135
 + - cost(#3)=0.147935  
 + -- Parameters = 0.3837 -2.7788 2.6042 -0.0190 1.5190 0.3602 0.9965 1.0173 0.9827 -0.0001 -0.0077 0.0050
 + - cost(#4)=0.148319  
 + -- Parameters = -0.6024 -2.0138 2.6998 0.2862 1.1145 -0.1279 0.9978 1.0132 0.9824 0.0111 0.0041 -0.0026
 + - cost(#5)=0.153068  
 + -- Parameters = -0.2013 -0.1061 1.7967 -0.2937 -0.0630 -0.2690 1.0004 1.0064 0.9913 -0.0117 0.0075 -0.0172
 + - cost(#6)=0.155802  
 + -- Parameters = -1.5253 0.3617 2.3494 0.1194 -0.7087 -0.9866 0.9974 1.0102 0.9893 0.0073 0.0232 -0.0372
 + - cost(#7)=0.162760  
 + -- Parameters = -2.2269 -1.4709 2.7675 0.3013 0.6287 -1.5478 0.9903 1.0143 0.9846 0.0031 0.0362 -0.0163
 + - cost(#8)=0.163908  
 + -- Parameters = 1.4124 -1.7216 1.6227 -0.1612 0.9042 1.1840 0.9919 1.0133 0.9947 -0.0042 -0.0266 -0.0019
 + - cost(#9)=0.192187  
 + -- Parameters = -1.4679 -1.6828 1.7490 0.3271 1.7021 -0.7611 1.0034 0.9977 0.9914 0.0104 0.0112 0.0131
 + - cost(#10)=0.224714  
 + -- Parameters = -1.8431 2.7613 1.4035 0.9254 -1.7075 -0.8042 0.9848 0.9875 1.0025 0.0432 0.0096 -0.0535
 + - cost(#11)=0.235212  
 + -- Parameters = 3.2649 1.2611 -0.0786 -0.6682 -0.9610 2.7043 0.9827 0.9960 1.0164 -0.0189 -0.0449 -0.0271
 + - cost(#12)=0.372716  
 + -- Parameters = -0.3385 -0.5286 -1.7582 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=0.139789 *
 + -- Parameters = -0.2735 -1.5434 2.2895 -0.0121 0.7244 -0.1222 0.9978 1.0125 0.9875 0.0010 0.0034 -0.0095
 + - cost(#2)=0.141403  
 + -- Parameters = 0.0119 -1.2748 2.4074 -0.2959 0.4757 -0.0866 0.9952 1.0123 0.9868 -0.0089 0.0017 -0.0152
 + - cost(#3)=0.147566  
 + -- Parameters = 0.4193 -2.7828 2.7027 -0.0749 1.5085 0.3751 0.9977 1.0179 0.9812 -0.0001 -0.0081 0.0049
 + - cost(#4)=0.143068  
 + -- Parameters = -0.4216 -1.9761 2.6918 0.0802 1.0244 -0.1851 0.9973 1.0144 0.9821 0.0059 0.0031 -0.0039
 + - cost(#5)=0.146897  
 + -- Parameters = -0.0287 -0.1439 2.0061 -0.3304 -0.0878 -0.1601 0.9987 1.0077 0.9903 -0.0108 0.0076 -0.0222
 + - cost(#6)=0.148431  
 + -- Parameters = -1.2989 0.2634 2.5213 0.0605 -0.5997 -0.8411 0.9956 1.0106 0.9864 0.0021 0.0164 -0.0359
 + - cost(#7)=0.152765  
 + -- Parameters = -2.0273 -1.2815 2.6766 0.1873 0.4348 -1.4298 0.9959 1.0130 0.9827 0.0046 0.0293 -0.0158
 + - cost(#8)=0.155178  
 + -- Parameters = 1.2465 -1.6990 1.8565 -0.3025 0.8289 1.0080 0.9911 1.0147 0.9909 -0.0062 -0.0202 -0.0045
 + - cost(#9)=0.153113  
 + -- Parameters = -0.7906 -2.5990 2.2385 0.0870 1.3722 -0.5241 0.9946 1.0168 0.9879 0.0080 0.0124 0.0027
 + - cost(#10)=0.166262  
 + -- Parameters = -1.5601 1.4455 2.2690 0.4101 -1.1823 -0.6893 1.0023 1.0000 0.9848 0.0096 0.0117 -0.0397
 + - cost(#11)=0.201909  
 + -- Parameters = 2.6168 1.4012 0.8193 -0.5290 -1.2343 1.9817 0.9895 1.0018 1.0007 -0.0187 -0.0442 -0.0317
 + - cost(#12)=0.146710  
 + -- Parameters = -0.3587 -1.7285 2.1694 -0.0312 0.7914 -0.2203 0.9898 1.0152 0.9903 -0.0010 0.0081 -0.0084
 + - case #1 is now the best
 + - Initial  cost = 0.139789
 + - Initial fine Parameters = -0.2735 -1.5434 2.2895 -0.0121 0.7244 -0.1222 0.9978 1.0125 0.9875 0.0010 0.0034 -0.0095
 + - Finalish cost = 0.139574 ; 88 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 41.4725 .. 177.12; base clip 1836.87 .. 6857.53
 +  - versus source range 0 .. 165.467; base range 0 .. 8475.97
*[#15542=-0.401759] *[#15549=-0.406989] *[#15604=-0.407008] *[#15606=-0.40762] *[#15608=-0.408391] *[#15613=-0.409116] *[#15623=-0.409807] *[#15625=-0.410414] *[#15632=-0.410639] *[#15639=-0.410798] *[#15641=-0.411582] *[#15650=-0.412482] *[#15653=-0.412694] *[#15655=-0.413571] *[#15656=-0.414361] *[#15660=-0.414434] *[#15661=-0.414942] *[#15666=-0.414987] *[#15668=-0.415029] *[#15682=-0.415345] *[#15685=-0.415654] *[#15690=-0.416091] *[#15691=-0.416488] *[#15692=-0.416571] *[#15708=-0.416825] *[#15709=-0.417079] *[#15712=-0.417098] *[#15714=-0.417367] *[#15715=-0.41748] *[#15716=-0.417594] *[#15719=-0.41766] *[#15737=-0.417662] *[#15741=-0.417685] *[#15755=-0.417695] *[#15756=-0.417722] *[#15757=-0.417792] *[#15758=-0.4179] *[#15761=-0.417947] *[#15767=-0.417982] *[#15770=-0.417997] *[#15771=-0.417998] *[#15777=-0.418004] *[#15780=-0.418016] *[#15783=-0.418034] *[#15786=-0.418041] *[#15792=-0.418045] *[#15793=-0.418066] *[#15798=-0.418088] *[#15799=-0.418119] *[#15802=-0.418181] *[#15805=-0.418204] *[#15808=-0.418225] *[#15809=-0.418231] *[#15811=-0.418241] *[#15812=-0.418262] *[#15813=-0.418273] *[#15816=-0.418284] *[#15817=-0.418302] *[#15822=-0.418309] *[#15823=-0.418312] *[#15824=-0.418332] *[#15825=-0.41835] *[#15830=-0.418368] *[#15831=-0.418368] *[#15835=-0.418373] *[#15836=-0.418387] *[#15841=-0.418394] *[#15842=-0.418395] *[#15846=-0.418403] *[#15847=-0.418403] *[#15853=-0.41841] *[#15860=-0.418411] *[#15862=-0.418414] *[#15865=-0.418418] *[#15870=-0.418427] *[#15873=-0.418429] *[#15874=-0.418436] *[#15879=-0.418446] *[#15882=-0.418448] *[#15886=-0.418449] *[#15888=-0.418461] *[#15897=-0.418464] *[#15902=-0.418472] *[#15904=-0.418475] *[#15907=-0.418477] *[#15910=-0.418481] *[#15916=-0.418491] *[#15917=-0.418494] *[#15918=-0.4185] *[#15920=-0.4185] *[#15924=-0.418501] *[#15936=-0.418511] *[#15945=-0.418512] *[#15954=-0.418513] *[#15955=-0.418516] *[#15966=-0.418519] *[#15972=-0.418525] *[#15975=-0.418535] *[#15976=-0.418536] *[#15978=-0.418543] *[#15981=-0.418548] *[#15984=-0.418551] *[#15989=-0.418555] *[#15994=-0.418564] *[#15997=-0.418564] *[#15999=-0.418567] *[#16000=-0.418567] *[#16002=-0.418576] *[#16003=-0.418581] *[#16006=-0.418597] *[#16007=-0.418604] *[#16008=-0.418606] *[#16009=-0.418607] *[#16013=-0.41862] *[#16018=-0.418629] *[#16027=-0.41863] *[#16029=-0.418638] *[#16034=-0.418646] *[#16037=-0.418653] *[#16038=-0.418656] *[#16039=-0.418661] *[#16042=-0.418663] *[#16048=-0.41867] *[#16053=-0.418682] *[#16054=-0.418687] *[#16055=-0.418688] *[#16056=-0.418693] *[#16057=-0.418695] *[#16058=-0.418697] *[#16061=-0.418706] *[#16064=-0.418712] *[#16075=-0.418716] *[#16078=-0.418719] *[#16083=-0.418729] *[#16084=-0.418734] *[#16085=-0.418741] *[#16094=-0.418759] *[#16097=-0.418771] *[#16098=-0.418778] *[#16099=-0.418783] *[#16100=-0.418793] *[#16107=-0.418794] *[#16108=-0.418804] *[#16109=-0.418808] *[#16114=-0.418814] *[#16115=-0.418818] *[#16116=-0.418818] *[#16118=-0.418826] *[#16119=-0.418829] *[#16126=-0.418829] *[#16128=-0.418831] *[#16129=-0.418835] *[#16130=-0.418836] *[#16133=-0.418837] *[#16134=-0.418838] *[#16139=-0.418842] *[#16142=-0.418844] *[#16147=-0.418846] *[#16148=-0.418847] *[#16155=-0.418849] *[#16158=-0.418851] *[#16161=-0.418852] *[#16168=-0.418854] *[#16173=-0.418854] *[#16181=-0.418856] *[#16183=-0.41886] *[#16184=-0.418861] *[#16186=-0.418862] *[#16190=-0.418863] *[#16191=-0.418865] *[#16197=-0.418868] *[#16198=-0.418873] *[#16201=-0.418876] *[#16202=-0.418877] *[#16209=-0.418882] *[#16214=-0.418885] *[#16217=-0.41889] *[#16224=-0.418893] *[#16227=-0.418894] *[#16236=-0.418898] *[#16243=-0.418904] *[#16250=-0.418909] *[#16253=-0.418917] *[#16260=-0.41892] *[#16267=-0.41893] *[#16272=-0.418934] *[#16273=-0.418937] *[#16276=-0.418938] *[#16284=-0.418939] *[#16285=-0.418946] *[#16288=-0.418953] *[#16291=-0.418965] *[#16292=-0.418972] *[#16295=-0.418976] *[#16296=-0.418978] *[#16297=-0.418978] *[#16299=-0.418979] *[#16302=-0.41898] *[#16305=-0.418984] *[#16306=-0.418987] *[#16311=-0.41899] *[#16312=-0.418992] *[#16315=-0.419001] *[#16322=-0.419009] *[#16323=-0.41901] *[#16325=-0.419012] *[#16326=-0.419015] *[#16327=-0.419017] *[#16332=-0.419018] *[#16334=-0.41903] *[#16335=-0.419035] *[#16336=-0.419041] *[#16337=-0.419042] *[#16342=-0.419043] *[#16346=-0.419054] *[#16347=-0.419067] *[#16349=-0.419071] *[#16352=-0.419073] *[#16354=-0.419073] *[#16358=-0.419084] *[#16361=-0.419084] *[#16363=-0.419087] *[#16366=-0.419088] *[#16369=-0.419091] *[#16374=-0.419091] *[#16376=-0.419096] *[#16381=-0.419097] *[#16382=-0.419098] *[#16385=-0.4191] *[#16388=-0.4191] *[#16390=-0.4191] *[#16400=-0.419102] 
 + - Final    cost = -0.419102 ; 864 funcs
 + Final fine fit Parameters:
       x-shift= 0.0943   y-shift=-2.0787   z-shift= 1.9126
       z-angle=-0.1524   x-angle= 0.5596   y-angle= 0.0462
       x-scale= 1.0122   y-scale= 1.0283   z-scale= 0.9958
     y/x-shear=-0.0051 z/x-shear=-0.0007 z/y-shear=-0.0126
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0943 -2.0787 1.9126 -0.1524 0.5596 0.0462 1.0122 1.0283 0.9958 -0.0051 -0.0007 -0.0126
++ Output dataset ./__tt_sub-TAG159_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG159_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 201.1
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 18.039904 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG159_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0114 0.0449 -0.0048 16.5795 -0.0156 0.2940 -0.9505 147.2852 -0.0362 0.9846 0.2964 13.3860
++ Output dataset ./sub-TAG159_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG159.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 18.039904 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG159.r01.despike+orig.BRIK is 18.039904 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG159.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 97251 voxels
 + 11337 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.178  pitch=-0.047  yaw=+0.027  dS=-1.052  dL=-0.063  dP=-0.215
++ Mean: roll=-0.040  pitch=+0.373  yaw=+0.204  dS=-0.354  dL=-0.010  dP=-0.096
++ Max : roll=+0.105  pitch=+1.093  yaw=+0.332  dS=+0.177  dL=+0.074  dP=+0.012
++ Max displacements (mm) for each sub-brick:
 2.49(0.00) 2.45(0.15) 2.40(0.08) 2.46(0.13) 2.47(0.03) 2.44(0.08) 2.38(0.14) 2.48(0.16) 2.69(0.26) 2.67(0.05) 2.59(0.15) 2.56(0.10) 2.59(0.11) 2.63(0.09) 2.61(0.13) 2.58(0.08) 2.63(0.12) 2.65(0.05) 2.62(0.12) 2.57(0.06) 2.59(0.10) 2.62(0.03) 2.52(0.15) 2.47(0.10) 2.46(0.11) 2.50(0.07) 2.53(0.04) 2.46(0.12) 2.35(0.16) 2.33(0.09) 2.36(0.12) 2.30(0.10) 2.24(0.13) 2.20(0.10) 2.28(0.14) 2.28(0.05) 2.23(0.12) 2.17(0.08) 2.19(0.13) 2.14(0.09) 2.12(0.07) 2.06(0.10) 2.08(0.10) 2.07(0.03) 2.05(0.05) 1.97(0.13) 1.96(0.04) 2.01(0.15) 2.03(0.05) 2.00(0.11) 1.98(0.05) 2.01(0.13) 2.00(0.03) 1.96(0.07) 1.91(0.12) 1.92(0.09) 1.91(0.07) 1.91(0.04) 1.89(0.09) 1.94(0.05) 2.13(0.27) 2.18(0.07) 2.13(0.08) 2.07(0.12) 2.05(0.08) 2.07(0.06) 2.04(0.07) 2.02(0.07) 1.99(0.05) 2.03(0.11) 2.05(0.05) 2.06(0.07) 2.04(0.06) 2.05(0.04) 2.13(0.16) 2.12(0.03) 2.05(0.10) 2.01(0.08) 2.00(0.07) 2.04(0.11) 2.01(0.04) 1.97(0.09) 1.93(0.12) 1.98(0.10) 2.06(0.15) 2.04(0.10) 1.98(0.14) 1.98(0.11) 1.91(0.07) 1.89(0.08) 1.92(0.08) 2.09(0.24) 2.16(0.12) 2.10(0.08) 2.06(0.10) 1.96(0.17) 1.98(0.08) 1.99(0.07) 2.04(0.11) 2.01(0.07) 2.01(0.10) 2.03(0.05) 2.01(0.08) 1.97(0.08) 1.99(0.10) 2.09(0.15) 2.11(0.04) 2.06(0.11) 2.04(0.07) 2.06(0.10) 2.03(0.04) 2.02(0.09) 1.89(0.17) 1.91(0.09) 1.91(0.05) 1.86(0.07) 1.87(0.10) 1.77(0.11) 1.80(0.08) 1.82(0.03) 1.76(0.11) 1.70(0.08) 1.59(0.15) 1.50(0.11) 1.46(0.09) 1.51(0.09) 1.52(0.11) 1.58(0.10) 1.58(0.04) 1.43(0.17) 1.41(0.07) 1.44(0.09) 1.50(0.09) 1.52(0.06) 1.50(0.09) 1.35(0.20) 1.32(0.12) 1.32(0.08) 1.39(0.13) 1.44(0.08) 1.32(0.13) 1.26(0.11) 1.14(0.14) 1.08(0.09) 1.09(0.04) 1.07(0.13) 1.06(0.07) 0.97(0.16) 0.91(0.09) 1.08(0.19) 1.19(0.20) 1.01(0.21) 0.87(0.18) 0.91(0.10) 0.98(0.13) 1.06(0.15) 1.11(0.06) 1.06(0.12) 1.04(0.06) 1.09(0.12) 0.99(0.11) 0.96(0.13) 0.87(0.13) 0.83(0.06) 0.87(0.11) 0.89(0.04) 0.84(0.08) 0.74(0.13) 0.75(0.09) 0.72(0.14) 0.72(0.11) 0.67(0.14) 0.66(0.06) 0.64(0.08) 0.67(0.09) 0.51(0.19) 0.57(0.08) 0.66(0.14) 0.66(0.02) 0.64(0.10) 0.62(0.07) 0.58(0.10) 0.60(0.09) 0.60(0.05) 0.56(0.08) 0.59(0.06) 0.59(0.05) 0.54(0.11) 0.58(0.07) 0.60(0.11) 0.58(0.06) 0.55(0.07) 0.64(0.11) 0.76(0.14) 0.69(0.09) 0.63(0.11) 0.61(0.06) 0.67(0.12) 0.61(0.10) 0.56(0.11) 0.59(0.07) 0.62(0.06) 0.66(0.10) 0.63(0.06) 0.60(0.10) 0.67(0.10) 0.63(0.07) 0.54(0.15) 0.49(0.05) 0.50(0.10) 0.52(0.04) 0.51(0.07) 0.50(0.08) 0.48(0.04) 0.47(0.10) 0.50(0.09) 0.51(0.05) 0.49(0.08) 0.48(0.04) 0.49(0.17) 0.52(0.07) 0.51(0.05) 0.47(0.09) 0.45(0.05) 0.46(0.14) 0.49(0.10) 0.45(0.09) 0.44(0.05) 0.43(0.05) 0.45(0.11) 0.46(0.12) 0.46(0.09) 0.43(0.12) 0.42(0.07) 0.43(0.08) 0.49(0.13) 0.47(0.13) 0.44(0.08) 0.46(0.11) 0.47(0.14) 0.53(0.13) 0.45(0.12) 0.42(0.08) 0.39(0.12) 0.64(0.34) 0.56(0.12) 0.39(0.26) 0.40(0.07) 0.37(0.04) 0.30(0.29) 0.29(0.11) 0.34(0.07) 0.38(0.11) 0.38(0.07) 0.33(0.09) 0.36(0.18) 0.38(0.08) 0.36(0.19) 0.34(0.06) 0.35(0.07) 0.34(0.08) 0.32(0.06) 0.33(0.10) 0.31(0.05) 0.33(0.09) 0.32(0.04) 0.33(0.07) 0.33(0.10) 0.35(0.05) 0.31(0.07) 0.33(0.11) 0.35(0.03) 0.36(0.06) 0.34(0.09) 0.31(0.05) 0.33(0.11) 0.39(0.09) 0.35(0.13) 0.35(0.09) 0.31(0.05) 0.32(0.13) 0.36(0.15) 0.35(0.07) 0.35(0.11) 0.30(0.06) 0.31(0.14) 0.35(0.08) 0.32(0.11) 0.31(0.11) 0.30(0.07) 0.33(0.17) 0.29(0.07) 0.35(0.15) 0.34(0.09) 0.32(0.10) 0.35(0.05) 0.33(0.04) 0.36(0.11) 0.34(0.04) 0.29(0.15) 0.41(0.13) 0.34(0.19) 0.33(0.07) 0.52(0.35) 0.54(0.10) 0.47(0.10) 0.38(0.13) 0.30(0.09) 0.34(0.24) 0.33(0.18) 0.38(0.10) 0.33(0.16) 0.36(0.06) 0.35(0.15) 0.39(0.06) 0.39(0.14) 0.39(0.06) 0.42(0.11) 0.38(0.09) 0.41(0.12) 0.41(0.06) 0.41(0.18) 0.47(0.18) 0.41(0.14) 0.45(0.15) 0.44(0.10) 0.43(0.09) 0.42(0.10) 0.37(0.07) 0.32(0.07) 0.30(0.16) 0.42(0.19) 0.46(0.04) 0.39(0.10) 0.44(0.09) 0.33(0.20) 0.48(0.15) 0.50(0.03) 0.47(0.12) 0.33(0.31) 0.42(0.12) 0.41(0.23) 0.44(0.11) 0.37(0.10) 0.39(0.17) 0.33(0.15) 0.40(0.10) 0.50(0.13) 0.49(0.05) 0.49(0.12) 0.31(0.27) 0.40(0.11) 0.53(0.15) 0.49(0.12) 0.44(0.11) 0.44(0.06) 0.54(0.13) 0.50(0.08) 0.37(0.14) 0.35(0.15) 0.45(0.19) 0.53(0.10) 0.50(0.11) 0.57(0.16) 0.60(0.11) 0.49(0.17) 0.54(0.08) 0.58(0.15) 0.51(0.12) 0.50(0.09) 0.52(0.12) 0.50(0.10) 0.54(0.22) 0.54(0.10) 0.63(0.34) 0.62(0.17) 0.56(0.17) 0.60(0.15) 0.57(0.29) 0.60(0.11) 0.66(0.27) 0.60(0.06) 0.63(0.06) 0.65(0.09) 0.65(0.10) 0.60(0.06) 0.49(0.12) 0.57(0.09) 0.70(0.15) 0.69(0.05)
++ Max displacement in automask = 2.69 (mm) at sub-brick 8
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 303
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG159.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG159_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG159_SurfVol_ns+orig -input pb01.sub-TAG159.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG159.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG159.r01.despike+orig.BRIK is 18.039904 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG159.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG159_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.2
++ ###########################################################
3dAllineate -base sub-TAG159_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.039904 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.3
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG159.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 18.039904 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG159.r02.despike+orig.BRIK is 18.039904 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG159.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 97471 voxels
 + 11561 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.173  pitch=-0.088  yaw=-0.077  dS=-0.685  dL=-0.076  dP=-0.072
++ Mean: roll=-0.024  pitch=+0.139  yaw=-0.015  dS=-0.201  dL=-0.026  dP=+0.035
++ Max : roll=+0.126  pitch=+0.716  yaw=+0.082  dS=+0.230  dL=+0.070  dP=+0.147
++ Max displacements (mm) for each sub-brick:
 1.72(0.00) 1.77(0.11) 1.80(0.05) 1.64(0.20) 1.56(0.08) 1.58(0.09) 1.62(0.07) 1.59(0.09) 1.52(0.10) 1.55(0.08) 1.64(0.12) 1.61(0.05) 1.53(0.14) 1.53(0.05) 1.62(0.15) 1.58(0.06) 1.47(0.17) 1.42(0.05) 1.49(0.13) 1.57(0.09) 1.51(0.09) 1.37(0.18) 1.41(0.11) 1.52(0.15) 1.53(0.04) 1.38(0.20) 1.33(0.05) 1.41(0.15) 1.37(0.05) 1.32(0.12) 1.23(0.12) 1.23(0.09) 1.27(0.07) 1.27(0.03) 1.17(0.14) 1.09(0.08) 1.15(0.11) 1.22(0.10) 1.14(0.13) 1.06(0.14) 1.07(0.09) 1.17(0.16) 1.14(0.07) 1.00(0.24) 0.98(0.09) 1.05(0.16) 1.03(0.04) 0.97(0.14) 0.89(0.11) 0.96(0.14) 0.98(0.07) 0.91(0.16) 0.86(0.10) 0.93(0.13) 0.94(0.05) 0.87(0.13) 0.81(0.07) 0.85(0.09) 0.89(0.09) 0.87(0.06) 0.78(0.15) 0.76(0.08) 0.81(0.13) 0.83(0.07) 0.78(0.11) 0.73(0.09) 0.82(0.16) 0.86(0.06) 0.77(0.18) 0.69(0.10) 0.72(0.09) 0.77(0.08) 0.72(0.10) 0.65(0.11) 0.67(0.11) 0.71(0.08) 0.72(0.03) 0.69(0.12) 0.64(0.06) 0.67(0.11) 0.71(0.08) 0.70(0.06) 0.62(0.15) 0.58(0.07) 0.60(0.07) 0.62(0.03) 0.56(0.12) 0.53(0.03) 0.57(0.11) 0.63(0.09) 0.62(0.06) 0.55(0.13) 0.57(0.09) 0.63(0.11) 0.62(0.05) 0.57(0.10) 0.52(0.05) 0.54(0.11) 0.51(0.05) 0.49(0.06) 0.45(0.09) 0.43(0.04) 0.50(0.13) 0.48(0.02) 0.47(0.07) 0.48(0.07) 0.47(0.06) 0.55(0.14) 0.58(0.03) 0.50(0.11) 0.46(0.09) 0.51(0.12) 0.55(0.07) 0.53(0.08) 0.56(0.09) 0.53(0.10) 0.56(0.09) 0.57(0.05) 0.51(0.11) 0.47(0.07) 0.55(0.15) 0.57(0.06) 0.52(0.11) 0.47(0.08) 0.51(0.11) 0.56(0.07) 0.54(0.07) 0.48(0.11) 0.49(0.07) 0.55(0.10) 0.51(0.06) 0.50(0.10) 0.46(0.07) 0.52(0.12) 0.52(0.04) 0.46(0.11) 0.43(0.05) 0.46(0.10) 0.47(0.06) 0.44(0.10) 0.39(0.08) 0.43(0.12) 0.47(0.07) 0.45(0.06) 0.35(0.15) 0.32(0.11) 0.40(0.13) 0.43(0.06) 0.41(0.09) 0.38(0.07) 0.44(0.12) 0.49(0.06) 0.42(0.12) 0.38(0.07) 0.41(0.11) 0.47(0.09) 0.47(0.06) 0.42(0.11) 0.40(0.03) 0.46(0.12) 0.50(0.06) 0.48(0.05) 0.44(0.08) 0.40(0.06) 0.46(0.12) 0.52(0.06) 0.49(0.07) 0.46(0.08) 0.45(0.08) 0.56(0.13) 0.58(0.10) 0.50(0.15) 0.52(0.07) 0.60(0.13) 0.60(0.07) 0.53(0.13) 0.52(0.08) 0.57(0.08) 0.56(0.04) 0.53(0.08) 0.48(0.06) 0.57(0.14) 0.56(0.03) 0.52(0.07) 0.48(0.09) 0.46(0.07) 0.51(0.11) 0.50(0.04) 0.45(0.08) 0.41(0.09) 0.39(0.07) 0.42(0.06) 0.41(0.04) 0.38(0.06) 0.34(0.05) 0.40(0.11) 0.44(0.07) 0.44(0.06) 0.51(0.11) 0.45(0.06) 0.48(0.07) 0.54(0.08) 0.54(0.05) 0.49(0.10) 0.45(0.05) 0.51(0.11) 0.53(0.03) 0.48(0.07) 0.51(0.09) 0.48(0.05) 0.51(0.10) 0.54(0.04) 0.49(0.07) 0.38(0.13) 0.36(0.09) 0.32(0.06) 0.32(0.06) 0.48(0.19) 0.49(0.07) 0.49(0.07) 0.57(0.12) 0.63(0.08) 0.60(0.09) 0.52(0.09) 0.49(0.12) 0.52(0.07) 0.59(0.10) 0.50(0.11) 0.47(0.10) 0.50(0.05) 0.53(0.05) 0.54(0.05) 0.48(0.09) 0.51(0.10) 0.63(0.14) 0.84(0.22) 1.00(0.22) 0.83(0.23) 0.67(0.17) 0.65(0.15) 0.68(0.05) 0.55(0.22) 0.46(0.13) 0.46(0.11) 0.38(0.10) 0.32(0.12) 0.33(0.03) 0.30(0.12) 0.28(0.08) 0.25(0.08) 0.23(0.11) 0.23(0.08) 0.23(0.09) 0.22(0.06) 0.21(0.05) 0.23(0.16) 0.22(0.05) 0.18(0.12) 0.14(0.06) 0.10(0.07) 0.16(0.10) 0.06(0.11) 0.13(0.08) 0.16(0.06) 0.13(0.04) 0.11(0.07) 0.13(0.05) 0.17(0.11) 0.16(0.06) 0.13(0.06) 0.11(0.06) 0.13(0.07) 0.14(0.11) 0.11(0.07) 0.05(0.12) 0.07(0.06) 0.13(0.10) 0.10(0.11) 0.08(0.08) 0.00(0.08) 0.05(0.05) 0.05(0.06) 0.14(0.11) 0.12(0.07) 0.07(0.09) 0.06(0.10) 0.11(0.10) 0.11(0.08) 0.07(0.06) 0.05(0.10) 0.09(0.06) 0.17(0.16) 0.14(0.08) 0.08(0.11) 0.08(0.12) 0.14(0.08) 0.12(0.10) 0.14(0.13) 0.10(0.09) 0.05(0.08) 0.11(0.11) 0.16(0.10) 0.15(0.06) 0.07(0.13) 0.07(0.05) 0.10(0.11) 0.08(0.06) 0.04(0.06) 0.08(0.08) 0.11(0.06) 0.12(0.08) 0.10(0.03) 0.09(0.05) 0.15(0.10) 0.17(0.04) 0.14(0.10) 0.10(0.05) 0.12(0.04) 0.15(0.09) 0.19(0.05) 0.16(0.11) 0.12(0.08) 0.12(0.04) 0.16(0.11) 0.18(0.05) 0.17(0.14) 0.14(0.08) 0.10(0.09) 0.13(0.09) 0.19(0.07) 0.17(0.10) 0.14(0.09) 0.13(0.06) 0.17(0.08) 0.19(0.05) 0.18(0.11) 0.15(0.04) 0.14(0.07) 0.20(0.10) 0.19(0.05) 0.17(0.12) 0.15(0.04) 0.14(0.06) 0.16(0.08) 0.20(0.13) 0.19(0.08) 0.16(0.07) 0.13(0.08) 0.16(0.10) 0.20(0.06) 0.20(0.09) 0.18(0.08) 0.20(0.07) 0.21(0.04) 0.23(0.07) 0.26(0.08) 0.22(0.16) 0.18(0.16) 0.15(0.15) 0.17(0.11) 0.25(0.10) 0.24(0.07) 0.21(0.11) 0.17(0.06) 0.22(0.10) 0.31(0.12) 0.24(0.11) 0.23(0.12) 0.22(0.05) 0.35(0.18) 0.51(0.19) 0.35(0.17) 0.29(0.06) 0.26(0.10) 0.24(0.13) 0.29(0.10) 0.34(0.10) 0.29(0.06) 0.27(0.09) 0.27(0.03) 0.31(0.05) 0.34(0.07) 0.33(0.05) 0.32(0.13) 0.27(0.07) 0.33(0.07) 0.35(0.08) 0.27(0.10) 0.27(0.10) 0.30(0.19)
++ Max displacement in automask = 1.80 (mm) at sub-brick 2
++ Max delta displ  in automask = 0.24 (mm) at sub-brick 43
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG159.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG159_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG159_SurfVol_ns+orig -input pb01.sub-TAG159.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG159.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG159.r02.despike+orig.BRIK is 18.039904 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG159.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG159_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.8
++ ###########################################################
3dAllineate -base sub-TAG159_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 18.039904 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.7
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG159.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG159.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG159.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG159.r02.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG159_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG159_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 18.039904 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG159_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy sub-TAG159_SurfVol_ns+orig anat_final.sub-TAG159
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG159+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 12443 survived, 16764773 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 276636 survived, 16500580 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG159.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG159.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG159.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
foreach run ( 01 02 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG159.r01.blur pb02.sub-TAG159.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG159.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG159.r02.blur pb02.sub-TAG159.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG159.r02.blur+orig.BRIK
end
foreach run ( 01 02 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG159.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG159.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2644.660645
 + Used gradual clip level = 2497.290771 .. 2763.592773
 + Number voxels above clip level = 97104
 + Clustering voxels ...
 + Largest cluster has 96067 voxels
 + Clustering voxels ...
 + Largest cluster has 95420 voxels
 + Filled   362 voxels in small holes; now have 95782 voxels
 + Filled  1275 voxels in large holes; now have 97057 voxels
 + Clustering voxels ...
 + Largest cluster has 97056 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 964152 voxels
 + Mask now has 97056 voxels
++ 97056 voxels in the mask [out of 1061208: 9.15%]
++ first  23 x-planes are zero [from R]
++ last   23 x-planes are zero [from L]
++ first  15 y-planes are zero [from S]
++ last   32 y-planes are zero [from I]
++ first  19 z-planes are zero [from P]
++ last   13 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG159.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG159.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2645.373779
 + Used gradual clip level = 2490.224121 .. 2761.354492
 + Number voxels above clip level = 97095
 + Clustering voxels ...
 + Largest cluster has 96024 voxels
 + Clustering voxels ...
 + Largest cluster has 95290 voxels
 + Filled   375 voxels in small holes; now have 95665 voxels
 + Filled  1266 voxels in large holes; now have 96931 voxels
 + Clustering voxels ...
 + Largest cluster has 96931 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 964277 voxels
 + Mask now has 96931 voxels
++ 96931 voxels in the mask [out of 1061208: 9.13%]
++ first  23 x-planes are zero [from R]
++ last   22 x-planes are zero [from L]
++ first  15 y-planes are zero [from S]
++ last   32 y-planes are zero [from I]
++ first  19 z-planes are zero [from P]
++ last   13 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD -union -prefix full_mask.sub-TAG159
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 2 volumes gives min count 0
++ voxel limits: 0 clipped, 97203 survived, 964005 were zero
++ writing result full_mask.sub-TAG159...
++ Output dataset ./full_mask.sub-TAG159+orig.BRIK
3dresample -master full_mask.sub-TAG159+orig -input sub-TAG159_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG159
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 97118 survived, 964090 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG159...
++ Output dataset ./mask_anat.sub-TAG159+orig.BRIK
3dmask_tool -input full_mask.sub-TAG159+orig mask_anat.sub-TAG159+orig -inter -prefix mask_epi_anat.sub-TAG159
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 13425 clipped, 90448 survived, 957335 were zero
++ writing result mask_epi_anat.sub-TAG159...
++ Output dataset ./mask_epi_anat.sub-TAG159+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG159+orig mask_anat.sub-TAG159+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG159+orig mask_anat.sub-TAG159+orig
foreach run ( 01 02 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG159.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG159.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG159+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG159.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG159.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG159.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG159.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG159+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG159.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG159.r02.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG159
1deval -a motion_sub-TAG159_censor.1D -b outcount_sub-TAG159_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 2
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 2 -set_run_lengths 390 390 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 2 -set_run_lengths 390 390 -write bpass.r02.1D
end
1dcat bpass.r01.1D bpass.r02.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG159_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 )
1d_tool.py -set_run_lengths 390 390 -select_runs 01 -infile censor_sub-TAG159_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG159.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 4 ; remaining = 386
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 386 retained time points MINUS 4 regressors ==> 382 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 630994 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 1h 48m 8s 306ms
end
1d_tool.py -set_run_lengths 390 390 -select_runs 02 -infile censor_sub-TAG159_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG159.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 390 retained time points MINUS 4 regressors ==> 386 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ THD_dset_to_vectim: allocated 1655484480 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 630994 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 27s 463ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.3 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG159_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG159.r01.scale+orig.HEAD pb04.sub-TAG159.r02.scale+orig.HEAD -mask full_mask.sub-TAG159+orig -censor censor_sub-TAG159_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG159 -errts errts.sub-TAG159 -x1D_stop -bucket stats.sub-TAG159
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 557 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 780 (before censor) ; 776 (after)
 + Number of parameters:  565 [565 baseline ; 0 signal]
++ Memory required for output bricks = 6,626,182,752 bytes (about 6.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb04.sub-TAG159.r01.scale+orig.HEAD pb04.sub-TAG159.r02.scale+orig.HEAD" \
 -mask full_mask.sub-TAG159+orig -fout -tout \
 -Rbuck stats.sub-TAG159_REML -Rvar stats.sub-TAG159_REMLvar \
 -Rfitts fitts.sub-TAG159_REML -Rerrts errts.sub-TAG159_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (776x565):  11.4209  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (776x565):  11.4209  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (776x557):  5.24603  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (776x8):  1.01206  ++ VERY GOOD ++
++ 3dDeconvolve exits: -x1D_stop option was invoked
3dTproject -polort 0 -input pb04.sub-TAG159.r01.scale+orig.HEAD pb04.sub-TAG159.r02.scale+orig.HEAD -mask full_mask.sub-TAG159+orig -censor censor_sub-TAG159_combined_2.1D -cenmode ZERO -ort X.nocensor.xmat.1D -prefix errts.sub-TAG159.tproject
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 2 input dataset names
++ Auto-catenated dataset has 2 runs
++ input time points = 780 ; censored = 4 ; remaining = 776
++ Setting up regressors
++ 2 Blocks * 1 polynomials -- 2 polort regressors
 + -- 565 other fixed ort regressors
++ 776 retained time points MINUS 567 regressors ==> 209 D.O.F. left
++ 97203 voxels in the spatial mask
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-TAG159.tproject+orig.BRIK
++ ===== clock time = 1m 9s 991ms
if ( 0 != 0 ) then
tee out.cormat_warn.txt
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
3dTcat -prefix all_runs.sub-TAG159 pb04.sub-TAG159.r01.scale+orig.HEAD pb04.sub-TAG159.r02.scale+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.0 s
3dTcat -prefix rm.all_runs.volreg pb02.sub-TAG159.r01.volreg+orig.HEAD pb02.sub-TAG159.r02.volreg+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.8 s
3dcalc -a rm.all_runs.volreg+orig -b follow_ROI_FSWe+orig -expr a*bool(b) -datum float -prefix rm.all_runs.volreg.mask
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.all_runs.volreg.mask+orig.BRIK
3dmerge -1blur_fwhm 30 -doall -prefix Local_FSWe_rall rm.all_runs.volreg.mask+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./Local_FSWe_rall+orig.BRIK
3dTproject -polort 0 -input pb04.sub-TAG159.r01.scale+orig.HEAD pb04.sub-TAG159.r02.scale+orig.HEAD -mask full_mask.sub-TAG159+orig -censor censor_sub-TAG159_combined_2.1D -cenmode ZERO -dsort Local_FSWe_rall+orig -ort X.nocensor.xmat.1D -prefix errts.sub-TAG159.fanaticor
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ have 2 input dataset names
++ Auto-catenated dataset has 2 runs
++ input time points = 780 ; censored = 4 ; remaining = 776
++ Setting up regressors
++ 2 Blocks * 1 polynomials -- 2 polort regressors
 + -- 565 other fixed ort regressors
 + -- 1 voxel-wise dsort regressors
++ 776 retained time points MINUS 568 regressors ==> 208 D.O.F. left
++ 97203 voxels in the spatial mask
++ Compute pseudo-inverse of fixed orts
++ Loading datasets
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./errts.sub-TAG159.fanaticor+orig.BRIK
++ ===== clock time = 1h 13m 44s 44ms
3dTstat -mean -prefix rm.signal.all all_runs.sub-TAG159+orig[0..301,304..372,375..779]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.sub-TAG159.fanaticor+orig[0..301,304..372,375..779]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.sub-TAG159+orig -expr c*a/b -prefix TSNR.sub-TAG159
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./TSNR.sub-TAG159+orig.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.sub-TAG159.fanaticor+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTnorm: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.sub-TAG159+orig rm.errts.unit+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dmaskave: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
+++ 97203 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
3dcalc -a follow_ROI_aeseg+orig -b full_mask.sub-TAG159+orig -expr a*b -prefix rm.fm.aeseg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.fm.aeseg+orig.BRIK
3dmaskave -q -mask rm.fm.aeseg+orig rm.errts.unit+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dmaskave: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
+++ 82224 voxels survive the mask
3dcalc -a rm.errts.unit+orig -b mean.unit.aeseg.1D -expr a*b -prefix rm.DP.aeseg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.DP.aeseg+orig.BRIK
3dTstat -sum -prefix corr_af_aeseg rm.DP.aeseg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_af_aeseg+orig.BRIK
3dcalc -a follow_ROI_FSvent+orig -b full_mask.sub-TAG159+orig -expr a*b -prefix rm.fm.FSvent
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.fm.FSvent+orig.BRIK
3dmaskave -q -mask rm.fm.FSvent+orig rm.errts.unit+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dmaskave: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
+++ 802 voxels survive the mask
3dcalc -a rm.errts.unit+orig -b mean.unit.FSvent.1D -expr a*b -prefix rm.DP.FSvent
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./rm.DP.FSvent+orig.BRIK
3dTstat -sum -prefix corr_af_FSvent rm.DP.FSvent+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_af_FSvent+orig.BRIK
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[0..$]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[0..$]
touch blur_est.sub-TAG159.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded   
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..301,304..372,375..389 ==  ) continue
3dFWHMx -detrend -mask full_mask.sub-TAG159+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.sub-TAG159.fanaticor+orig[0..301,304..372,375..389]
++ 3dFWHMx: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: The Bob
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Number of voxels in mask = 97203
++ detrending start: 27 baseline funcs, 386 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 10.87 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded   
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 390..779 ==  ) continue
3dFWHMx -detrend -mask full_mask.sub-TAG159+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.sub-TAG159.fanaticor+orig[390..779]
++ 3dFWHMx: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: The Bob
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Number of voxels in mask = 97203
++ detrending start: 29 baseline funcs, 390 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 10.92 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.690001 1.9007 7.75249 5.1528
echo 0.690001 1.9007 7.75249 5.1528   # errts ACF blur estimates
gen_epi_review.py -script @epi_review.sub-TAG159 -dsets pb00.sub-TAG159.r01.tcat+orig.HEAD pb00.sub-TAG159.r02.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.2 -out_limit 0.1 -errts_dset errts.sub-TAG159.fanaticor+orig.HEAD -exit0
rm -f rm.all_runs.volreg.mask+orig.BRIK rm.all_runs.volreg.mask+orig.HEAD rm.all_runs.volreg+orig.BRIK rm.all_runs.volreg+orig.HEAD rm.bpass.1D rm.censor.r01.1D rm.censor.r02.1D rm.det_pcin_r01+orig.BRIK rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.BRIK rm.det_pcin_r02+orig.HEAD rm.det_pcin_rall+orig.BRIK rm.det_pcin_rall+orig.HEAD rm.DP.aeseg+orig.BRIK rm.DP.aeseg+orig.HEAD rm.DP.FSvent+orig.BRIK rm.DP.FSvent+orig.HEAD rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK rm.epi.1.r02+orig.HEAD rm.epi.all1+orig.BRIK rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK rm.epi.min.r02+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.fm.aeseg+orig.BRIK rm.fm.aeseg+orig.HEAD rm.fm.FSvent+orig.BRIK rm.fm.FSvent+orig.HEAD rm.mask_r01+orig.BRIK rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK rm.mask_r02+orig.HEAD rm.mean_r01+orig.BRIK rm.mean_r01+orig.HEAD rm.mean_r02+orig.BRIK rm.mean_r02+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.resam.anat+orig.BRIK rm.resam.anat+orig.HEAD rm.ROIPC.FSvent00.1D rm.ROIPC.FSvent01.1D rm.ROIPC.FSvent02.1D rm.ROIPC.FSvent_eig.1D rm.ROIPC.FSvent+orig.BRIK rm.ROIPC.FSvent+orig.HEAD rm.ROIPC.FSvent_vec.1D rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD
tee out.ss_review.sub-TAG159.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic
cd ..
echo execution finished: `date`
date
