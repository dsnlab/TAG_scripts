echo auto-generated by afni_proc.py, Tue Jan 22 09:48:06 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG009
endif
set output_dir = sub-TAG009.results
if ( -d sub-TAG009.results ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir sub-TAG009.results
mkdir sub-TAG009.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG009/SUMA/sub-TAG009_SurfVol.nii.gz sub-TAG009.results/sub-TAG009_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG009/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG009.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG009/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG009.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG009/SUMA/sub-TAG009_vent.nii.gz sub-TAG009.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG009/SUMA/sub-TAG009_WM.nii.gz sub-TAG009.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG009.results/pb00.sub-TAG009.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG009/ses-wave2/func/sub-TAG009_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.5 s
3dTcat -prefix sub-TAG009.results/pb00.sub-TAG009.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG009/ses-wave2/func/sub-TAG009_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.9 s
3dTcat -prefix sub-TAG009.results/pb00.sub-TAG009.r03.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG009/ses-wave2/func/sub-TAG009_ses-wave2_task-rest_run-03_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.0 s
set tr_counts = ( 390 390 390 )
cd sub-TAG009.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG009.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r01.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ 94446 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG009.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r02.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ 94191 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG009.r03.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r03.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ 94191 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 390 -index_to_run_tr 696
set minoutrun = 02
set minouttr = 306
tee out.min_outlier.txt
echo min outlier: run 02, TR 306
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG009.r01.despike pb00.sub-TAG009.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r01.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG009.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 782ms

++ FINAL: 163080060 data points, 6088886 edits [3.734%], 393012 big edits [0.241%]
++ Output dataset ./pb01.sub-TAG009.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG009.r02.despike pb00.sub-TAG009.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r02.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG009.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 751ms

++ FINAL: 163080060 data points, 6184154 edits [3.792%], 427846 big edits [0.262%]
++ Output dataset ./pb01.sub-TAG009.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG009.r03.despike pb00.sub-TAG009.r03.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG009.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG009.r03.tcat+orig.BRIK is 12.492723 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG009.r03.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 570ms

++ FINAL: 163080060 data points, 6184154 edits [3.792%], 427846 big edits [0.262%]
++ Output dataset ./pb01.sub-TAG009.r03.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG009.r02.despike+orig[306]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG009_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG009_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 12.492723 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2068.164062
 + Used gradual clip level = 1939.351196 .. 2122.971191
 + Number voxels above clip level = 97033
 + Clustering voxels ...
 + Largest cluster has 95131 voxels
 + Clustering voxels ...
 + Largest cluster has 93322 voxels
 + Filled   805 voxels in small holes; now have 94127 voxels
 + Filled     4 voxels in large holes; now have 94131 voxels
 + Clustering voxels ...
 + Largest cluster has 94128 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 329232 voxels
 + Mask now has 94128 voxels
++ 94128 voxels in the mask [out of 423360: 22.23%]
++ first  15 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    3 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 12.492723 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG009_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1600306 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=1
++ 94128 voxels [20.5%] in weight mask
++ Output dataset ./__tt_sub-TAG009_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 94128
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 42.463 38.015 35.197 (index)
 + source center of mass = 132.804 165.329 168.584 (index)
 + source-target CM = -0.518 -1.766 -1.588 (xyz)
 + center of mass shifts = -0.518 -1.766 -1.588
++ shift param auto-range: -67.1..66.1 -68.4..64.8 -52.9..49.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.518356 .. 9.481644
 + Range param#2 [y-shift] = -11.766380 .. 8.233620
 + Range param#3 [z-shift] = -11.588310 .. 8.411690
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.518356 .. 39.481644
 + Range param#2 [y-shift] = -41.766380 .. 38.233620
 + Range param#3 [z-shift] = -41.588310 .. 38.411690
 + 12 free parameters
++ Normalized convergence radius = 0.000429
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1600306 [out of 26264084] voxels
 + base mask has 118275 [out of 458640] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=38 usiz=76
 + - copying weight image
 + - using 94128 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 44.3876 .. 191.799; base clip 1423.79 .. 5039.95
 +  - versus source range 0.0547951 .. 184.557; base range 0 .. 6577.83
 + 85176 total points stored in 818 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo+o-+o.+o.---o+--.$.o + - best 45 costs found:
    0 v= 0.353079:  -0.52  -1.77  -1.59   0.00   0.00   0.00  [grid]
    1 v= 0.829608:  -4.60   4.46  -9.38  -4.32 -22.85 -18.95  [rand]
    2 v= 0.885209: -13.85  11.57 -14.92  30.00 -15.00  15.00  [grid]
    3 v= 0.889955:  12.81  11.57 -14.92 -30.00 -15.00 -15.00  [grid]
    4 v= 0.902714: -27.19  11.57  11.75  30.00 -15.00 -30.00  [grid]
    5 v= 0.906817: -14.72   7.69   3.25  15.99 -13.53 -29.93  [rand]
    6 v= 0.906950:   3.56   4.46  -9.38   4.32 -22.85  18.95  [rand]
    7 v= 0.949949:  26.15  11.57 -14.92 -15.00 -30.00  30.00  [grid]
    8 v= 0.958229:  27.66  12.46 -15.07 -11.27 -31.24  23.90  [rand]
    9 v= 0.965225:  26.15  11.57 -14.92 -15.00 -30.00  15.00  [grid]
   10 v= 0.976490:  12.81  11.57 -14.92 -15.00 -15.00  15.00  [grid]
   11 v= 0.996705:  -4.60   4.46  -9.38   4.32 -22.85 -18.95  [rand]
   12 v= 0.999296:  -4.60  -7.99   6.21   4.32  22.85  18.95  [rand]
   13 v= 1.017637: -27.19  11.57 -14.92  15.00 -30.00 -15.00  [grid]
   14 v= 1.022239:  13.69   7.69  -6.43 -15.99 -13.53  29.93  [rand]
   15 v= 1.026095: -28.70  12.46 -15.07  11.27 -31.24 -23.90  [rand]
   16 v= 1.028446:  12.81 -15.10  11.75 -15.00  15.00  15.00  [grid]
   17 v= 1.035331:  12.81  11.57 -14.92  15.00 -15.00  30.00  [grid]
   18 v= 1.036169:   3.56  -7.99   6.21  -4.32  22.85  18.95  [rand]
   19 v= 1.045084:   3.56  -7.99   6.21   4.32  22.85  18.95  [rand]
   20 v= 1.048766:  26.15  11.57 -14.92 -30.00 -30.00  15.00  [grid]
   21 v= 1.049930: -16.50  17.73   4.14  20.53  -3.14 -10.08  [rand]
   22 v= 1.063904:  24.17   2.84 -17.97  -8.97 -18.72  30.56  [rand]
   23 v= 1.064020: -13.85  11.57 -14.92  15.00 -15.00 -15.00  [grid]
   24 v= 1.068077: -13.85  11.57 -14.92  15.00 -30.00 -15.00  [grid]
   25 v= 1.073949:   3.56   4.46   6.21   4.32  22.85  18.95  [rand]
   26 v= 1.077023:  -9.16  18.67 -19.06  25.20 -18.50  13.54  [rand]
   27 v= 1.077247: -13.85  11.57 -14.92 -15.00 -30.00 -30.00  [grid]
   28 v= 1.078689:  12.81  11.57 -14.92 -15.00 -30.00  15.00  [grid]
   29 v= 1.082631:   3.56   4.46  -9.38  -4.32 -22.85  18.95  [rand]
   30 v= 1.083300:  13.69 -11.22   3.25 -15.99  13.53 -29.93  [rand]
   31 v= 1.086109: -14.72   7.69  -6.43  15.99 -13.53 -29.93  [rand]
   32 v= 1.089407:  12.81 -15.10  11.75 -15.00  15.00 -15.00  [grid]
   33 v= 1.097249:  31.32  10.03   1.15 -23.31  -3.26  40.47  [rand]
   34 v= 1.097968: -27.19  11.57  11.75  15.00 -15.00 -30.00  [grid]
   35 v= 1.104400:  13.69   7.69  -6.43  15.99 -13.53  29.93  [rand]
   36 v= 1.108517:  12.81  11.57 -28.25 -30.00 -30.00 -15.00  [grid]
   37 v= 1.110614:  21.83  14.62 -17.42 -41.11 -22.86  -3.97  [rand]
   38 v= 1.113692:  13.69   7.69   3.25 -15.99 -13.53  29.93  [rand]
   39 v= 1.116549:   3.56   4.46   6.21  -4.32  22.85  18.95  [rand]
   40 v= 1.120620: -13.85 -15.10  11.75  15.00  15.00 -15.00  [grid]
   41 v= 1.131142: -16.50  17.73  -7.31  20.53  -3.14 -10.08  [rand]
   42 v= 1.131667:   3.56  -7.99   6.21  -4.32  22.85 -18.95  [rand]
   43 v= 1.132127:  12.81 -15.10  11.75 -15.00  15.00  30.00  [grid]
   44 v= 1.140515: -14.72   7.69  -6.43 -15.99 -13.53 -29.93  [rand]
*[#8004=0.35022] *[#8012=0.350174] *[#8015=0.308877] *[#8016=0.226275] *[#8017=0.179205] *[#8020=0.162971] *[#8022=0.144101] *[#8024=0.126937] *[#8025=0.11615] *[#8027=0.0814384] *[#8028=0.0644715] *[#8029=0.0640288] *[#8032=0.0585692] *[#8033=0.0554023] *[#8037=0.0358242] *[#8040=0.0316435] *[#9261=0.0307791] *[#9262=0.0299446]  + - costs of the above after a little optimization:
    0 v= 0.031644:  -0.23  -0.14   0.67  -0.15   0.73   0.40  [grid]
    1 v= 0.048963:  -0.76   0.30   0.75   0.14   0.41   0.28  [rand]
    2 v= 0.389873:   3.93   3.73  -2.50  -1.46  -2.74   4.11  [grid]
    3 v= 0.348032:   2.28   0.84  -1.76  -2.22  -0.97   3.18  [grid]
    4 v= 0.749792: -30.07   9.31   9.31  27.08  -9.34 -33.04  [grid]
    5 v= 0.240198:  -2.98   0.23  -0.78   0.94  -0.20  -1.13  [rand]
    6 v= 0.041589:   0.08   0.43   0.36  -0.09   0.31   0.71  [rand]
    7 v= 0.852101:  25.18   9.77 -14.15 -11.60 -28.02  27.93  [grid]
    8 v= 0.718228:  21.82   1.46  -5.36  -8.99 -15.01  34.67  [rand]
    9 v= 0.817489:  23.97   7.73 -15.60 -14.83 -27.31  19.69  [grid]
   10 v= 0.139380:   2.13  -0.47   0.61  -1.42   0.86   2.01  [grid]
   11 v= 0.193061:  -0.02   2.25  -1.51   0.20  -1.52   0.97  [rand]
   12 v= 0.275206:  -0.06   0.29  -0.16  -1.31  -1.25   1.43  [rand]
   13 v= 0.633807: -10.73   4.67  -5.49  13.15  -7.92 -10.41  [grid]
   14 v= 0.234771:   3.37  -1.42   1.10  -1.95   1.83   2.82  [rand]
   15 v= 0.653054: -18.09   1.12   1.50   9.52  -6.29 -29.69  [rand]
   16 v= 0.069878:   1.21  -0.34   0.91  -0.84   0.94   1.48  [grid]
  *17 v= 0.029945:  -0.11   0.08   0.80  -0.23   0.58   0.58  [grid]
   18 v= 0.057403:   0.64  -0.56   0.68  -0.83   0.60   1.07  [rand]
   19 v= 0.092512:   0.68  -0.79   1.78  -0.65   1.58   1.41  [rand]
   20 v= 0.629707:  17.71   0.21  -1.07 -14.74  -4.49  17.21  [grid]
   21 v= 0.342799:  -4.80  -0.83   2.35   2.42   2.12  -2.68  [rand]
   22 v= 0.441185:   6.34  -0.52  -2.11  -3.34  -1.74   4.64  [rand]
   23 v= 0.453093:  -2.88   2.33  -4.87   0.62  -4.52  -2.03  [grid]
   24 v= 0.261733:  -0.05   3.26  -2.52  -0.39  -2.55   0.54  [grid]
   25 v= 0.077066:  -0.18  -0.60   1.83  -0.09   1.74   0.61  [rand]
   26 v= 0.062422:  -1.11  -0.42   0.99   0.27   0.79  -0.04  [rand]
   27 v= 0.487095:  -6.91  -1.65  -2.62   3.54   0.08  -5.95  [grid]
   28 v= 0.605601:  12.33  -0.17  -3.44 -12.14  -2.24  16.11  [grid]
   29 v= 0.167446:  -0.03   1.88  -0.89   0.41  -1.17   0.90  [rand]
   30 v= 0.039794:   0.61  -0.51   1.04  -0.41   0.90   1.14  [rand]
   31 v= 0.574417: -11.02  -3.00  -0.90   7.35  -0.97 -13.78  [rand]
   32 v= 0.113718:   1.68  -0.00   0.14  -1.02   0.41   1.45  [grid]
   33 v= 0.642014:  18.50  -1.85  -1.83 -11.82  -5.45  25.70  [rand]
   34 v= 0.685952: -23.25   4.60   5.27  18.40  -5.90 -28.88  [grid]
   35 v= 0.179492:   1.01   1.30  -1.00  -0.99  -1.24   1.01  [rand]
   36 v= 0.734369:  14.87  -2.87  -9.15 -20.42 -10.96  -7.24  [grid]
   37 v= 0.807749:  21.47   8.24 -15.46 -27.30 -20.06  -1.68  [rand]
   38 v= 0.628751:  16.51  -1.64  -3.55 -10.03  -6.34  23.64  [rand]
   39 v= 0.089944:   1.01  -0.44   1.52  -0.61   1.56   1.54  [rand]
   40 v= 0.358484:  -4.42  -2.63   1.88   2.14   3.21  -2.08  [grid]
   41 v= 0.423693:  -4.81  -0.46  -1.99   2.16   0.61  -3.60  [rand]
   42 v= 0.225149:  -3.26   0.18   1.02   1.00   0.25  -1.74  [rand]
   43 v= 0.221833:   3.25  -1.10   0.80  -2.04   0.78   2.04  [grid]
   44 v= 0.562731: -12.74  -1.98   0.60   9.35   0.34  -8.94  [rand]
 + - save #17 for twobest
 + - skip # 0 for twobest: too close to set #17
 + - skip #30 for twobest: too close to set #17
 + - skip # 6 for twobest: too close to set #17
 + - skip # 1 for twobest: too close to set #17
 + - skip #18 for twobest: too close to set #17
 + - skip #26 for twobest: too close to set #17
 + - skip #16 for twobest: too close to set #17
 + - skip #25 for twobest: too close to set #17
 + - skip #39 for twobest: too close to set #17
 + - skip #19 for twobest: too close to set #17
 + - skip #32 for twobest: too close to set #17
 + - skip #10 for twobest: too close to set #17
 + - skip #29 for twobest: too close to set #17
 + - skip #35 for twobest: too close to set #17
 + - skip #11 for twobest: too close to set #17
 + - skip #43 for twobest: too close to set #17
 + - skip #42 for twobest: too close to set #17
 + - skip #14 for twobest: too close to set #17
 + - skip # 5 for twobest: too close to set #17
 + - skip #24 for twobest: too close to set #17
 + - skip #12 for twobest: too close to set #17
 + - skip #21 for twobest: too close to set #26
 + - skip # 3 for twobest: too close to set #17
 + - skip #40 for twobest: too close to set # 1
 + - skip # 2 for twobest: too close to set # 6
 + - skip #41 for twobest: too close to set #26
 + - skip #22 for twobest: too close to set #43
 + - skip #23 for twobest: too close to set #29
 + - skip #27 for twobest: too close to set #42
 + - save #44 for twobest
 + - save #31 for twobest
 + - save #28 for twobest
 + - save #38 for twobest
 + - save #20 for twobest
 + - save #13 for twobest
 + - skip #33 for twobest: too close to set #38
 + - save #15 for twobest
 + - save #34 for twobest
 + - save # 8 for twobest
 + - save #36 for twobest
 + - save # 4 for twobest
 + - save #37 for twobest
 + - save # 9 for twobest
 + - save # 7 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=38 usiz=76
 + - retaining old weight image
 + - using 94128 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 44.4371 .. 192.013; base clip 1429.11 .. 5126.83
 +  - versus source range 0.0068789 .. 184.521; base range 0 .. 6598.43
 + 86713 total points stored in 846 'RHDD(9.42766)' bloks
 + - param set #1 has cost=0.083156
 + -- Parameters = -0.1631 -0.0302 0.7314 -0.0400 0.5841 0.6088 0.9946 1.0026 0.9980 0.0004 0.0008 0.0002
 + - param set #2 has cost=0.387985
 + -- Parameters = -5.6176 2.7017 -0.5963 3.4752 0.2117 -1.6827 0.9850 0.9819 0.9746 0.0212 0.0263 0.0264
 + - param set #3 has cost=0.189057
 + -- Parameters = -2.0581 0.9399 0.6306 0.4896 0.7391 -1.8203 1.0021 0.9813 1.0013 0.0092 0.0542 -0.0023
 + - param set #4 has cost=0.512526
 + -- Parameters = 9.0956 -0.8550 -4.2462 -2.2640 -0.7898 10.2496 0.9646 0.9958 0.9924 0.0081 -0.0156 -0.0379
 + - param set #5 has cost=0.573082
 + -- Parameters = 14.5210 -0.0160 -4.0330 -8.5251 -1.4465 19.4190 0.9886 0.9678 0.9839 0.0449 -0.0293 -0.0369
 + - param set #6 has cost=0.345055
 + -- Parameters = 3.4198 2.2333 2.0928 -3.1740 0.1532 1.0702 0.9532 0.9945 0.9846 -0.0358 0.0061 -0.0171
 + - param set #7 has cost=0.223298
 + -- Parameters = -1.0629 1.8373 0.9355 0.3320 -0.3337 -0.1095 0.9886 0.9927 0.9627 0.0206 0.0125 0.0016
 + - param set #8 has cost=0.581999
 + -- Parameters = -17.3337 -1.6811 -0.3264 7.0611 -4.5200 -24.5692 0.9715 0.9760 0.9708 -0.0087 0.0092 -0.0009
 + - param set #9 has cost=0.595351
 + -- Parameters = -23.4898 4.9910 7.0630 16.7201 -6.0081 -31.8005 0.9773 0.9748 0.9731 -0.0110 -0.0048 -0.0112
 + - param set #10 has cost=0.589356
 + -- Parameters = 19.9003 4.1460 -6.4781 -8.4362 -21.5241 30.0475 0.9667 0.9553 0.9520 0.0067 -0.0081 0.0021
 + - param set #11 has cost=0.551896
 + -- Parameters = 13.0887 -1.1596 -4.5104 -14.7313 -10.3162 3.5565 0.9524 0.9409 0.9941 -0.0029 -0.0125 0.0030
 + - param set #12 has cost=0.087957
 + -- Parameters = -0.1140 -0.2571 0.9702 -0.0922 0.8734 0.6432 1.0010 1.0025 0.9968 0.0009 0.0009 0.0018
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0176 XXX
 + --- dist(#3,#1) = 0.0964 
 + --- dist(#4,#1) = 0.163 
 + --- dist(#5,#1) = 0.118 
 + --- dist(#6,#1) = 0.171 
 + --- dist(#7,#1) = 0.168 
 + --- dist(#8,#1) = 0.209 
 + --- dist(#9,#1) = 0.28 
 + --- dist(#10,#1) = 0.327 
 + --- dist(#11,#1) = 0.36 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #2 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=38 usiz=76
 + - retaining old weight image
 + - using 94128 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 44.5662 .. 192.57; base clip 1432.74 .. 5219.58
 +  - versus source range 0 .. 184.513; base range 0 .. 6608.46
 + 85784 total points stored in 884 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.118100
 + -- Parameters = -0.1990 -0.3588 1.1468 0.0770 0.5480 0.6648 0.9941 1.0083 0.9925 0.0020 -0.0006 -0.0054
 + - param set #2 has cost=0.150169
 + -- Parameters = -1.6836 -0.2612 1.3537 0.4400 0.1191 -1.1707 0.9906 1.0084 0.9878 0.0158 0.0438 -0.0157
 + - param set #3 has cost=0.146318
 + -- Parameters = -0.5163 -0.2893 2.0771 0.3141 0.8844 0.4878 0.9892 0.9990 0.9754 0.0166 0.0077 -0.0074
 + - param set #4 has cost=0.155140
 + -- Parameters = 0.6291 0.3465 1.9765 -1.1010 -0.4503 0.6670 0.9892 1.0078 0.9773 -0.0413 0.0042 -0.0289
 + - param set #5 has cost=0.268965
 + -- Parameters = -1.9081 1.4216 0.4535 0.5115 1.0596 -1.2682 1.0057 0.9727 1.0065 0.0361 0.0396 0.0083
 + - param set #6 has cost=0.342810
 + -- Parameters = 2.5784 -0.0526 2.4445 -2.4741 -1.6493 1.6307 0.9218 1.0264 0.9820 -0.0141 -0.0276 -0.0567
 + - param set #7 has cost=0.467290
 + -- Parameters = 1.8609 1.7637 -1.6459 -0.7156 -5.9103 3.2811 0.9719 0.9683 1.0247 -0.0149 -0.0257 -0.0371
 + - param set #8 has cost=0.355396
 + -- Parameters = 2.0076 3.5239 1.7306 -1.4357 -1.2123 2.8411 0.9852 0.9376 0.9778 0.0248 -0.0510 -0.0467
 + - param set #9 has cost=0.582837
 + -- Parameters = -17.2633 -1.9850 -0.5830 7.0791 -4.4980 -24.8101 0.9698 0.9751 0.9688 -0.0089 0.0170 -0.0007
 + - param set #10 has cost=0.587724
 + -- Parameters = 19.9047 5.0898 -6.8357 -7.6566 -21.8557 29.9078 0.9645 0.9584 0.9478 0.0087 -0.0005 0.0049
 + - param set #11 has cost=0.585670
 + -- Parameters = -21.2642 3.3061 7.7810 15.4744 -4.5522 -19.0064 0.9699 0.9753 0.9428 -0.0255 -0.0017 -0.0161
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0658 
 + --- dist(#3,#1) = 0.199 
 + --- dist(#4,#1) = 0.195 
 + --- dist(#5,#1) = 0.181 
 + --- dist(#6,#1) = 0.231 
 + --- dist(#7,#1) = 0.227 
 + --- dist(#8,#1) = 0.143 
 + --- dist(#9,#1) = 0.283 
 + --- dist(#10,#1) = 0.263 
 + --- dist(#11,#1) = 0.325 
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=38 usiz=76
 + - retaining old weight image
 + - using 94128 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 44.5958 .. 192.698; base clip 1434.5 .. 5279.28
 +  - versus source range 0 .. 184.508; base range 0 .. 6615.95
 + 86694 total points stored in 891 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.134059
 + -- Parameters = -0.1662 -0.5288 1.4206 -0.0591 0.5960 0.5041 0.9936 1.0103 0.9863 -0.0006 0.0039 -0.0051
 + - param set #2 has cost=0.140250
 + -- Parameters = -0.5510 -0.6447 1.7307 0.1919 0.4857 0.4131 0.9953 1.0121 0.9823 0.0081 0.0048 -0.0096
 + - param set #3 has cost=0.153326
 + -- Parameters = -1.3153 -0.1734 1.5365 0.2447 0.0315 -0.7912 0.9942 1.0091 0.9841 0.0075 0.0345 -0.0171
 + - param set #4 has cost=0.145523
 + -- Parameters = 0.2818 -0.0966 1.9844 -0.5787 -0.3712 0.5888 0.9925 1.0165 0.9789 -0.0268 0.0043 -0.0275
 + - param set #5 has cost=0.187657
 + -- Parameters = -1.2430 0.1012 0.4549 0.5807 -0.2268 -0.5926 0.9835 1.0039 1.0035 0.0238 0.0289 -0.0152
 + - param set #6 has cost=0.181151
 + -- Parameters = 1.0179 0.7395 1.7791 -0.3633 -1.6990 1.8235 0.9814 1.0241 0.9856 -0.0105 -0.0261 -0.0512
 + - param set #7 has cost=0.213887
 + -- Parameters = 1.7489 1.0118 1.6709 -0.3295 -1.2358 2.7849 0.9905 0.9937 0.9868 0.0158 -0.0438 -0.0430
 + - param set #8 has cost=0.212719
 + -- Parameters = 0.3161 0.9361 0.5270 -0.2835 -1.2093 1.2478 0.9812 1.0051 1.0170 -0.0066 -0.0221 -0.0352
 + - param set #9 has cost=0.580613
 + -- Parameters = -17.0767 -2.2456 -0.4507 6.6553 -4.5989 -24.5513 0.9699 0.9775 0.9643 -0.0130 0.0215 -0.0017
 + - param set #10 has cost=0.585442
 + -- Parameters = -20.8185 2.6858 7.8127 15.5302 -4.5078 -19.1132 0.9687 0.9813 0.9549 -0.0282 -0.0032 -0.0228
 + - param set #11 has cost=0.584085
 + -- Parameters = 19.5328 5.0877 -7.1896 -7.7052 -21.4941 29.6184 0.9596 0.9584 0.9300 0.0107 -0.0061 0.0101
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0394 
 + --- dist(#3,#1) = 0.118 
 + --- dist(#4,#1) = 0.137 
 + --- dist(#5,#1) = 0.207 
 + --- dist(#6,#1) = 0.112 
 + --- dist(#7,#1) = 0.135 
 + --- dist(#8,#1) = 0.215 
 + --- dist(#9,#1) = 0.278 
 + --- dist(#10,#1) = 0.323 
 + --- dist(#11,#1) = 0.258 
 + - Total coarse refinement net CPU time = 0.0 s; 3210 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=38 usiz=76
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 +  - histogram: source clip 44.6743 .. 193.038; base clip 1434.5 .. 5279.28
 +  - versus source range 0 .. 184.532; base range 0 .. 6615.61
 + 85610 total points stored in 891 'RHDD(9.27904)' bloks
 + - cost(#1)=0.128854 *
 + -- Parameters = -0.1662 -0.5288 1.4206 -0.0591 0.5960 0.5041 0.9936 1.0103 0.9863 -0.0006 0.0039 -0.0051
 + - cost(#2)=0.135614  
 + -- Parameters = -0.5510 -0.6447 1.7307 0.1919 0.4857 0.4131 0.9953 1.0121 0.9823 0.0081 0.0048 -0.0096
 + - cost(#3)=0.141247  
 + -- Parameters = 0.2818 -0.0966 1.9844 -0.5787 -0.3712 0.5888 0.9925 1.0165 0.9789 -0.0268 0.0043 -0.0275
 + - cost(#4)=0.149045  
 + -- Parameters = -1.3153 -0.1734 1.5365 0.2447 0.0315 -0.7912 0.9942 1.0091 0.9841 0.0075 0.0345 -0.0171
 + - cost(#5)=0.176719  
 + -- Parameters = 1.0179 0.7395 1.7791 -0.3633 -1.6990 1.8235 0.9814 1.0241 0.9856 -0.0105 -0.0261 -0.0512
 + - cost(#6)=0.185303  
 + -- Parameters = -1.2430 0.1012 0.4549 0.5807 -0.2268 -0.5926 0.9835 1.0039 1.0035 0.0238 0.0289 -0.0152
 + - cost(#7)=0.209134  
 + -- Parameters = 0.3161 0.9361 0.5270 -0.2835 -1.2093 1.2478 0.9812 1.0051 1.0170 -0.0066 -0.0221 -0.0352
 + - cost(#8)=0.209931  
 + -- Parameters = 1.7489 1.0118 1.6709 -0.3295 -1.2358 2.7849 0.9905 0.9937 0.9868 0.0158 -0.0438 -0.0430
 + - cost(#9)=0.581805  
 + -- Parameters = -17.0767 -2.2456 -0.4507 6.6553 -4.5989 -24.5513 0.9699 0.9775 0.9643 -0.0130 0.0215 -0.0017
 + - cost(#10)=0.584427  
 + -- Parameters = 19.5328 5.0877 -7.1896 -7.7052 -21.4941 29.6184 0.9596 0.9584 0.9300 0.0107 -0.0061 0.0101
 + - cost(#11)=0.585612  
 + -- Parameters = -20.8185 2.6858 7.8127 15.5302 -4.5078 -19.1132 0.9687 0.9813 0.9549 -0.0282 -0.0032 -0.0228
 + - cost(#12)=0.410728  
 + -- Parameters = -0.5184 -1.7664 -1.5883 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=0.125911 *
 + -- Parameters = -0.1332 -0.5312 1.4891 -0.1185 0.6209 0.5327 0.9932 1.0113 0.9861 -0.0048 0.0040 -0.0059
 + - cost(#2)=0.128429  
 + -- Parameters = -0.2163 -0.6312 1.7280 -0.0471 0.5534 0.4827 0.9955 1.0123 0.9826 0.0018 0.0046 -0.0091
 + - cost(#3)=0.127593  
 + -- Parameters = 0.2221 0.0948 1.9824 -0.4137 -0.2693 0.7416 0.9951 1.0111 0.9792 -0.0167 0.0013 -0.0261
 + - cost(#4)=0.140549  
 + -- Parameters = -1.0676 -0.3349 1.6898 0.1655 0.1926 -0.5401 0.9950 1.0101 0.9840 0.0051 0.0267 -0.0174
 + - cost(#5)=0.144695  
 + -- Parameters = 0.7824 1.2613 1.9115 -0.4187 -1.6312 1.4515 0.9955 1.0058 0.9790 -0.0143 -0.0163 -0.0489
 + - cost(#6)=0.145986  
 + -- Parameters = -0.9076 0.0725 1.3496 0.2978 -0.4915 -0.3093 0.9921 1.0110 0.9898 0.0124 0.0228 -0.0256
 + - cost(#7)=0.141624  
 + -- Parameters = 0.6078 1.0341 1.1165 -0.3439 -1.1828 1.2745 0.9908 1.0068 0.9946 -0.0071 -0.0080 -0.0350
 + - cost(#8)=0.160679  
 + -- Parameters = 1.4154 0.9288 1.5176 -0.4654 -1.2850 2.3383 0.9928 1.0076 0.9878 -0.0125 -0.0365 -0.0403
 + - cost(#9)=0.573514  
 + -- Parameters = -14.4261 -5.4334 1.9003 4.2615 0.3519 -22.4999 0.9581 0.9725 0.9755 -0.0066 0.0331 0.0047
 + - cost(#10)=0.581541  
 + -- Parameters = 18.3853 4.5765 -8.3295 -7.5466 -21.7334 28.3802 0.9536 0.9611 0.9231 0.0041 -0.0096 0.0130
 + - cost(#11)=0.584659  
 + -- Parameters = -21.2884 1.9233 7.6275 15.8646 -4.2365 -18.9144 0.9684 0.9810 0.9538 -0.0287 -0.0074 -0.0256
 + - cost(#12)=0.127166  
 + -- Parameters = -0.0688 -0.7689 1.5730 -0.1390 0.7222 0.5801 0.9947 1.0117 0.9849 -0.0030 0.0017 -0.0064
 + - case #1 is now the best
 + - Initial  cost = 0.125911
 + - Initial fine Parameters = -0.1332 -0.5312 1.4891 -0.1185 0.6209 0.5327 0.9932 1.0113 0.9861 -0.0048 0.0040 -0.0059
 + - Finalish cost = 0.125329 ; 119 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 44.6851 .. 193.084; base clip 1434.5 .. 5279.28
 +  - versus source range 0 .. 184.532; base range 0 .. 6615.61
*[#16083=-0.423779] *[#16136=-0.424002] *[#16153=-0.424035] *[#16154=-0.424122] *[#16161=-0.424564] *[#16166=-0.42505] *[#16167=-0.425286] *[#16171=-0.426269] *[#16172=-0.426869] *[#16173=-0.426972] *[#16177=-0.427322] *[#16186=-0.427679] *[#16188=-0.428307] *[#16189=-0.42839] *[#16195=-0.428936] *[#16196=-0.428952] *[#16204=-0.429055] *[#16207=-0.429437] *[#16208=-0.429517] *[#16232=-0.429977] *[#16235=-0.430069] *[#16239=-0.430082] *[#16243=-0.430564] *[#16256=-0.430799] *[#16259=-0.430962] *[#16264=-0.431064] *[#16266=-0.431195] *[#16271=-0.431518] *[#16305=-0.431558] *[#16306=-0.431596] *[#16307=-0.4316] *[#16311=-0.431631] *[#16317=-0.431645] *[#16322=-0.431672] *[#16323=-0.431677] *[#16324=-0.431677] *[#16326=-0.431681] *[#16329=-0.431732] *[#16330=-0.431744] *[#16332=-0.431805] *[#16333=-0.431839] *[#16334=-0.431856] *[#16335=-0.431872] *[#16338=-0.431893] *[#16339=-0.431903] *[#16340=-0.431914] *[#16341=-0.431929] *[#16342=-0.431933] *[#16343=-0.431987] *[#16347=-0.431995] *[#16350=-0.432011] *[#16351=-0.432025] *[#16356=-0.432051] *[#16357=-0.432067] *[#16358=-0.432074] *[#16361=-0.432078] *[#16362=-0.432083] *[#16365=-0.432093] *[#16368=-0.432121] *[#16371=-0.432148] *[#16372=-0.43217] *[#16373=-0.432197] *[#16374=-0.432214] *[#16377=-0.432215] *[#16379=-0.432235] *[#16380=-0.432251] *[#16381=-0.432272] *[#16384=-0.432314] *[#16385=-0.432321] *[#16386=-0.432327] *[#16389=-0.43236] *[#16390=-0.432374] *[#16391=-0.432378] *[#16392=-0.432391] *[#16393=-0.432405] *[#16398=-0.432419] *[#16401=-0.432439] *[#16404=-0.43245] *[#16405=-0.432464] *[#16410=-0.432464] *[#16414=-0.432465] *[#16416=-0.432478] *[#16419=-0.432489] *[#16420=-0.43249] *[#16421=-0.432499] *[#16424=-0.432506] *[#16425=-0.432508] *[#16426=-0.432512] *[#16427=-0.432518] *[#16432=-0.432521] *[#16433=-0.432525] *[#16434=-0.432528] *[#16437=-0.432533] *[#16438=-0.432535] *[#16441=-0.432545] *[#16442=-0.432548] *[#16449=-0.432573] *[#16450=-0.432581] *[#16459=-0.432591] *[#16460=-0.432598] *[#16463=-0.432598] *[#16465=-0.432605] *[#16470=-0.43261] *[#16471=-0.432611] *[#16476=-0.432613] *[#16478=-0.432615] *[#16479=-0.432616] *[#16483=-0.432617] *[#16489=-0.432619] *[#16492=-0.43262] *[#16493=-0.432624] *[#16498=-0.432628] *[#16509=-0.432629] *[#16510=-0.43263] *[#16512=-0.432631] *[#16531=-0.432633] 
 + - Final    cost = -0.432633 ; 465 funcs
 + Final fine fit Parameters:
       x-shift= 0.0119   y-shift=-0.6869   z-shift= 1.3432
       z-angle=-0.2194   x-angle= 0.2725   y-angle= 0.7013
       x-scale= 1.0003   y-scale= 1.0204   z-scale= 0.9933
     y/x-shear=-0.0078 z/x-shear= 0.0004 z/y-shear=-0.0122
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0119 -0.6869 1.3432 -0.2194 0.2725 0.7013 1.0003 1.0204 0.9933 -0.0078 0.0004 -0.0122
++ Output dataset ./__tt_sub-TAG009_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG009_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 194.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG009_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.9987 -0.0458 -0.0244 26.1759 -0.0134 0.1983 -0.9719 167.6752 0.0563 1.0001 0.2036 4.1011
++ Output dataset ./sub-TAG009_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG009.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 12.492723 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG009.r01.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG009.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 100110 voxels
 + 11584 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.190  pitch=+0.118  yaw=+0.164  dS=-0.433  dL=+0.106  dP=-0.241
++ Mean: roll=-0.082  pitch=+0.551  yaw=+0.311  dS=-0.041  dL=+0.181  dP=-0.038
++ Max : roll=+0.006  pitch=+1.142  yaw=+0.614  dS=+0.107  dL=+0.252  dP=+0.141
++ Max displacements (mm) for each sub-brick:
 1.99(0.00) 1.95(0.10) 1.94(0.11) 1.97(0.14) 1.94(0.03) 1.74(0.28) 1.95(0.24) 1.96(0.11) 1.86(0.17) 1.85(0.10) 1.81(0.14) 1.87(0.15) 1.85(0.09) 1.83(0.12) 1.91(0.16) 1.90(0.14) 1.83(0.17) 1.81(0.06) 1.75(0.13) 1.78(0.12) 1.75(0.06) 1.74(0.11) 1.74(0.11) 1.90(0.29) 2.12(0.29) 1.99(0.18) 1.82(0.20) 1.89(0.14) 1.94(0.08) 1.94(0.14) 2.01(0.17) 2.06(0.13) 1.99(0.11) 1.86(0.16) 1.94(0.16) 1.95(0.03) 1.86(0.13) 1.76(0.13) 1.78(0.17) 1.67(0.12) 1.58(0.13) 1.61(0.07) 1.59(0.05) 1.57(0.15) 1.66(0.12) 1.66(0.12) 1.57(0.17) 1.60(0.07) 1.67(0.12) 1.64(0.12) 1.66(0.10) 1.62(0.09) 1.58(0.12) 1.58(0.08) 1.60(0.14) 1.55(0.11) 1.54(0.05) 1.53(0.08) 1.48(0.12) 1.48(0.11) 1.50(0.07) 1.49(0.09) 1.53(0.11) 1.48(0.13) 1.46(0.14) 1.43(0.07) 1.47(0.13) 1.48(0.10) 1.44(0.12) 1.50(0.16) 1.44(0.06) 1.39(0.12) 1.37(0.05) 1.42(0.15) 1.45(0.08) 1.41(0.12) 1.45(0.12) 1.43(0.06) 1.40(0.12) 1.41(0.05) 1.42(0.09) 1.39(0.10) 1.41(0.03) 1.47(0.15) 1.44(0.08) 1.40(0.12) 1.42(0.10) 1.45(0.08) 1.38(0.14) 1.33(0.07) 1.40(0.14) 1.41(0.06) 1.37(0.14) 1.39(0.13) 1.39(0.03) 1.35(0.12) 1.36(0.03) 1.37(0.10) 1.32(0.10) 1.35(0.09) 1.39(0.11) 1.50(0.12) 1.48(0.05) 1.49(0.11) 1.52(0.11) 1.53(0.07) 1.49(0.08) 1.46(0.10) 1.51(0.13) 1.52(0.01) 1.50(0.07) 1.47(0.12) 1.53(0.12) 1.48(0.07) 1.43(0.11) 1.36(0.07) 1.42(0.14) 1.40(0.06) 1.41(0.09) 1.43(0.09) 1.45(0.06) 1.44(0.06) 1.43(0.11) 1.34(0.16) 1.30(0.21) 1.32(0.19) 1.46(0.20) 1.43(0.16) 1.29(0.20) 1.22(0.18) 1.20(0.10) 1.24(0.12) 1.19(0.17) 1.09(0.10) 1.18(0.16) 1.17(0.07) 1.15(0.12) 1.18(0.13) 1.21(0.07) 1.16(0.11) 1.16(0.11) 1.20(0.14) 1.27(0.09) 1.23(0.10) 1.16(0.15) 1.13(0.06) 1.17(0.15) 1.14(0.10) 1.11(0.11) 1.13(0.14) 1.12(0.06) 1.09(0.14) 1.08(0.12) 1.14(0.09) 1.11(0.08) 1.07(0.13) 1.13(0.16) 1.13(0.04) 1.12(0.07) 1.10(0.05) 1.07(0.16) 1.35(0.43) 1.37(0.16) 1.29(0.12) 1.18(0.14) 1.18(0.13) 1.17(0.10) 1.18(0.07) 1.20(0.13) 1.19(0.09) 1.23(0.07) 1.18(0.06) 1.19(0.14) 1.16(0.04) 1.15(0.07) 1.13(0.08) 1.12(0.13) 1.11(0.06) 1.11(0.09) 1.07(0.07) 1.09(0.11) 1.10(0.06) 1.08(0.11) 1.05(0.10) 1.11(0.08) 1.07(0.08) 1.05(0.10) 1.08(0.16) 1.12(0.08) 1.12(0.08) 1.09(0.06) 1.11(0.13) 1.11(0.06) 1.09(0.08) 1.09(0.13) 1.10(0.04) 1.06(0.11) 1.04(0.04) 1.05(0.10) 1.04(0.05) 1.03(0.09) 1.07(0.14) 1.09(0.03) 1.04(0.10) 1.04(0.08) 1.06(0.14) 1.10(0.07) 1.07(0.09) 1.01(0.07) 1.04(0.14) 1.06(0.06) 1.01(0.12) 1.02(0.06) 1.08(0.11) 1.07(0.05) 1.01(0.14) 1.00(0.09) 1.06(0.12) 1.07(0.07) 1.02(0.10) 1.01(0.08) 1.09(0.12) 1.05(0.08) 1.00(0.11) 0.99(0.08) 1.03(0.08) 0.99(0.10) 0.95(0.12) 1.00(0.17) 1.03(0.08) 1.04(0.04) 1.06(0.13) 1.05(0.16) 1.01(0.06) 0.99(0.05) 1.02(0.06) 1.01(0.03) 0.94(0.12) 0.92(0.04) 0.97(0.12) 0.94(0.10) 0.89(0.06) 0.95(0.14) 0.91(0.07) 0.90(0.08) 0.90(0.12) 0.92(0.03) 0.90(0.08) 0.85(0.07) 0.91(0.14) 0.89(0.04) 0.83(0.12) 0.82(0.02) 0.89(0.16) 0.90(0.04) 0.82(0.16) 0.84(0.13) 0.86(0.06) 0.77(0.12) 0.74(0.08) 0.75(0.13) 0.78(0.03) 0.77(0.09) 0.75(0.06) 0.77(0.15) 0.76(0.07) 0.77(0.06) 0.81(0.06) 0.84(0.14) 0.82(0.05) 0.82(0.05) 0.83(0.06) 0.86(0.12) 0.84(0.03) 0.79(0.11) 0.78(0.04) 0.83(0.10) 0.83(0.06) 0.78(0.11) 0.79(0.11) 0.84(0.05) 0.83(0.08) 0.77(0.07) 0.82(0.13) 0.83(0.04) 0.82(0.11) 0.81(0.10) 0.82(0.05) 0.78(0.10) 0.74(0.08) 0.78(0.12) 0.73(0.07) 0.69(0.12) 0.72(0.09) 0.77(0.09) 0.74(0.08) 0.71(0.08) 0.75(0.13) 0.77(0.04) 0.75(0.08) 0.70(0.06) 0.71(0.07) 0.79(0.14) 0.82(0.07) 0.89(0.13) 0.88(0.04) 0.86(0.05) 0.73(0.21) 0.72(0.09) 0.74(0.09) 0.68(0.13) 0.69(0.06) 0.78(0.17) 0.72(0.10) 0.70(0.09) 0.73(0.11) 0.74(0.06) 0.69(0.10) 0.66(0.10) 0.68(0.12) 0.59(0.11) 0.67(0.20) 1.00(0.54) 1.04(0.20) 0.94(0.13) 0.88(0.08) 0.81(0.18) 0.78(0.04) 0.81(0.05) 0.82(0.04) 0.80(0.14) 0.74(0.08) 0.72(0.08) 0.76(0.05) 0.68(0.12) 0.69(0.06) 0.68(0.06) 0.67(0.02) 0.65(0.13) 0.68(0.06) 0.68(0.08) 0.67(0.08) 0.66(0.05) 0.66(0.06) 0.66(0.07) 0.64(0.14) 0.65(0.03) 0.65(0.10) 0.61(0.05) 0.61(0.10) 0.60(0.06) 0.60(0.09) 0.59(0.15) 0.58(0.04) 0.56(0.11) 0.58(0.15) 0.57(0.04) 0.56(0.06) 0.56(0.04) 0.59(0.04) 0.60(0.12) 0.58(0.07) 0.57(0.09) 0.54(0.11) 0.55(0.02) 0.54(0.15) 0.60(0.14) 0.58(0.13) 0.55(0.19) 0.55(0.13) 0.57(0.09) 0.62(0.14) 0.61(0.09) 0.57(0.14) 0.55(0.09) 0.56(0.07) 0.54(0.05) 0.60(0.08) 0.61(0.12) 0.60(0.11) 0.58(0.11) 0.58(0.21) 0.55(0.08) 0.56(0.11) 0.55(0.14) 0.57(0.06) 0.56(0.13) 0.57(0.09) 0.60(0.12) 0.58(0.11)
++ Max displacement in automask = 2.12 (mm) at sub-brick 24
++ Max delta displ  in automask = 0.54 (mm) at sub-brick 322
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG009.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG009_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input pb01.sub-TAG009.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG009.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG009.r01.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG009.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG009_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 56.1
++ ###########################################################
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.492723 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG009.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 12.492723 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG009.r02.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG009.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 99857 voxels
 + 11525 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.088  pitch=-0.184  yaw=-0.143  dS=-0.421  dL=-0.070  dP=-0.142
++ Mean: roll=+0.020  pitch=+0.182  yaw=-0.009  dS=-0.082  dL=+0.001  dP=+0.041
++ Max : roll=+0.106  pitch=+0.619  yaw=+0.381  dS=+0.076  dL=+0.102  dP=+0.186
++ Max displacements (mm) for each sub-brick:
 1.18(0.00) 1.29(0.16) 1.17(0.15) 1.17(0.05) 1.26(0.12) 1.17(0.12) 1.03(0.17) 1.02(0.04) 1.11(0.14) 1.06(0.08) 1.03(0.08) 1.19(0.17) 1.18(0.05) 1.07(0.14) 1.13(0.14) 1.14(0.06) 1.00(0.16) 0.97(0.08) 1.04(0.14) 1.06(0.08) 0.97(0.14) 1.12(0.20) 1.17(0.06) 1.03(0.16) 1.02(0.06) 1.09(0.10) 1.07(0.06) 0.94(0.15) 1.03(0.14) 1.02(0.02) 0.93(0.13) 0.90(0.09) 1.00(0.11) 1.07(0.14) 1.21(0.16) 1.23(0.10) 1.25(0.04) 1.21(0.10) 1.09(0.17) 1.08(0.08) 1.17(0.13) 1.13(0.11) 1.13(0.04) 1.21(0.17) 1.19(0.12) 1.07(0.16) 1.21(0.23) 1.26(0.07) 1.14(0.21) 1.18(0.11) 1.25(0.09) 1.29(0.12) 1.22(0.08) 1.36(0.20) 1.24(0.17) 1.13(0.14) 1.10(0.08) 1.15(0.09) 1.14(0.11) 1.10(0.07) 1.15(0.16) 1.13(0.07) 1.11(0.07) 1.17(0.13) 1.16(0.08) 1.11(0.07) 1.16(0.13) 1.14(0.07) 1.07(0.12) 1.16(0.16) 1.16(0.03) 1.17(0.06) 1.09(0.08) 1.10(0.13) 1.06(0.10) 1.04(0.10) 1.03(0.12) 1.10(0.10) 1.10(0.16) 1.07(0.07) 1.08(0.11) 1.10(0.03) 1.04(0.10) 1.05(0.07) 1.09(0.09) 1.08(0.07) 1.00(0.08) 1.02(0.11) 0.99(0.05) 0.99(0.10) 0.98(0.06) 1.03(0.08) 1.02(0.04) 0.96(0.11) 0.94(0.05) 0.99(0.12) 0.96(0.07) 0.92(0.07) 1.02(0.15) 1.04(0.03) 1.03(0.04) 0.96(0.13) 0.95(0.07) 0.90(0.21) 0.73(0.55) 0.59(0.23) 0.48(0.11) 0.48(0.13) 0.49(0.09) 0.46(0.03) 0.44(0.11) 0.56(0.17) 0.55(0.23) 0.46(0.16) 0.45(0.06) 0.42(0.09) 0.45(0.05) 0.57(0.15) 0.58(0.11) 0.54(0.14) 0.44(0.11) 0.35(0.14) 0.40(0.13) 0.35(0.07) 0.35(0.11) 0.41(0.15) 0.45(0.08) 0.41(0.12) 0.38(0.08) 0.40(0.08) 0.38(0.09) 0.38(0.02) 0.44(0.08) 0.37(0.10) 0.35(0.05) 0.44(0.14) 0.39(0.07) 0.33(0.10) 0.39(0.11) 0.37(0.03) 0.33(0.07) 0.30(0.07) 0.34(0.12) 0.36(0.05) 0.31(0.08) 0.28(0.03) 0.38(0.12) 0.30(0.10) 0.27(0.07) 0.27(0.04) 0.39(0.14) 0.31(0.10) 0.26(0.07) 0.33(0.13) 0.31(0.07) 0.31(0.09) 0.35(0.12) 0.36(0.04) 0.34(0.03) 0.32(0.05) 0.29(0.04) 0.35(0.08) 0.34(0.03) 0.33(0.01) 0.28(0.08) 0.29(0.05) 0.36(0.08) 0.33(0.03) 0.31(0.04) 0.27(0.08) 0.38(0.17) 0.42(0.06) 0.36(0.11) 0.37(0.07) 0.44(0.08) 0.41(0.06) 0.34(0.12) 0.36(0.08) 0.35(0.02) 0.30(0.09) 0.40(0.13) 0.33(0.08) 0.31(0.10) 0.33(0.11) 0.37(0.05) 0.32(0.07) 0.27(0.08) 0.33(0.12) 0.32(0.03) 0.29(0.09) 0.36(0.17) 0.42(0.10) 0.45(0.09) 0.29(0.23) 0.28(0.06) 0.36(0.08) 0.27(0.16) 0.29(0.07) 0.34(0.06) 0.26(0.13) 0.26(0.10) 0.26(0.09) 0.32(0.07) 0.31(0.05) 0.28(0.07) 0.34(0.12) 0.33(0.03) 0.32(0.05) 0.30(0.08) 0.33(0.12) 0.32(0.03) 0.29(0.06) 0.26(0.05) 0.31(0.12) 0.29(0.42) 0.78(0.61) 0.69(0.18) 0.60(0.10) 0.52(0.19) 0.55(0.12) 0.50(0.11) 0.46(0.12) 0.38(0.09) 0.35(0.04) 0.33(0.06) 0.32(0.04) 0.27(0.09) 0.25(0.04) 0.25(0.07) 0.24(0.03) 0.23(0.10) 0.21(0.07) 0.20(0.05) 0.20(0.10) 0.18(0.11) 0.19(0.03) 0.20(0.11) 0.18(0.08) 0.14(0.07) 0.15(0.16) 0.16(0.08) 0.17(0.07) 0.18(0.10) 0.14(0.04) 0.12(0.10) 0.15(0.11) 0.12(0.04) 0.13(0.13) 0.13(0.12) 0.22(0.16) 0.18(0.05) 0.14(0.07) 0.16(0.09) 0.17(0.04) 0.15(0.09) 0.14(0.06) 0.16(0.07) 0.15(0.06) 0.14(0.06) 0.14(0.11) 0.13(0.03) 0.10(0.09) 0.11(0.06) 0.12(0.06) 0.09(0.06) 0.07(0.07) 0.14(0.15) 0.13(0.04) 0.06(0.08) 0.06(0.04) 0.13(0.13) 0.12(0.04) 0.10(0.09) 0.08(0.03) 0.14(0.10) 0.06(0.08) 0.07(0.10) 0.11(0.14) 0.10(0.04) 0.08(0.11) 0.11(0.08) 0.19(0.14) 0.26(0.11) 0.09(0.22) 0.09(0.05) 0.11(0.09) 0.11(0.16) 0.12(0.13) 0.13(0.07) 0.14(0.07) 0.16(0.07) 0.13(0.13) 0.10(0.06) 0.10(0.04) 0.13(0.13) 0.08(0.07) 0.07(0.08) 0.12(0.13) 0.11(0.04) 0.06(0.10) 0.06(0.03) 0.11(0.11) 0.04(0.08) 0.07(0.07) 0.10(0.15) 0.07(0.04) 0.00(0.07) 0.04(0.04) 0.11(0.14) 0.07(0.05) 0.05(0.10) 0.05(0.04) 0.09(0.08) 0.06(0.06) 0.07(0.07) 0.11(0.12) 0.09(0.03) 0.03(0.07) 0.05(0.03) 0.12(0.09) 0.08(0.05) 0.04(0.09) 0.06(0.05) 0.10(0.06) 0.04(0.09) 0.07(0.06) 0.08(0.13) 0.03(0.05) 0.09(0.12) 0.07(0.10) 0.09(0.08) 0.05(0.08) 0.07(0.09) 0.08(0.15) 0.08(0.03) 0.03(0.06) 0.07(0.08) 0.10(0.12) 0.09(0.03) 0.06(0.08) 0.08(0.05) 0.12(0.13) 0.10(0.05) 0.10(0.09) 0.09(0.04) 0.15(0.11) 0.15(0.04) 0.15(0.06) 0.13(0.06) 0.20(0.08) 0.17(0.07) 0.16(0.10) 0.18(0.11) 0.19(0.03) 0.15(0.08) 0.15(0.07) 0.18(0.14) 0.21(0.05) 0.16(0.09) 0.13(0.04) 0.18(0.09) 0.17(0.07) 0.14(0.05) 0.19(0.12) 0.17(0.04) 0.14(0.09) 0.14(0.05) 0.19(0.08) 0.14(0.08) 0.10(0.07) 0.14(0.13) 0.09(0.09) 0.09(0.07) 0.11(0.12) 0.12(0.05) 0.11(0.06) 0.11(0.04) 0.17(0.08) 0.14(0.05) 0.14(0.08) 0.16(0.12) 0.16(0.02) 0.14(0.06) 0.13(0.05) 0.18(0.13) 0.18(0.03) 0.14(0.09) 0.15(0.05) 0.18(0.12) 0.15(0.05)
++ Max displacement in automask = 1.36 (mm) at sub-brick 53
++ Max delta displ  in automask = 0.61 (mm) at sub-brick 215
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG009.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG009_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input pb01.sub-TAG009.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG009.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG009.r02.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG009.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG009_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.3
++ ###########################################################
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.492723 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 47.1
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -Fourier -1Dmatrix_save mat.r03.vr.aff12.1D pb01.sub-TAG009.r03.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 12.492723 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG009.r03.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG009.r03.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 99857 voxels
 + 11525 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.088  pitch=-0.184  yaw=-0.143  dS=-0.421  dL=-0.070  dP=-0.142
++ Mean: roll=+0.020  pitch=+0.182  yaw=-0.009  dS=-0.082  dL=+0.001  dP=+0.041
++ Max : roll=+0.106  pitch=+0.619  yaw=+0.381  dS=+0.076  dL=+0.102  dP=+0.186
++ Max displacements (mm) for each sub-brick:
 1.18(0.00) 1.29(0.16) 1.17(0.15) 1.17(0.05) 1.26(0.12) 1.17(0.12) 1.03(0.17) 1.02(0.04) 1.11(0.14) 1.06(0.08) 1.03(0.08) 1.19(0.17) 1.18(0.05) 1.07(0.14) 1.13(0.14) 1.14(0.06) 1.00(0.16) 0.97(0.08) 1.04(0.14) 1.06(0.08) 0.97(0.14) 1.12(0.20) 1.17(0.06) 1.03(0.16) 1.02(0.06) 1.09(0.10) 1.07(0.06) 0.94(0.15) 1.03(0.14) 1.02(0.02) 0.93(0.13) 0.90(0.09) 1.00(0.11) 1.07(0.14) 1.21(0.16) 1.23(0.10) 1.25(0.04) 1.21(0.10) 1.09(0.17) 1.08(0.08) 1.17(0.13) 1.13(0.11) 1.13(0.04) 1.21(0.17) 1.19(0.12) 1.07(0.16) 1.21(0.23) 1.26(0.07) 1.14(0.21) 1.18(0.11) 1.25(0.09) 1.29(0.12) 1.22(0.08) 1.36(0.20) 1.24(0.17) 1.13(0.14) 1.10(0.08) 1.15(0.09) 1.14(0.11) 1.10(0.07) 1.15(0.16) 1.13(0.07) 1.11(0.07) 1.17(0.13) 1.16(0.08) 1.11(0.07) 1.16(0.13) 1.14(0.07) 1.07(0.12) 1.16(0.16) 1.16(0.03) 1.17(0.06) 1.09(0.08) 1.10(0.13) 1.06(0.10) 1.04(0.10) 1.03(0.12) 1.10(0.10) 1.10(0.16) 1.07(0.07) 1.08(0.11) 1.10(0.03) 1.04(0.10) 1.05(0.07) 1.09(0.09) 1.08(0.07) 1.00(0.08) 1.02(0.11) 0.99(0.05) 0.99(0.10) 0.98(0.06) 1.03(0.08) 1.02(0.04) 0.96(0.11) 0.94(0.05) 0.99(0.12) 0.96(0.07) 0.92(0.07) 1.02(0.15) 1.04(0.03) 1.03(0.04) 0.96(0.13) 0.95(0.07) 0.90(0.21) 0.73(0.55) 0.59(0.23) 0.48(0.11) 0.48(0.13) 0.49(0.09) 0.46(0.03) 0.44(0.11) 0.56(0.17) 0.55(0.23) 0.46(0.16) 0.45(0.06) 0.42(0.09) 0.45(0.05) 0.57(0.15) 0.58(0.11) 0.54(0.14) 0.44(0.11) 0.35(0.14) 0.40(0.13) 0.35(0.07) 0.35(0.11) 0.41(0.15) 0.45(0.08) 0.41(0.12) 0.38(0.08) 0.40(0.08) 0.38(0.09) 0.38(0.02) 0.44(0.08) 0.37(0.10) 0.35(0.05) 0.44(0.14) 0.39(0.07) 0.33(0.10) 0.39(0.11) 0.37(0.03) 0.33(0.07) 0.30(0.07) 0.34(0.12) 0.36(0.05) 0.31(0.08) 0.28(0.03) 0.38(0.12) 0.30(0.10) 0.27(0.07) 0.27(0.04) 0.39(0.14) 0.31(0.10) 0.26(0.07) 0.33(0.13) 0.31(0.07) 0.31(0.09) 0.35(0.12) 0.36(0.04) 0.34(0.03) 0.32(0.05) 0.29(0.04) 0.35(0.08) 0.34(0.03) 0.33(0.01) 0.28(0.08) 0.29(0.05) 0.36(0.08) 0.33(0.03) 0.31(0.04) 0.27(0.08) 0.38(0.17) 0.42(0.06) 0.36(0.11) 0.37(0.07) 0.44(0.08) 0.41(0.06) 0.34(0.12) 0.36(0.08) 0.35(0.02) 0.30(0.09) 0.40(0.13) 0.33(0.08) 0.31(0.10) 0.33(0.11) 0.37(0.05) 0.32(0.07) 0.27(0.08) 0.33(0.12) 0.32(0.03) 0.29(0.09) 0.36(0.17) 0.42(0.10) 0.45(0.09) 0.29(0.23) 0.28(0.06) 0.36(0.08) 0.27(0.16) 0.29(0.07) 0.34(0.06) 0.26(0.13) 0.26(0.10) 0.26(0.09) 0.32(0.07) 0.31(0.05) 0.28(0.07) 0.34(0.12) 0.33(0.03) 0.32(0.05) 0.30(0.08) 0.33(0.12) 0.32(0.03) 0.29(0.06) 0.26(0.05) 0.31(0.12) 0.29(0.42) 0.78(0.61) 0.69(0.18) 0.60(0.10) 0.52(0.19) 0.55(0.12) 0.50(0.11) 0.46(0.12) 0.38(0.09) 0.35(0.04) 0.33(0.06) 0.32(0.04) 0.27(0.09) 0.25(0.04) 0.25(0.07) 0.24(0.03) 0.23(0.10) 0.21(0.07) 0.20(0.05) 0.20(0.10) 0.18(0.11) 0.19(0.03) 0.20(0.11) 0.18(0.08) 0.14(0.07) 0.15(0.16) 0.16(0.08) 0.17(0.07) 0.18(0.10) 0.14(0.04) 0.12(0.10) 0.15(0.11) 0.12(0.04) 0.13(0.13) 0.13(0.12) 0.22(0.16) 0.18(0.05) 0.14(0.07) 0.16(0.09) 0.17(0.04) 0.15(0.09) 0.14(0.06) 0.16(0.07) 0.15(0.06) 0.14(0.06) 0.14(0.11) 0.13(0.03) 0.10(0.09) 0.11(0.06) 0.12(0.06) 0.09(0.06) 0.07(0.07) 0.14(0.15) 0.13(0.04) 0.06(0.08) 0.06(0.04) 0.13(0.13) 0.12(0.04) 0.10(0.09) 0.08(0.03) 0.14(0.10) 0.06(0.08) 0.07(0.10) 0.11(0.14) 0.10(0.04) 0.08(0.11) 0.11(0.08) 0.19(0.14) 0.26(0.11) 0.09(0.22) 0.09(0.05) 0.11(0.09) 0.11(0.16) 0.12(0.13) 0.13(0.07) 0.14(0.07) 0.16(0.07) 0.13(0.13) 0.10(0.06) 0.10(0.04) 0.13(0.13) 0.08(0.07) 0.07(0.08) 0.12(0.13) 0.11(0.04) 0.06(0.10) 0.06(0.03) 0.11(0.11) 0.04(0.08) 0.07(0.07) 0.10(0.15) 0.07(0.04) 0.00(0.07) 0.04(0.04) 0.11(0.14) 0.07(0.05) 0.05(0.10) 0.05(0.04) 0.09(0.08) 0.06(0.06) 0.07(0.07) 0.11(0.12) 0.09(0.03) 0.03(0.07) 0.05(0.03) 0.12(0.09) 0.08(0.05) 0.04(0.09) 0.06(0.05) 0.10(0.06) 0.04(0.09) 0.07(0.06) 0.08(0.13) 0.03(0.05) 0.09(0.12) 0.07(0.10) 0.09(0.08) 0.05(0.08) 0.07(0.09) 0.08(0.15) 0.08(0.03) 0.03(0.06) 0.07(0.08) 0.10(0.12) 0.09(0.03) 0.06(0.08) 0.08(0.05) 0.12(0.13) 0.10(0.05) 0.10(0.09) 0.09(0.04) 0.15(0.11) 0.15(0.04) 0.15(0.06) 0.13(0.06) 0.20(0.08) 0.17(0.07) 0.16(0.10) 0.18(0.11) 0.19(0.03) 0.15(0.08) 0.15(0.07) 0.18(0.14) 0.21(0.05) 0.16(0.09) 0.13(0.04) 0.18(0.09) 0.17(0.07) 0.14(0.05) 0.19(0.12) 0.17(0.04) 0.14(0.09) 0.14(0.05) 0.19(0.08) 0.14(0.08) 0.10(0.07) 0.14(0.13) 0.09(0.09) 0.09(0.07) 0.11(0.12) 0.12(0.05) 0.11(0.06) 0.11(0.04) 0.17(0.08) 0.14(0.05) 0.14(0.08) 0.16(0.12) 0.16(0.02) 0.14(0.06) 0.13(0.05) 0.18(0.13) 0.18(0.03) 0.14(0.09) 0.15(0.05) 0.18(0.12) 0.15(0.05)
++ Max displacement in automask = 1.36 (mm) at sub-brick 53
++ Max delta displ  in automask = 0.61 (mm) at sub-brick 215
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG009.r03.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG009_SurfVol_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input pb01.sub-TAG009.r03.despike+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r03
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG009.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG009.r03.despike+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG009.r03.despike+orig.HEAD
++ Base dataset:   ./sub-TAG009_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.7
++ ###########################################################
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r03
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.492723 degrees from plumb.
++ Output dataset ./rm.epi.1.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 47.2
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG009.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG009.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG009.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG009.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG009.r03.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG009.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG009_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG009_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 12.492723 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG009_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy sub-TAG009_SurfVol_ns+orig anat_final.sub-TAG009
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG009+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 4595 survived, 16772621 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 255497 survived, 16521719 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG009.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG009.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.7
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG009.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.7
++ ###########################################################
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG009.r01.blur pb02.sub-TAG009.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG009.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG009.r02.blur pb02.sub-TAG009.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG009.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG009.r03.blur pb02.sub-TAG009.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG009.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG009.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG009.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2063.749268
 + Used gradual clip level = 1915.785522 .. 2120.697266
 + Number voxels above clip level = 98235
 + Clustering voxels ...
 + Largest cluster has 96496 voxels
 + Clustering voxels ...
 + Largest cluster has 95900 voxels
 + Filled   401 voxels in small holes; now have 96301 voxels
 + Filled  1272 voxels in large holes; now have 97573 voxels
 + Clustering voxels ...
 + Largest cluster has 97571 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 963637 voxels
 + Mask now has 97571 voxels
++ 97571 voxels in the mask [out of 1061208: 9.19%]
++ first  23 x-planes are zero [from R]
++ last   24 x-planes are zero [from L]
++ first  18 y-planes are zero [from S]
++ last   27 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   13 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG009.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG009.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2062.187744
 + Used gradual clip level = 1917.690918 .. 2116.224365
 + Number voxels above clip level = 98009
 + Clustering voxels ...
 + Largest cluster has 96298 voxels
 + Clustering voxels ...
 + Largest cluster has 95690 voxels
 + Filled   431 voxels in small holes; now have 96121 voxels
 + Filled  1193 voxels in large holes; now have 97314 voxels
 + Clustering voxels ...
 + Largest cluster has 97311 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 963897 voxels
 + Mask now has 97311 voxels
++ 97311 voxels in the mask [out of 1061208: 9.17%]
++ first  23 x-planes are zero [from R]
++ last   24 x-planes are zero [from L]
++ first  18 y-planes are zero [from S]
++ last   27 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   13 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb03.sub-TAG009.r03.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG009.r03.blur+orig
++ Forming automask
 + Fixed clip level = 2062.187744
 + Used gradual clip level = 1917.690918 .. 2116.224365
 + Number voxels above clip level = 98009
 + Clustering voxels ...
 + Largest cluster has 96298 voxels
 + Clustering voxels ...
 + Largest cluster has 95690 voxels
 + Filled   431 voxels in small holes; now have 96121 voxels
 + Filled  1193 voxels in large holes; now have 97314 voxels
 + Clustering voxels ...
 + Largest cluster has 97311 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 963897 voxels
 + Mask now has 97311 voxels
++ 97311 voxels in the mask [out of 1061208: 9.17%]
++ first  23 x-planes are zero [from R]
++ last   24 x-planes are zero [from L]
++ first  18 y-planes are zero [from S]
++ last   27 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   13 z-planes are zero [from A]
++ Output dataset ./rm.mask_r03+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.sub-TAG009
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 97774 survived, 963434 were zero
++ writing result full_mask.sub-TAG009...
++ Output dataset ./full_mask.sub-TAG009+orig.BRIK
3dresample -master full_mask.sub-TAG009+orig -input sub-TAG009_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG009
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 99196 survived, 962012 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG009...
++ Output dataset ./mask_anat.sub-TAG009+orig.BRIK
3dmask_tool -input full_mask.sub-TAG009+orig mask_anat.sub-TAG009+orig -inter -prefix mask_epi_anat.sub-TAG009
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 14022 clipped, 91474 survived, 955712 were zero
++ writing result mask_epi_anat.sub-TAG009...
++ Output dataset ./mask_epi_anat.sub-TAG009+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG009+orig mask_anat.sub-TAG009+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG009+orig mask_anat.sub-TAG009+orig
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG009.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG009.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG009+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG009.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG009.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG009.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG009.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG009+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG009.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG009.r02.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r03 pb03.sub-TAG009.r03.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+orig.BRIK
3dcalc -a pb03.sub-TAG009.r03.blur+orig -b rm.mean_r03+orig -c full_mask.sub-TAG009+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG009.r03.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG009.r03.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG009
1deval -a motion_sub-TAG009_censor.1D -b outcount_sub-TAG009_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 3
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 3 -set_run_lengths 390 390 390 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 3 -set_run_lengths 390 390 390 -write bpass.r02.1D
end
set nt = 390
set run = 03
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 3 -set_run_lengths 390 390 390 -write bpass.r03.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG009_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 )
1d_tool.py -set_run_lengths 390 390 390 -select_runs 01 -infile censor_sub-TAG009_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG009.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 4 ; remaining = 386
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 386 retained time points MINUS 4 regressors ==> 382 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 639955 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 51m 29s 713ms
end
1d_tool.py -set_run_lengths 390 390 390 -select_runs 02 -infile censor_sub-TAG009_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG009.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 5 ; remaining = 385
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 385 retained time points MINUS 4 regressors ==> 381 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 639955 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 47m 3s 621ms
end
1d_tool.py -set_run_lengths 390 390 390 -select_runs 03 -infile censor_sub-TAG009_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 3 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb02.sub-TAG009.r03.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 5 ; remaining = 385
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 385 retained time points MINUS 4 regressors ==> 381 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 639955 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+orig.BRIK
++ ===== clock time = 49m 51s 358ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD rm.det_pcin_r03+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 9.3 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG009_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG009.r01.scale+orig.HEAD pb04.sub-TAG009.r02.scale+orig.HEAD pb04.sub-TAG009.r03.scale+orig.HEAD -mask full_mask.sub-TAG009+orig -censor censor_sub-TAG009_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG009 -errts errts.sub-TAG009 -x1D_stop -bucket stats.sub-TAG009
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 828 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390 780
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 1170 (before censor) ; 1156 (after)
 + Number of parameters:  840 [840 baseline ; 0 signal]
Killed
slurmstepd: error: Detected 1 oom-kill event(s) in step 3129504.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.
