echo auto-generated by afni_proc.py, Tue Jan 22 09:48:18 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG177
endif
set output_dir = sub-TAG177.results
if ( -d sub-TAG177.results ) then
set runs = ( `count -digits 2 1 2` )
count -digits 2 1 2
mkdir sub-TAG177.results
mkdir sub-TAG177.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG177/SUMA/sub-TAG177_SurfVol.nii.gz sub-TAG177.results/sub-TAG177_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG177/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG177.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG177/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG177.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG177/SUMA/sub-TAG177_vent.nii.gz sub-TAG177.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG177/SUMA/sub-TAG177_WM.nii.gz sub-TAG177.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG177.results/pb00.sub-TAG177.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG177/ses-wave2/func/sub-TAG177_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.8 s
3dTcat -prefix sub-TAG177.results/pb00.sub-TAG177.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG177/ses-wave2/func/sub-TAG177_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.0 s
set tr_counts = ( 390 390 )
cd sub-TAG177.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG177.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG177.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG177.r01.tcat+orig.BRIK is 6.447223 degrees from plumb.
++ 84881 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG177.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG177.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG177.r02.tcat+orig.BRIK is 6.447223 degrees from plumb.
++ 84748 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 -index_to_run_tr 403
set minoutrun = 02
set minouttr = 13
tee out.min_outlier.txt
echo min outlier: run 02, TR 13
foreach run ( 01 02 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG177.r01.despike pb00.sub-TAG177.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG177.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG177.r01.tcat+orig.BRIK is 6.447223 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG177.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 103ms

++ FINAL: 163109700 data points, 5796736 edits [3.554%], 295712 big edits [0.181%]
++ Output dataset ./pb01.sub-TAG177.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG177.r02.despike pb00.sub-TAG177.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG177.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG177.r02.tcat+orig.BRIK is 6.447223 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG177.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 184ms

++ FINAL: 163109700 data points, 7973930 edits [4.889%], 1479189 big edits [0.907%]
++ Output dataset ./pb01.sub-TAG177.r02.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG177.r02.despike+orig[13]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG177_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG177_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 6.447223 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2401.997803
 + Used gradual clip level = 2250.547119 .. 2482.025635
 + Number voxels above clip level = 86625
 + Clustering voxels ...
 + Largest cluster has 84698 voxels
 + Clustering voxels ...
 + Largest cluster has 83384 voxels
 + Filled   914 voxels in small holes; now have 84298 voxels
 + Filled     7 voxels in large holes; now have 84305 voxels
 + Clustering voxels ...
 + Largest cluster has 84303 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 339057 voxels
 + Mask now has 84303 voxels
++ 84303 voxels in the mask [out of 423360: 19.91%]
++ first  15 x-planes are zero [from R]
++ last   16 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    6 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 6.447223 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 6.447223 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG177_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1449961 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 84303 voxels [18.7%] in weight mask
++ Output dataset ./__tt_sub-TAG177_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 84303
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 41.115 38.347 33.303 (index)
 + source center of mass = 141.986 144.091 181.131 (index)
 + source-target CM = 1.565 -1.144 0.059 (xyz)
 + center of mass shifts = 1.565 -1.144 0.059
++ shift param auto-range: -65.0..68.2 -67.8..65.5 -50.5..50.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -8.435318 .. 11.564682
 + Range param#2 [y-shift] = -11.143944 .. 8.856056
 + Range param#3 [z-shift] = -9.940552 .. 10.059448
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -38.435318 .. 41.564682
 + Range param#2 [y-shift] = -41.143944 .. 38.856056
 + Range param#3 [z-shift] = -39.940552 .. 40.059448
 + 12 free parameters
++ Normalized convergence radius = 0.000445
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1449961 [out of 21661995] voxels
 + base mask has 105917 [out of 451584] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=28 usiz=53.5
 + - copying weight image
 + - using 84303 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 32.6754 .. 137.824; base clip 1655.58 .. 5754.47
 +  - versus source range 0.0072928 .. 131.976; base range 0 .. 7648.63
 + 76657 total points stored in 735 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-+.-.+o+.o+++oo--$++.+-o + - best 45 costs found:
    0 v= 0.471534:   1.56  -1.14   0.06   0.00   0.00   0.00  [grid]
    1 v= 0.819627:  -2.51  -7.37  -7.74  -4.32 -22.85 -18.95  [rand]
    2 v= 0.821576: -11.77  12.19  13.39  30.00  15.00 -15.00  [grid]
    3 v= 0.830449:  -2.51   5.08   7.86   4.32  22.85  18.95  [rand]
    4 v= 0.830572:  -2.51  -7.37  -7.74   4.32 -22.85 -18.95  [rand]
    5 v= 0.831885:  15.77 -10.60  -4.78 -15.99 -13.53  29.93  [rand]
    6 v= 0.850417: -12.64   8.31  -4.78  15.99  13.53  29.93  [rand]
    7 v= 0.851713: -12.64   8.31   4.90  15.99 -13.53 -29.93  [rand]
    8 v= 0.879500: -11.77  12.19 -13.27  30.00 -15.00  15.00  [grid]
    9 v= 0.883838:  -2.51   5.08  -7.74   4.32 -22.85 -18.95  [rand]
   10 v= 0.884844:   5.64  -7.37  -7.74  -4.32 -22.85 -18.95  [rand]
   11 v= 0.912709:  15.77 -10.60   4.90 -15.99  13.53 -29.93  [rand]
   12 v= 0.925165:  -2.51   5.08  -7.74  -4.32 -22.85 -18.95  [rand]
   13 v= 0.926571:  -2.51   5.08   7.86  -4.32  22.85  18.95  [rand]
   14 v= 0.935743: -17.93  15.53  -2.54  30.54  19.59  20.03  [rand]
   15 v= 0.945227:   5.64   5.08   7.86  -4.32  22.85  18.95  [rand]
   16 v= 0.958220: -11.77  12.19  13.39  30.00 -15.00 -30.00  [grid]
   17 v= 0.965527: -22.63   9.19   4.58  27.51 -29.30 -27.65  [rand]
   18 v= 0.967666: -22.63   9.19   4.58  27.51  29.30  27.65  [rand]
   19 v= 0.968796:  15.77 -10.60  -4.78 -15.99 -13.53 -29.93  [rand]
   20 v= 0.971086: -17.93  15.53   2.66  30.54 -19.59 -20.03  [rand]
   21 v= 0.974350: -20.79  15.24  15.89  41.11  22.86  -3.97  [rand]
   22 v= 0.976298: -17.93  15.53   2.66  30.54  19.59  20.03  [rand]
   23 v= 0.981506: -11.77  12.19 -13.27  30.00  15.00  30.00  [grid]
   24 v= 0.982267:  14.90 -14.48 -13.27 -15.00 -15.00  15.00  [grid]
   25 v= 0.987885: -11.77  12.19  26.73  30.00  15.00 -30.00  [grid]
   26 v= 0.988412:  14.90 -14.48 -13.27 -15.00 -15.00 -15.00  [grid]
   27 v= 1.004484:   5.64   5.08   7.86  -4.32  22.85 -18.95  [rand]
   28 v= 1.016500:  15.77   8.31   4.90 -15.99  13.53 -29.93  [rand]
   29 v= 1.020078:  -2.51  -7.37   7.86   4.32  22.85  18.95  [rand]
   30 v= 1.020379:   5.64   5.08  -7.74  -4.32 -22.85 -18.95  [rand]
   31 v= 1.020727: -12.64   8.31   4.90  15.99  13.53  29.93  [rand]
   32 v= 1.025492:   5.64  -7.37  -7.74  -4.32 -22.85  18.95  [rand]
   33 v= 1.025559: -22.63   9.19  -4.46  27.51 -29.30 -27.65  [rand]
   34 v= 1.031644:   5.64   5.08  -7.74  -4.32 -22.85  18.95  [rand]
   35 v= 1.033126: -17.93  15.53  -2.54  30.54 -19.59 -20.03  [rand]
   36 v= 1.047187:  14.90 -14.48  13.39 -15.00  15.00 -15.00  [grid]
   37 v= 1.049163:   5.64   5.08  -7.74   4.32 -22.85  18.95  [rand]
   38 v= 1.054370: -25.10  12.19  13.39  30.00 -15.00 -30.00  [grid]
   39 v= 1.054462: -11.77  12.19 -13.27  30.00 -15.00  30.00  [grid]
   40 v= 1.057098: -11.77  12.19  13.39  15.00  30.00  15.00  [grid]
   41 v= 1.074030: -11.77  12.19  13.39  30.00  15.00 -30.00  [grid]
   42 v= 1.074748:  15.77   8.31  -4.78 -15.99 -13.53  29.93  [rand]
   43 v= 1.076357: -20.79  15.24 -15.77  41.11 -22.86   3.97  [rand]
   44 v= 1.076469:   5.64   5.08   7.86   4.32  22.85 -18.95  [rand]
*[#8004=0.373916] *[#8013=0.365307] *[#8016=0.358476] *[#8017=0.356411] *[#8019=0.354208] *[#8020=0.343046] *[#8023=0.340214] *[#8025=0.335901] *[#8028=0.331882] *[#8029=0.329202] *[#8030=0.328771] *[#8033=0.327826] *[#8034=0.32695] *[#8037=0.326405] *[#10730=0.326245]  + - costs of the above after a little optimization:
    0 v= 0.326405:   1.17  -1.65   3.80   0.13   1.50  -0.58  [grid]
    1 v= 0.328351:   1.10  -1.73   3.84   0.41   1.45  -0.75  [rand]
    2 v= 0.583079:  -1.57  -2.16   4.24   8.38   1.02 -10.63  [grid]
    3 v= 0.330407:   1.73  -1.70   3.62  -0.01   1.59  -0.08  [rand]
    4 v= 0.336490:   1.17  -1.37   3.44  -0.12   1.11  -0.26  [rand]
    5 v= 0.444298:   3.86  -1.78   1.29   0.07   0.68   2.42  [rand]
    6 v= 0.633508:  -3.27  -0.61  -5.09   9.77   1.33  25.56  [rand]
    7 v= 0.359297:   0.42  -1.16   4.02   1.12   0.75  -0.72  [rand]
    8 v= 0.712368: -14.08   5.87  -8.60  26.45  -5.42  13.28  [grid]
    9 v= 0.365819:   0.94  -1.35   3.09   0.95   0.35  -1.27  [rand]
   10 v= 0.333074:   1.42  -1.86   3.70   0.43   1.20  -0.08  [rand]
   11 v= 0.675135:  13.01  -3.47   3.43 -14.98   5.86 -28.85  [rand]
   12 v= 0.328363:   1.12  -1.68   4.12   0.20   1.89  -0.59  [rand]
   13 v= 0.329880:   1.32  -2.20   4.02   0.12   2.14  -0.41  [rand]
   14 v= 0.703355: -14.85   5.33  -7.42  27.10   1.76  20.34  [rand]
   15 v= 0.330581:   1.37  -1.32   3.88   0.22   1.14  -0.59  [rand]
   16 v= 0.736884: -15.71   7.04  11.27  29.00  -5.46 -25.23  [grid]
   17 v= 0.582443:   1.14  -2.64   2.16  -1.35  -2.55 -16.13  [rand]
   18 v= 0.717417: -13.93   4.18  -3.37  27.21   4.93  19.53  [rand]
   19 v= 0.326798:   1.34  -1.79   3.90   0.23   1.83  -0.39  [rand]
   20 v= 0.333763:   0.94  -1.30   3.58   0.43   1.12  -0.80  [rand]
   21 v= 0.661027: -11.60   2.74   2.36  17.80  10.83   6.25  [rand]
   22 v= 0.743506: -18.72   9.06  -3.56  31.22   8.88  15.28  [rand]
   23 v= 0.459246:  -1.70  -2.24   1.98   2.56   0.43  -1.43  [grid]
   24 v= 0.329474:   1.69  -1.69   3.69  -0.09   1.48   0.02  [grid]
   25 v= 0.570275:  -7.55  -1.01   3.62  10.36   0.12  -5.45  [grid]
   26 v= 0.638072:  10.55  -5.30  -8.88 -12.16 -12.48  -6.31  [grid]
   27 v= 0.380382:   1.93  -1.23   2.30  -0.79  -0.05  -0.07  [rand]
   28 v= 0.659501:  12.49  -3.71   2.32 -13.52   2.81 -27.45  [rand]
   29 v= 0.575704:  -3.24   0.69  -2.43   6.62   0.53   8.37  [rand]
   30 v= 0.574453:   0.74  -2.09   1.71  -1.48  -2.70 -12.98  [rand]
   31 v= 0.565575:  -0.42  -0.15  -3.50   4.19  -1.62   9.75  [rand]
   32 v= 0.328979:   1.49  -2.07   3.80   0.24   1.84  -0.20  [rand]
   33 v= 0.675338:  -9.53   1.72   6.28  15.39   0.32 -22.14  [rand]
   34 v= 0.330871:   1.42  -2.10   3.78  -0.32   1.56  -0.42  [rand]
   35 v= 0.495531:  -2.04  -0.08   0.25   1.36  -2.51  -0.74  [rand]
   36 v= 0.560408:   4.19   0.05  -2.37  -4.15  -5.20  -5.06  [grid]
  *37 v= 0.326245:   1.28  -1.90   3.93   0.20   1.62  -0.58  [rand]
   38 v= 0.756179: -18.12   7.44  10.56  29.24  -9.74 -25.35  [grid]
   39 v= 0.610853:  -6.95   0.17  -3.59  13.46  -0.39  11.88  [grid]
   40 v= 0.545504:   0.63  -3.09   4.40  -0.64   2.63   5.19  [grid]
   41 v= 0.633869:  -8.95   1.81   6.93  18.02   3.60 -14.98  [grid]
   42 v= 0.620686:   7.93  -4.20  -2.96  -8.30  -3.00  20.96  [rand]
   43 v= 0.901420: -22.18  12.87 -10.69  37.94 -19.14   5.05  [rand]
   44 v= 0.328484:   1.43  -1.50   3.76   0.13   1.37  -0.61  [rand]
 + - save #37 for twobest
 + - skip # 0 for twobest: too close to set #37
 + - skip #19 for twobest: too close to set #37
 + - skip # 1 for twobest: too close to set #37
 + - skip #12 for twobest: too close to set #37
 + - skip #44 for twobest: too close to set #37
 + - skip #32 for twobest: too close to set #37
 + - skip #24 for twobest: too close to set #37
 + - skip #13 for twobest: too close to set #37
 + - skip # 3 for twobest: too close to set #37
 + - skip #15 for twobest: too close to set #37
 + - skip #34 for twobest: too close to set #37
 + - skip #10 for twobest: too close to set #37
 + - skip #20 for twobest: too close to set #37
 + - skip # 4 for twobest: too close to set #37
 + - skip # 7 for twobest: too close to set #37
 + - skip # 9 for twobest: too close to set #37
 + - skip #27 for twobest: too close to set #37
 + - skip # 5 for twobest: too close to set #37
 + - skip #23 for twobest: too close to set #37
 + - skip #35 for twobest: too close to set #37
 + - skip #40 for twobest: too close to set # 5
 + - save #36 for twobest
 + - save #31 for twobest
 + - save #25 for twobest
 + - save #30 for twobest
 + - skip #29 for twobest: too close to set #31
 + - skip #17 for twobest: too close to set #30
 + - save # 2 for twobest
 + - save #39 for twobest
 + - save #42 for twobest
 + - save # 6 for twobest
 + - save #41 for twobest
 + - save #26 for twobest
 + - save #28 for twobest
 + - save #21 for twobest
 + - skip #11 for twobest: too close to set #28
 + - save #33 for twobest
 + - save #14 for twobest
 + - save # 8 for twobest
 + - save #18 for twobest
 + - save #16 for twobest
 + - save #22 for twobest
 + - skip #38 for twobest: too close to set #16
 + - save #43 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=28 usiz=53.5
 + - retaining old weight image
 + - using 84303 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 32.6906 .. 138.518; base clip 1658.41 .. 5847.69
 +  - versus source range 0.000391267 .. 131.99; base range 0 .. 7657.92
 + 77715 total points stored in 759 'RHDD(9.42766)' bloks
 + - param set #1 has cost=0.330718
 + -- Parameters = 1.4755 -1.7619 3.9875 0.1477 1.6258 -0.5075 0.9936 1.0038 0.9956 0.0005 0.0012 -0.0017
 + - param set #2 has cost=0.357195
 + -- Parameters = 1.6174 -2.0511 4.0587 -1.1205 1.9492 -2.1934 0.9772 1.0141 0.9852 -0.0499 0.0389 0.0055
 + - param set #3 has cost=0.379333
 + -- Parameters = 1.6409 -0.5996 3.9071 0.8449 0.7239 0.6626 1.0018 0.9802 0.9990 0.0232 -0.0261 -0.0036
 + - param set #4 has cost=0.351579
 + -- Parameters = 1.3946 -0.7682 3.9977 0.1779 1.3001 -1.2336 0.9745 0.9934 0.9857 -0.0007 0.0119 -0.0011
 + - param set #5 has cost=0.339702
 + -- Parameters = 1.1940 -2.3875 3.8381 0.3725 2.6261 -0.9877 0.9949 1.0039 0.9936 0.0163 0.0130 0.0138
*[#11784=0.326164] *[#11785=0.326047] *[#11788=0.325663] *[#11789=0.325449] *[#11796=0.323793] 
 + - param set #6 has cost=0.323793
 + -- Parameters = 1.3365 -1.5232 4.5935 0.4730 0.1674 -0.4655 0.9790 1.0091 0.9766 0.0035 -0.0026 -0.0310
 + - param set #7 has cost=0.570897
 + -- Parameters = -4.9712 3.2574 -6.3211 12.9853 -1.2950 8.8759 0.9825 0.9762 0.9673 0.0053 -0.0160 0.0014
 + - param set #8 has cost=0.553187
 + -- Parameters = 7.2719 -1.5944 -3.8097 -5.1779 1.9041 10.8343 0.9782 0.9842 0.9823 -0.0122 0.0038 0.0080
 + - param set #9 has cost=0.571747
 + -- Parameters = -2.2899 0.8571 -4.0588 8.0933 0.0077 17.0860 0.9948 0.9809 0.9820 0.0017 -0.0102 -0.0011
 + - param set #10 has cost=0.547730
 + -- Parameters = -7.6381 3.5430 7.0826 9.6922 4.0969 -3.5934 0.9838 0.9752 0.9849 -0.0147 0.0086 0.0067
 + - param set #11 has cost=0.540540
 + -- Parameters = 5.8164 -5.1665 -1.6645 -7.1144 -6.0389 0.1972 0.9901 0.9898 0.9659 0.0091 -0.0240 0.0230
 + - param set #12 has cost=0.328966
 + -- Parameters = 1.4880 -1.6021 4.0867 0.1741 1.2109 -0.3942 0.9962 0.9998 0.9876 0.0020 0.0008 -0.0083
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.102 
 + --- dist(#3,#1) = 0.132 
 + --- dist(#4,#1) = 0.202 
 + --- dist(#5,#1) = 0.134 
 + --- dist(#6,#1) = 0.24 
 + --- dist(#7,#1) = 0.123 
 + --- dist(#8,#1) = 0.243 
 + --- dist(#9,#1) = 0.17 
 + --- dist(#10,#1) = 0.176 
 + --- dist(#11,#1) = 0.146 
 + --- dist(#12,#1) = 0.195 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=28 usiz=53.5
 + - retaining old weight image
 + - using 84303 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 32.9888 .. 139.239; base clip 1662.38 .. 5939.75
 +  - versus source range 0 .. 132.008; base range 0 .. 7669.82
 + 76403 total points stored in 782 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.342931
 + -- Parameters = 1.4673 -1.7717 4.5461 0.2214 0.2526 -0.2639 0.9928 1.0146 0.9763 0.0020 -0.0030 -0.0319
 + - param set #2 has cost=0.344183
 + -- Parameters = 1.4096 -2.2039 4.4223 0.1858 1.1958 -0.4572 0.9907 1.0129 0.9814 0.0024 -0.0021 -0.0142
 + - param set #3 has cost=0.345841
 + -- Parameters = 1.5413 -2.2740 4.2715 0.0418 1.6239 -0.3903 0.9891 1.0138 0.9807 0.0007 -0.0003 -0.0043
 + - param set #4 has cost=0.351698
 + -- Parameters = 0.9673 -2.7605 4.2387 0.4869 2.1430 -1.2674 0.9917 1.0195 0.9778 0.0122 0.0156 0.0064
 + - param set #5 has cost=0.346395
 + -- Parameters = 1.2621 -1.9134 4.2447 0.2090 0.9676 -0.9149 0.9917 1.0095 0.9830 -0.0015 0.0105 -0.0153
 + - param set #6 has cost=0.358594
 + -- Parameters = 1.0732 -2.4799 4.6324 -0.2248 1.7820 -1.9409 0.9921 1.0223 0.9671 -0.0223 0.0306 -0.0047
 + - param set #7 has cost=0.351831
 + -- Parameters = 1.8466 -2.0351 4.1985 0.4867 0.8535 0.8336 0.9857 1.0125 0.9896 0.0102 -0.0269 -0.0195
 + - param set #8 has cost=0.390572
 + -- Parameters = 3.6106 -1.4200 4.7668 -1.5622 -0.7284 1.0822 0.9707 1.0134 0.9596 -0.0402 -0.0141 -0.0506
 + - param set #9 has cost=0.453244
 + -- Parameters = 1.6577 3.1141 6.2801 -0.1799 4.2295 -1.1651 0.9890 0.9146 0.9601 -0.0147 0.0168 0.0107
 + - param set #10 has cost=0.534326
 + -- Parameters = 6.0661 -3.1839 -2.6827 -1.3714 3.4730 8.1700 0.9621 0.9960 0.9819 -0.0113 0.0069 0.0131
 + - param set #11 has cost=0.553946
 + -- Parameters = -2.9121 7.7098 -5.4061 7.8533 -2.2908 6.2783 0.9728 0.9671 0.9671 0.0075 -0.0138 0.0081
 + - param set #12 has cost=0.572733
 + -- Parameters = -1.7451 1.4015 -4.2489 7.2791 -0.2319 16.6288 0.9848 0.9873 0.9834 0.0045 -0.0131 -0.0060
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0797 
 + --- dist(#3,#1) = 0.124 
 + --- dist(#4,#1) = 0.0745 
 + --- dist(#5,#1) = 0.172 
 + --- dist(#6,#1) = 0.107 
 + --- dist(#7,#1) = 0.151 
 + --- dist(#8,#1) = 0.19 
 + --- dist(#9,#1) = 0.273 
 + --- dist(#10,#1) = 0.202 
 + --- dist(#11,#1) = 0.18 
 + --- dist(#12,#1) = 0.188 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=28 usiz=53.5
 + - retaining old weight image
 + - using 84303 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 32.8739 .. 139.498; base clip 1664.27 .. 5997.52
 +  - versus source range 0 .. 132.008; base range 0 .. 7676.6
 + 77005 total points stored in 787 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.348835
 + -- Parameters = 1.4624 -1.7932 4.5445 0.2817 0.2590 -0.3008 0.9925 1.0148 0.9760 0.0017 -0.0029 -0.0317
 + - param set #2 has cost=0.348775
 + -- Parameters = 1.4292 -2.1074 4.4389 0.2619 1.0855 -0.3649 0.9900 1.0156 0.9796 0.0009 -0.0019 -0.0159
 + - param set #3 has cost=0.349157
 + -- Parameters = 1.4765 -2.2728 4.4633 0.1311 1.3833 -0.4628 0.9907 1.0162 0.9781 -0.0012 -0.0010 -0.0097
 + - param set #4 has cost=0.348989
 + -- Parameters = 1.3429 -2.0289 4.4295 0.2209 0.9141 -0.7875 0.9902 1.0143 0.9783 -0.0000 0.0070 -0.0195
 + - param set #5 has cost=0.352502
 + -- Parameters = 1.1443 -2.5310 4.4002 0.4195 1.9142 -1.1169 0.9912 1.0163 0.9771 0.0072 0.0134 -0.0009
 + - param set #6 has cost=0.351252
 + -- Parameters = 1.9408 -2.2331 4.6045 0.2238 0.8662 0.6913 0.9868 1.0201 0.9756 0.0040 -0.0238 -0.0202
 + - param set #7 has cost=0.355205
 + -- Parameters = 1.1294 -2.3280 4.4064 0.0399 1.3836 -1.6146 0.9916 1.0176 0.9749 -0.0102 0.0261 -0.0107
 + - param set #8 has cost=0.357319
 + -- Parameters = 2.0572 -1.2464 4.4420 -0.3693 -0.8997 0.4240 0.9862 1.0142 0.9794 -0.0200 -0.0206 -0.0471
 + - param set #9 has cost=0.383595
 + -- Parameters = 1.6501 -1.9565 4.8316 0.1127 1.8230 -1.1356 0.9651 1.0010 0.9540 -0.0008 0.0186 -0.0065
 + - param set #10 has cost=0.437445
 + -- Parameters = 2.8428 -2.7920 3.9430 0.3821 2.7220 -0.8720 0.9210 1.0186 1.0108 0.0084 0.0232 0.0176
 + - param set #11 has cost=0.557277
 + -- Parameters = -2.9108 7.6064 -5.3999 7.8215 -2.4716 6.2964 0.9723 0.9672 0.9748 0.0078 -0.0136 0.0081
 + - param set #12 has cost=0.573790
 + -- Parameters = -1.9697 1.6984 -4.3965 7.2023 -0.3925 16.9624 0.9832 0.9869 0.9847 0.0037 -0.0139 -0.0034
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0714 
 + --- dist(#3,#1) = 0.0403 
 + --- dist(#4,#1) = 0.0279 
 + --- dist(#5,#1) = 0.0984 
 + --- dist(#6,#1) = 0.0688 
 + --- dist(#7,#1) = 0.126 
 + --- dist(#8,#1) = 0.141 
 + --- dist(#9,#1) = 0.0923 
 + --- dist(#10,#1) = 0.188 
 + --- dist(#11,#1) = 0.132 
 + --- dist(#12,#1) = 0.193 
 + - Total coarse refinement net CPU time = 0.0 s; 3367 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=28 usiz=53.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 32.8766 .. 139.648; base clip 1664.27 .. 5997.52
 +  - versus source range 0 .. 131.961; base range 0 .. 7676.73
 + 76826 total points stored in 803 'RHDD(9.27904)' bloks
 + - cost(#1)=0.348461 *
 + -- Parameters = 1.4292 -2.1074 4.4389 0.2619 1.0855 -0.3649 0.9900 1.0156 0.9796 0.0009 -0.0019 -0.0159
 + - cost(#2)=0.349049  
 + -- Parameters = 1.4624 -1.7932 4.5445 0.2817 0.2590 -0.3008 0.9925 1.0148 0.9760 0.0017 -0.0029 -0.0317
 + - cost(#3)=0.349112  
 + -- Parameters = 1.3429 -2.0289 4.4295 0.2209 0.9141 -0.7875 0.9902 1.0143 0.9783 -0.0000 0.0070 -0.0195
 + - cost(#4)=0.348755  
 + -- Parameters = 1.4765 -2.2728 4.4633 0.1311 1.3833 -0.4628 0.9907 1.0162 0.9781 -0.0012 -0.0010 -0.0097
 + - cost(#5)=0.351365  
 + -- Parameters = 1.9408 -2.2331 4.6045 0.2238 0.8662 0.6913 0.9868 1.0201 0.9756 0.0040 -0.0238 -0.0202
 + - cost(#6)=0.351559  
 + -- Parameters = 1.1443 -2.5310 4.4002 0.4195 1.9142 -1.1169 0.9912 1.0163 0.9771 0.0072 0.0134 -0.0009
 + - cost(#7)=0.355930  
 + -- Parameters = 1.1294 -2.3280 4.4064 0.0399 1.3836 -1.6146 0.9916 1.0176 0.9749 -0.0102 0.0261 -0.0107
 + - cost(#8)=0.358603  
 + -- Parameters = 2.0572 -1.2464 4.4420 -0.3693 -0.8997 0.4240 0.9862 1.0142 0.9794 -0.0200 -0.0206 -0.0471
 + - cost(#9)=0.384660  
 + -- Parameters = 1.6501 -1.9565 4.8316 0.1127 1.8230 -1.1356 0.9651 1.0010 0.9540 -0.0008 0.0186 -0.0065
 + - cost(#10)=0.439079  
 + -- Parameters = 2.8428 -2.7920 3.9430 0.3821 2.7220 -0.8720 0.9210 1.0186 1.0108 0.0084 0.0232 0.0176
 + - cost(#11)=0.558507  
 + -- Parameters = -2.9108 7.6064 -5.3999 7.8215 -2.4716 6.2964 0.9723 0.9672 0.9748 0.0078 -0.0136 0.0081
 + - cost(#12)=0.572473  
 + -- Parameters = -1.9697 1.6984 -4.3965 7.2023 -0.3925 16.9624 0.9832 0.9869 0.9847 0.0037 -0.0139 -0.0034
 + - cost(#13)=0.496620  
 + -- Parameters = 1.5647 -1.1439 0.0594 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.348438 *
 + -- Parameters = 1.4382 -2.1270 4.4421 0.2606 1.0898 -0.4119 0.9900 1.0156 0.9799 0.0010 -0.0018 -0.0159
 + - cost(#2)=0.348809  
 + -- Parameters = 1.4646 -1.7514 4.5722 0.2934 0.2381 -0.3401 0.9922 1.0147 0.9757 0.0016 -0.0033 -0.0316
 + - cost(#3)=0.348785  
 + -- Parameters = 1.3408 -2.0739 4.4708 0.2482 0.8975 -0.7102 0.9909 1.0153 0.9781 -0.0008 0.0059 -0.0208
 + - cost(#4)=0.348346 *
 + -- Parameters = 1.4717 -2.2810 4.4805 0.1891 1.3153 -0.4490 0.9904 1.0176 0.9769 -0.0003 -0.0014 -0.0114
 + - cost(#5)=0.349908  
 + -- Parameters = 1.7591 -2.1519 4.6544 0.1334 0.7887 0.2706 0.9894 1.0189 0.9733 -0.0011 -0.0203 -0.0208
 + - cost(#6)=0.350948  
 + -- Parameters = 1.1849 -2.5577 4.4219 0.3838 1.8065 -1.0424 0.9917 1.0179 0.9770 0.0064 0.0125 -0.0025
 + - cost(#7)=0.351446  
 + -- Parameters = 1.1458 -2.2678 4.5040 0.2039 1.3348 -1.2138 0.9929 1.0174 0.9737 -0.0023 0.0163 -0.0102
 + - cost(#8)=0.353641  
 + -- Parameters = 1.8743 -1.1979 4.6418 -0.0230 -0.6590 0.2487 0.9891 1.0137 0.9760 -0.0131 -0.0155 -0.0477
 + - cost(#9)=0.350378  
 + -- Parameters = 1.3411 -2.4554 4.6425 0.0436 1.5812 -0.7062 0.9935 1.0175 0.9725 -0.0064 0.0015 -0.0086
 + - cost(#10)=0.360312  
 + -- Parameters = 1.2615 -2.9094 4.0875 0.2855 2.7514 -1.3116 0.9826 1.0211 0.9818 0.0069 0.0204 0.0202
 + - cost(#11)=0.558441  
 + -- Parameters = -2.9110 7.5658 -5.3322 7.8975 -2.4854 6.2260 0.9718 0.9680 0.9742 0.0079 -0.0133 0.0082
 + - cost(#12)=0.571921  
 + -- Parameters = -1.5691 1.8211 -4.4885 7.1655 -0.2793 17.2888 0.9843 0.9793 0.9838 0.0052 -0.0161 -0.0026
 + - cost(#13)=0.350464  
 + -- Parameters = 1.3406 -2.4607 4.4020 0.1317 1.8321 -0.8628 0.9901 1.0163 0.9793 -0.0024 0.0096 -0.0026
 + - case #4 is now the best
 + - Initial  cost = 0.348346
 + - Initial fine Parameters = 1.4717 -2.2810 4.4805 0.1891 1.3153 -0.4490 0.9904 1.0176 0.9769 -0.0003 -0.0014 -0.0114
 + - Finalish cost = 0.348288 ; 98 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 32.8899 .. 139.617; base clip 1664.27 .. 5997.52
 +  - versus source range 0 .. 131.961; base range 0 .. 7676.73
*[#16037=-0.214607] *[#16044=-0.214738] *[#16046=-0.214822] *[#16069=-0.215385] *[#16085=-0.216398] *[#16094=-0.216773] *[#16096=-0.216969] *[#16101=-0.217187] *[#16103=-0.217213] *[#16104=-0.217632] *[#16107=-0.217948] *[#16108=-0.217974] *[#16112=-0.218147] *[#16117=-0.2182] *[#16118=-0.218217] *[#16122=-0.218831] *[#16123=-0.218943] *[#16130=-0.218954] *[#16136=-0.219074] *[#16137=-0.219082] *[#16139=-0.219103] *[#16144=-0.219104] *[#16150=-0.219228] *[#16155=-0.219401] *[#16156=-0.219405] *[#16158=-0.219522] *[#16169=-0.219643] *[#16172=-0.219662] *[#16174=-0.219769] *[#16177=-0.219852] *[#16178=-0.219935] *[#16183=-0.219961] *[#16197=-0.220002] *[#16213=-0.22001] *[#16215=-0.220071] *[#16216=-0.220116] *[#16219=-0.220146] *[#16220=-0.220168] *[#16223=-0.220232] *[#16228=-0.220237] *[#16236=-0.220291] *[#16237=-0.22032] *[#16242=-0.22033] *[#16244=-0.220344] *[#16256=-0.220349] *[#16263=-0.220363] *[#16271=-0.220378] *[#16274=-0.220388] *[#16275=-0.2204] *[#16276=-0.220409] *[#16279=-0.220414] *[#16280=-0.220414] *[#16283=-0.220415] *[#16286=-0.220416] *[#16291=-0.220419] *[#16302=-0.220425] *[#16307=-0.220428] *[#16310=-0.220429] *[#16315=-0.220431] *[#16320=-0.220432] *[#16322=-0.220435] *[#16327=-0.220439] *[#16332=-0.22044] *[#16334=-0.22044] *[#16336=-0.220444] *[#16341=-0.220446] *[#16348=-0.220448] *[#16353=-0.220452] *[#16377=-0.220453] *[#16379=-0.220455] *[#16382=-0.220455] *[#16392=-0.220455] *[#16394=-0.220456] *[#16400=-0.220456] *[#16416=-0.220457] 
 + - Final    cost = -0.220457 ; 380 funcs
 + Final fine fit Parameters:
       x-shift= 1.1874   y-shift=-2.5891   z-shift= 4.4424
       z-angle= 0.1034   x-angle= 1.0932   y-angle=-0.5808
       x-scale= 1.0057   y-scale= 1.0310   z-scale= 0.9924
     y/x-shear=-0.0013 z/x-shear=-0.0016 z/y-shear=-0.0139
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 1.1874 -2.5891 4.4424 0.1034 1.0932 -0.5808 1.0057 1.0310 0.9924 -0.0013 -0.0016 -0.0139
++ Output dataset ./__tt_sub-TAG177_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG177_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 185.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 6.447223 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG177_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0009 -0.0008 -0.0991 26.5735 -0.0991 -0.0567 -0.9863 176.6986 -0.0034 1.0298 -0.0420 17.7291
++ Output dataset ./sub-TAG177_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG177.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.447223 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG177.r01.despike+orig.BRIK is 6.447223 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG177.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 90892 voxels
 + 10793 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.560  pitch=+0.745  yaw=-1.330  dS=-4.185  dL=-1.076  dP=+0.386
++ Mean: roll=+0.755  pitch=+1.210  yaw=-0.919  dS=-3.638  dL=-0.880  dP=+0.662
++ Max : roll=+0.910  pitch=+1.704  yaw=-0.677  dS=-3.306  dL=-0.642  dP=+0.903
++ Max displacements (mm) for each sub-brick:
 5.85(0.00) 5.91(0.33) 5.87(0.25) 5.87(0.23) 5.98(0.45) 5.96(0.09) 5.89(0.39) 5.95(0.16) 6.06(0.40) 5.96(0.33) 5.93(0.12) 6.01(0.39) 6.00(0.06) 5.87(0.46) 5.90(0.14) 5.96(0.32) 5.93(0.14) 5.86(0.36) 5.92(0.33) 6.00(0.25) 5.92(0.31) 5.86(0.16) 5.97(0.47) 5.97(0.10) 5.84(0.43) 5.89(0.25) 5.96(0.23) 5.91(0.19) 5.89(0.28) 6.02(0.39) 6.06(0.13) 5.96(0.36) 5.92(0.12) 5.98(0.37) 5.97(0.08) 5.81(0.48) 5.86(0.19) 5.95(0.30) 5.90(0.18) 5.89(0.29) 5.99(0.38) 6.08(0.20) 5.98(0.26) 5.90(0.29) 5.95(0.34) 5.95(0.11) 5.93(0.14) 5.78(0.39) 5.78(0.19) 5.81(0.29) 5.75(0.13) 5.69(0.31) 5.73(0.27) 5.72(0.08) 5.77(0.11) 5.77(0.14) 5.74(0.11) 5.73(0.03) 5.70(0.09) 5.66(0.25) 5.67(0.26) 5.73(0.28) 5.73(0.10) 5.69(0.43) 5.70(0.15) 5.74(0.27) 5.76(0.10) 5.69(0.39) 5.70(0.06) 5.71(0.35) 5.69(0.09) 5.68(0.27) 5.66(0.20) 5.73(0.21) 5.74(0.05) 5.75(0.11) 5.62(0.43) 5.62(0.09) 5.68(0.29) 5.65(0.12) 5.60(0.33) 5.66(0.30) 5.73(0.22) 5.59(0.31) 5.59(0.15) 5.57(0.31) 5.59(0.09) 5.51(0.37) 5.50(0.07) 5.53(0.30) 5.56(0.06) 5.47(0.42) 5.51(0.25) 5.58(0.27) 5.55(0.11) 5.48(0.36) 5.48(0.21) 5.42(0.18) 5.36(0.14) 5.28(0.23) 5.27(0.06) 5.36(0.24) 5.35(0.02) 5.22(0.23) 5.18(0.11) 5.21(0.25) 5.24(0.07) 5.14(0.32) 5.15(0.04) 5.28(0.42) 5.47(0.23) 5.31(0.39) 5.39(0.09) 5.58(0.38) 5.59(0.08) 5.42(0.41) 5.47(0.13) 5.62(0.36) 5.52(0.19) 5.42(0.23) 5.61(0.38) 5.68(0.10) 5.44(0.40) 5.42(0.09) 5.51(0.26) 5.50(0.04) 5.20(0.44) 5.26(0.10) 5.42(0.34) 5.42(0.10) 5.22(0.36) 5.27(0.17) 5.37(0.20) 5.42(0.08) 5.23(0.39) 5.31(0.19) 5.44(0.22) 5.50(0.08) 5.29(0.41) 5.36(0.12) 5.55(0.37) 5.41(0.22) 5.24(0.35) 5.49(0.46) 5.62(0.17) 5.34(0.50) 5.44(0.15) 5.64(0.36) 5.50(0.28) 5.39(0.23) 5.52(0.34) 5.67(0.17) 5.47(0.32) 5.45(0.08) 5.67(0.39) 5.57(0.12) 5.40(0.32) 5.49(0.26) 5.62(0.20) 5.55(0.17) 5.38(0.32) 5.53(0.30) 5.66(0.23) 5.52(0.24) 5.36(0.31) 5.61(0.43) 5.83(0.25) 5.61(0.39) 5.49(0.18) 5.62(0.34) 5.73(0.15) 5.49(0.39) 5.45(0.07) 5.58(0.31) 5.57(0.03) 5.45(0.14) 5.30(0.26) 5.32(0.10) 5.41(0.24) 5.53(0.14) 5.42(0.23) 5.33(0.23) 5.45(0.29) 5.56(0.18) 5.40(0.28) 5.33(0.20) 5.48(0.34) 5.54(0.09) 5.33(0.36) 5.33(0.07) 5.53(0.38) 5.54(0.10) 5.30(0.43) 5.38(0.21) 5.54(0.29) 5.41(0.24) 5.30(0.26) 5.49(0.38) 5.59(0.12) 5.35(0.44) 5.47(0.21) 5.60(0.25) 5.50(0.21) 5.36(0.25) 5.51(0.35) 5.55(0.13) 5.47(0.16) 5.38(0.20) 5.49(0.27) 5.56(0.10) 5.39(0.32) 5.35(0.09) 5.53(0.38) 5.59(0.08) 5.35(0.41) 5.37(0.07) 5.58(0.37) 5.67(0.10) 5.40(0.42) 5.41(0.08) 5.63(0.39) 5.64(0.06) 5.39(0.46) 5.52(0.27) 5.70(0.26) 5.60(0.16) 5.42(0.37) 5.67(0.41) 5.84(0.25) 5.64(0.30) 5.44(0.34) 5.63(0.37) 5.76(0.18) 5.60(0.24) 5.45(0.29) 5.70(0.43) 5.85(0.21) 5.56(0.45) 5.53(0.12) 5.78(0.43) 5.81(0.10) 5.57(0.43) 5.68(0.22) 5.74(0.14) 5.80(0.07) 5.75(0.11) 5.66(0.23) 5.76(0.27) 5.91(0.21) 5.93(0.11) 5.70(0.31) 5.71(0.08) 5.88(0.31) 5.95(0.10) 5.93(0.08) 5.93(0.04) 5.81(0.17) 5.70(0.18) 5.86(0.33) 5.98(0.19) 5.79(0.28) 5.67(0.19) 5.87(0.35) 5.97(0.17) 5.82(0.25) 5.62(0.35) 5.75(0.23) 5.93(0.28) 5.92(0.08) 5.64(0.40) 5.67(0.12) 5.95(0.41) 6.02(0.08) 5.81(0.33) 5.79(0.07) 5.96(0.32) 5.93(0.12) 5.73(0.35) 5.90(0.29) 6.04(0.17) 5.91(0.22) 5.89(0.13) 6.07(0.34) 6.16(0.09) 5.94(0.34) 5.98(0.10) 6.21(0.37) 6.27(0.12) 6.05(0.36) 6.08(0.08) 6.32(0.39) 6.33(0.10) 6.05(0.41) 6.15(0.18) 6.33(0.30) 6.32(0.10) 6.08(0.36) 6.09(0.12) 6.27(0.34) 6.26(0.10) 6.04(0.41) 6.25(0.32) 6.44(0.27) 6.26(0.27) 6.14(0.26) 6.41(0.46) 6.52(0.11) 6.27(0.41) 6.28(0.08) 6.48(0.36) 6.52(0.08) 6.26(0.41) 6.33(0.13) 6.51(0.32) 6.55(0.10) 6.26(0.41) 6.37(0.16) 6.61(0.33) 6.46(0.22) 6.31(0.29) 6.55(0.41) 6.65(0.11) 6.39(0.37) 6.33(0.10) 6.58(0.38) 6.67(0.10) 6.49(0.35) 6.64(0.21) 6.68(0.09) 6.49(0.32) 6.53(0.22) 6.81(0.43) 6.88(0.12) 6.76(0.22) 6.71(0.11) 6.85(0.24) 6.83(0.10) 6.61(0.28) 6.66(0.12) 6.85(0.33) 6.79(0.14) 6.55(0.31) 6.71(0.30) 6.75(0.09) 6.52(0.34) 6.67(0.22) 6.73(0.16) 6.47(0.41) 6.45(0.10) 6.71(0.47) 6.76(0.07) 6.50(0.47) 6.50(0.10) 6.68(0.32) 6.77(0.10) 6.61(0.23) 6.45(0.29) 6.61(0.33) 6.77(0.20) 6.65(0.20) 6.48(0.30) 6.67(0.34) 6.84(0.22) 6.76(0.17) 6.56(0.36) 6.73(0.29) 6.85(0.19) 6.76(0.19) 6.55(0.33) 6.72(0.30) 6.86(0.26) 6.65(0.30) 6.57(0.18) 6.81(0.40) 6.89(0.09) 6.62(0.40) 6.65(0.10) 6.89(0.39) 6.90(0.13) 6.67(0.36) 6.74(0.15) 6.89(0.25) 6.81(0.12) 6.59(0.34) 6.70(0.23) 6.83(0.23) 6.75(0.15) 6.57(0.33) 6.70(0.24) 6.91(0.31)
++ Max displacement in automask = 6.91 (mm) at sub-brick 389
++ Max delta displ  in automask = 0.50 (mm) at sub-brick 145
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG177.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG177_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG177_SurfVol_ns+orig -input pb01.sub-TAG177.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG177.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG177.r01.despike+orig.BRIK is 6.447223 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG177.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG177_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.1
++ ###########################################################
3dAllineate -base sub-TAG177_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 6.447223 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG177.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.447223 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG177.r02.despike+orig.BRIK is 6.447223 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG177.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 90512 voxels
 + 10350 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.247  pitch=-0.878  yaw=-0.293  dS=-0.704  dL=-0.173  dP=-0.386
++ Mean: roll=+0.007  pitch=-0.071  yaw=+0.031  dS=+0.595  dL=+0.043  dP=+0.006
++ Max : roll=+0.398  pitch=+0.398  yaw=+1.298  dS=+2.753  dL=+0.652  dP=+0.416
++ Max displacements (mm) for each sub-brick:
 0.15(0.00) 0.14(0.08) 0.13(0.22) 0.29(0.16) 0.15(0.30) 0.11(0.08) 0.16(0.24) 0.31(0.15) 0.12(0.34) 0.11(0.08) 0.14(0.23) 0.14(0.02) 0.06(0.19) 0.00(0.06) 0.20(0.20) 0.11(0.16) 0.08(0.09) 0.06(0.04) 0.18(0.17) 0.21(0.05) 0.24(0.24) 0.23(0.16) 0.43(0.25) 0.36(0.33) 0.35(0.07) 0.33(0.20) 0.37(0.14) 0.24(0.34) 0.20(0.06) 0.37(0.35) 0.28(0.11) 0.22(0.34) 0.21(0.11) 0.30(0.33) 0.29(0.07) 0.27(0.29) 0.30(0.09) 0.32(0.26) 0.46(0.53) 0.62(0.25) 0.67(0.07) 0.56(0.28) 0.48(0.23) 0.50(0.32) 0.55(0.19) 0.45(0.12) 0.36(0.19) 0.38(0.23) 0.42(0.34) 0.51(0.13) 0.48(0.07) 0.48(0.22) 0.44(0.15) 0.48(0.31) 0.52(0.08) 0.50(0.07) 0.49(0.20) 0.45(0.18) 0.44(0.27) 0.50(0.11) 0.46(0.15) 0.44(0.31) 0.35(0.17) 0.44(0.26) 0.48(0.08) 0.46(0.12) 0.45(0.12) 0.46(0.27) 0.39(0.24) 0.46(0.21) 0.50(0.07) 0.45(0.28) 0.39(0.09) 0.45(0.32) 0.51(0.11) 0.45(0.23) 0.41(0.23) 0.41(0.32) 0.46(0.12) 0.42(0.18) 0.40(0.19) 0.40(0.21) 0.45(0.12) 0.47(0.05) 0.45(0.22) 0.40(0.12) 0.45(0.30) 0.49(0.09) 0.46(0.17) 0.43(0.22) 0.43(0.28) 0.48(0.12) 0.44(0.13) 0.43(0.26) 0.38(0.19) 0.45(0.16) 0.44(0.06) 0.42(0.30) 0.36(0.15) 0.48(0.23) 0.49(0.09) 0.44(0.32) 0.38(0.13) 0.48(0.18) 0.56(0.18) 0.50(0.14) 0.41(0.37) 1.41(1.13) 1.60(1.33) 1.85(0.45) 1.87(0.16) 1.87(0.13) 1.81(0.19) 1.78(0.09) 1.79(0.22) 1.73(0.14) 1.73(0.17) 1.69(0.14) 1.72(0.39) 1.72(0.18) 1.68(0.07) 1.66(0.28) 1.63(0.06) 1.72(0.26) 1.70(0.11) 1.66(0.09) 1.65(0.28) 1.59(0.11) 1.65(0.26) 1.65(0.08) 1.67(0.12) 1.61(0.25) 1.59(0.20) 1.60(0.13) 1.54(0.06) 1.46(0.10) 1.27(0.37) 1.01(0.96) 0.99(1.18) 1.38(0.49) 1.70(0.38) 1.51(0.27) 1.42(0.21) 1.32(0.19) 1.00(0.35) 1.06(0.23) 1.02(0.19) 0.94(0.35) 0.89(0.09) 0.93(0.27) 0.83(0.40) 0.67(0.53) 0.58(0.33) 0.65(0.20) 0.70(0.33) 0.73(0.09) 0.70(0.19) 0.74(0.18) 0.79(0.34) 0.74(0.09) 0.59(0.29) 0.58(0.13) 0.62(0.23) 0.64(0.06) 0.59(0.33) 0.61(0.06) 0.63(0.17) 0.66(0.06) 0.62(0.31) 0.57(0.08) 0.60(0.29) 0.64(0.07) 0.58(0.29) 0.58(0.08) 0.64(0.21) 0.63(0.08) 0.59(0.29) 0.57(0.14) 0.66(0.22) 0.61(0.16) 0.55(0.26) 0.54(0.27) 0.56(0.09) 0.54(0.16) 0.52(0.19) 0.49(0.24) 0.47(0.10) 0.45(0.10) 0.44(0.23) 0.40(0.23) 0.43(0.11) 0.43(0.07) 0.40(0.27) 0.36(0.07) 0.39(0.26) 0.42(0.05) 0.37(0.27) 0.35(0.06) 0.41(0.27) 0.39(0.09) 0.38(0.27) 0.34(0.18) 0.43(0.17) 0.38(0.30) 0.35(0.05) 0.39(0.31) 0.40(0.05) 0.35(0.30) 0.32(0.17) 0.37(0.15) 0.34(0.09) 0.36(0.28) 0.31(0.18) 0.40(0.21) 0.34(0.15) 0.36(0.19) 0.33(0.24) 0.36(0.07) 0.30(0.24) 0.32(0.10) 0.32(0.28) 0.40(0.09) 0.33(0.23) 0.34(0.17) 0.27(0.23) 0.31(0.05) 0.35(0.05) 0.30(0.14) 0.33(0.17) 0.31(0.27) 0.39(0.11) 0.34(0.10) 0.34(0.27) 0.29(0.22) 0.38(0.15) 0.35(0.08) 0.36(0.29) 0.30(0.17) 0.40(0.21) 0.32(0.14) 0.34(0.25) 0.30(0.25) 0.41(0.18) 0.32(0.31) 0.30(0.07) 0.37(0.30) 0.36(0.08) 0.36(0.33) 0.29(0.14) 0.34(0.17) 0.37(0.05) 0.36(0.25) 0.31(0.10) 0.37(0.21) 0.39(0.06) 0.36(0.12) 0.36(0.22) 0.29(0.19) 0.37(0.16) 0.34(0.09) 0.34(0.23) 0.30(0.21) 0.39(0.12) 0.37(0.08) 0.36(0.26) 0.30(0.13) 0.37(0.18) 0.38(0.08) 0.37(0.24) 0.29(0.10) 0.30(0.15) 0.35(0.07) 0.41(0.26) 0.57(0.33) 2.41(2.00) 2.84(0.52) 3.05(0.25) 3.15(0.17) 3.19(0.10) 3.29(0.16) 3.38(0.25) 3.43(0.05) 3.36(0.20) 3.31(0.07) 3.35(0.13) 3.53(0.24) 3.49(0.16) 3.45(0.16) 3.39(0.11) 3.59(0.41) 3.68(0.25) 3.52(0.23) 3.31(0.25) 3.37(0.24) 3.45(0.16) 3.34(0.25) 3.31(0.11) 3.33(0.06) 3.47(0.25) 3.43(0.12) 3.36(0.16) 3.29(0.09) 3.22(0.10) 3.08(0.42) 3.41(0.48) 2.65(0.79) 2.22(0.49) 1.87(0.58) 1.95(0.18) 2.17(0.25) 2.43(0.31) 2.34(0.15) 2.29(0.32) 2.33(0.11) 2.38(0.22) 2.41(0.09) 2.41(0.10) 2.42(0.15) 2.40(0.26) 2.49(0.24) 2.43(0.37) 2.39(0.17) 2.33(0.14) 2.32(0.16) 2.39(0.29) 2.33(0.23) 2.29(0.15) 2.28(0.08) 2.32(0.12) 2.35(0.12) 2.35(0.23) 2.33(0.13) 2.33(0.13) 2.37(0.28) 2.34(0.22) 2.30(0.14) 2.30(0.11) 2.35(0.31) 2.30(0.23) 2.29(0.17) 2.30(0.08) 2.35(0.31) 2.33(0.20) 2.29(0.21) 2.32(0.11) 2.34(0.31) 2.30(0.17) 2.28(0.26) 2.28(0.07) 2.35(0.34) 2.34(0.08) 2.32(0.27) 2.30(0.10) 2.39(0.30) 2.26(0.53) 2.70(0.76) 2.87(0.34) 2.90(0.39) 2.88(0.14) 2.86(0.05) 2.88(0.14) 2.74(0.19) 3.05(0.45) 3.33(1.42) 3.51(0.39) 3.81(0.56) 3.84(0.17) 3.51(0.59) 2.45(1.16) 2.30(0.26) 2.47(0.56) 2.48(0.14) 2.34(0.23) 2.23(0.16) 2.40(0.39) 2.40(0.07) 2.27(0.31) 2.16(0.18) 2.22(0.14) 2.34(0.27) 2.21(0.31) 2.17(0.13) 2.13(0.09) 2.09(0.10) 2.27(0.32) 2.21(0.13) 2.11(0.24) 2.08(0.05) 2.26(0.34) 2.18(0.13)
++ Max displacement in automask = 3.84 (mm) at sub-brick 366
++ Max delta displ  in automask = 2.00 (mm) at sub-brick 274
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG177.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG177_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG177_SurfVol_ns+orig -input pb01.sub-TAG177.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG177.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG177.r02.despike+orig.BRIK is 6.447223 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG177.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG177_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.4
++ ###########################################################
3dAllineate -base sub-TAG177_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 6.447223 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG177.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG177.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG177.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG177.r02.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG177_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG177_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 6.447223 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG177_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy sub-TAG177_SurfVol_ns+orig anat_final.sub-TAG177
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG177+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 1036 survived, 16776180 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 241106 survived, 16536110 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG177.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG177.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG177.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
foreach run ( 01 02 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG177.r01.blur pb02.sub-TAG177.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG177.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG177.r02.blur pb02.sub-TAG177.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG177.r02.blur+orig.BRIK
end
foreach run ( 01 02 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG177.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG177.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2385.054688
 + Used gradual clip level = 2249.272705 .. 2459.136475
 + Number voxels above clip level = 88753
 + Clustering voxels ...
 + Largest cluster has 87887 voxels
 + Clustering voxels ...
 + Largest cluster has 87169 voxels
 + Filled   437 voxels in small holes; now have 87606 voxels
 + Filled  1058 voxels in large holes; now have 88664 voxels
 + Clustering voxels ...
 + Largest cluster has 88664 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 972544 voxels
 + Mask now has 88664 voxels
++ 88664 voxels in the mask [out of 1061208: 8.36%]
++ first  22 x-planes are zero [from R]
++ last   26 x-planes are zero [from L]
++ first  11 y-planes are zero [from S]
++ last   36 y-planes are zero [from I]
++ first  13 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG177.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG177.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2398.616455
 + Used gradual clip level = 2287.202881 .. 2470.666260
 + Number voxels above clip level = 88687
 + Clustering voxels ...
 + Largest cluster has 87588 voxels
 + Clustering voxels ...
 + Largest cluster has 87060 voxels
 + Filled   408 voxels in small holes; now have 87468 voxels
 + Filled  1058 voxels in large holes; now have 88526 voxels
 + Clustering voxels ...
 + Largest cluster has 88525 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 972683 voxels
 + Mask now has 88525 voxels
++ 88525 voxels in the mask [out of 1061208: 8.34%]
++ first  22 x-planes are zero [from R]
++ last   26 x-planes are zero [from L]
++ first  11 y-planes are zero [from S]
++ last   37 y-planes are zero [from I]
++ first  13 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD -union -prefix full_mask.sub-TAG177
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 2 volumes gives min count 0
++ voxel limits: 0 clipped, 89094 survived, 972114 were zero
++ writing result full_mask.sub-TAG177...
++ Output dataset ./full_mask.sub-TAG177+orig.BRIK
3dresample -master full_mask.sub-TAG177+orig -input sub-TAG177_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG177
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 89022 survived, 972186 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG177...
++ Output dataset ./mask_anat.sub-TAG177+orig.BRIK
3dmask_tool -input full_mask.sub-TAG177+orig mask_anat.sub-TAG177+orig -inter -prefix mask_epi_anat.sub-TAG177
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 12136 clipped, 82990 survived, 966082 were zero
++ writing result mask_epi_anat.sub-TAG177...
++ Output dataset ./mask_epi_anat.sub-TAG177+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG177+orig mask_anat.sub-TAG177+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG177+orig mask_anat.sub-TAG177+orig
foreach run ( 01 02 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG177.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG177.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG177+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG177.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG177.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG177.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG177.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG177+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG177.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG177.r02.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG177
1deval -a motion_sub-TAG177_censor.1D -b outcount_sub-TAG177_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 2
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 2 -set_run_lengths 390 390 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 2 -set_run_lengths 390 390 -write bpass.r02.1D
end
1dcat bpass.r01.1D bpass.r02.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG177_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 )
1d_tool.py -set_run_lengths 390 390 -select_runs 01 -infile censor_sub-TAG177_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG177.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 307 ; remaining = 83
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 83 retained time points MINUS 4 regressors ==> 79 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 656866 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 1h 45m 16s 387ms
end
1d_tool.py -set_run_lengths 390 390 -select_runs 02 -infile censor_sub-TAG177_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG177.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 192 ; remaining = 198
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 198 retained time points MINUS 4 regressors ==> 194 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 656866 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 2h 13m 38s 167ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 3.1 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG177_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG177.r01.scale+orig.HEAD pb04.sub-TAG177.r02.scale+orig.HEAD -mask full_mask.sub-TAG177+orig -censor censor_sub-TAG177_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG177 -errts errts.sub-TAG177 -x1D_stop -bucket stats.sub-TAG177
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 557 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 780 (before censor) ; 281 (after)
 + Number of parameters:  565 [565 baseline ; 0 signal]
[7m** ERROR:[0m  *** Censoring has made regression impossible :( ***
[7m** FATAL ERROR:[0m 3dDeconvolve dies: Insufficient data (281) for estimating 565 parameters
** Program compile date = Jul  6 2018
