echo auto-generated by afni_proc.py, Tue Jan 22 09:48:14 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG138
endif
set output_dir = sub-TAG138.results
if ( -d sub-TAG138.results ) then
set runs = ( `count -digits 2 1 2` )
count -digits 2 1 2
mkdir sub-TAG138.results
mkdir sub-TAG138.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG138/SUMA/sub-TAG138_SurfVol.nii.gz sub-TAG138.results/sub-TAG138_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG138/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG138.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG138/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG138.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG138/SUMA/sub-TAG138_vent.nii.gz sub-TAG138.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG138/SUMA/sub-TAG138_WM.nii.gz sub-TAG138.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG138.results/pb00.sub-TAG138.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG138/ses-wave2/func/sub-TAG138_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 7.9 s
3dTcat -prefix sub-TAG138.results/pb00.sub-TAG138.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG138/ses-wave2/func/sub-TAG138_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.5 s
set tr_counts = ( 390 390 )
cd sub-TAG138.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG138.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG138.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG138.r01.tcat+orig.BRIK is 10.133101 degrees from plumb.
++ 80980 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG138.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG138.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG138.r02.tcat+orig.BRIK is 10.133101 degrees from plumb.
++ 81088 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 -index_to_run_tr 487
set minoutrun = 02
set minouttr = 97
tee out.min_outlier.txt
echo min outlier: run 02, TR 97
foreach run ( 01 02 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG138.r01.despike pb00.sub-TAG138.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG138.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG138.r01.tcat+orig.BRIK is 10.133101 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG138.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 346ms

++ FINAL: 162932640 data points, 5689116 edits [3.492%], 292998 big edits [0.180%]
++ Output dataset ./pb01.sub-TAG138.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG138.r02.despike pb00.sub-TAG138.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG138.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG138.r02.tcat+orig.BRIK is 10.133101 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG138.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 391ms

++ FINAL: 162931860 data points, 5968111 edits [3.663%], 343299 big edits [0.211%]
++ Output dataset ./pb01.sub-TAG138.r02.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG138.r02.despike+orig[97]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG138_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG138_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 10.133101 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2211.801514
 + Used gradual clip level = 1996.614380 .. 2318.889160
 + Number voxels above clip level = 83557
 + Clustering voxels ...
 + Largest cluster has 81946 voxels
 + Clustering voxels ...
 + Largest cluster has 79998 voxels
 + Filled   973 voxels in small holes; now have 80971 voxels
 + Filled     6 voxels in large holes; now have 80977 voxels
 + Clustering voxels ...
 + Largest cluster has 80971 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 342389 voxels
 + Mask now has 80971 voxels
++ 80971 voxels in the mask [out of 423360: 19.13%]
++ first  16 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  11 y-planes are zero [from P]
++ last   11 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    3 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 10.133101 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 10.133101 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG138_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1439390 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=1
++ 80970 voxels [17.7%] in weight mask
++ Output dataset ./__tt_sub-TAG138_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 80970
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 42.042 39.297 33.064 (index)
 + source center of mass = 141.234 173.600 187.339 (index)
 + source-target CM = 0.236 -0.629 -4.096 (xyz)
 + center of mass shifts = 0.236 -0.629 -4.096
++ shift param auto-range: -66.4..66.8 -67.2..66.0 -55.5..47.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.763863 .. 10.236137
 + Range param#2 [y-shift] = -10.628654 .. 9.371346
 + Range param#3 [z-shift] = -14.096386 .. 5.903614
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.763863 .. 40.236137
 + Range param#2 [y-shift] = -40.628654 .. 39.371346
 + Range param#3 [z-shift] = -44.096386 .. 35.903614
 + 12 free parameters
++ Normalized convergence radius = 0.000447
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1439390 [out of 27299580] voxels
 + base mask has 102681 [out of 458640] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=18 usiz=40.5
 + - copying weight image
 + - using 80970 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 23.4515 .. 101.334; base clip 1522.81 .. 5336.44
 +  - versus source range 0.0461126 .. 95.0224; base range 0 .. 7039.77
 + 73119 total points stored in 701 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+oo-o.++++.--.+.+-$-o-. + - best 45 costs found:
    0 v= 0.560633:   0.24  -0.63  -4.10   0.00   0.00   0.00  [grid]
    1 v= 0.751141:  14.44   8.82  -8.94  15.99 -13.53  29.93  [rand]
    2 v= 0.830403:  13.57 -13.96   9.24 -15.00  15.00  15.00  [grid]
    3 v= 0.846041: -13.97   8.82  -8.94 -15.99 -13.53 -29.93  [rand]
    4 v= 0.860536:   4.32   5.60 -11.89   4.32 -22.85  18.95  [rand]
    5 v= 0.889226:  13.57 -13.96   9.24 -30.00  30.00 -15.00  [grid]
    6 v= 0.889797:  14.44   8.82   0.74  15.99 -13.53  29.93  [rand]
    7 v= 0.931871: -26.43  12.70   9.24  30.00 -15.00 -30.00  [grid]
    8 v= 0.940382: -13.97   8.82   0.74 -15.99 -13.53 -29.93  [rand]
    9 v= 0.944538:  13.57 -13.96   9.24 -30.00  15.00 -15.00  [grid]
   10 v= 0.968523: -19.25  16.04  -1.50  30.54 -19.59 -20.03  [rand]
   11 v= 0.970968: -13.10 -13.96   9.24  15.00  15.00 -15.00  [grid]
   12 v= 0.975278:  13.57  12.70 -17.43  15.00 -30.00  30.00  [grid]
   13 v= 0.982559:  -3.84   5.60 -11.89  -4.32 -22.85 -18.95  [rand]
   14 v= 1.012480:  13.57 -13.96   9.24 -15.00  30.00  15.00  [grid]
   15 v= 1.014800:  -3.84  -6.86   3.70  -4.32  22.85 -18.95  [rand]
   16 v= 1.021526:   4.32  -6.86   3.70   4.32  22.85  18.95  [rand]
   17 v= 1.028756:  13.57 -13.96   9.24 -30.00  30.00 -30.00  [grid]
   18 v= 1.037706:  13.57 -13.96   9.24 -15.00  15.00  30.00  [grid]
   19 v= 1.049300: -13.97 -10.08   0.74 -15.99  13.53 -29.93  [rand]
   20 v= 1.053242:  14.44 -10.08   0.74  15.99  13.53  29.93  [rand]
   21 v= 1.074292: -13.10 -13.96   9.24 -15.00  15.00 -30.00  [grid]
   22 v= 1.077282:  13.57 -13.96  22.57 -15.00  30.00  30.00  [grid]
   23 v= 1.078500: -13.10 -13.96  22.57  15.00  30.00 -30.00  [grid]
   24 v= 1.085658: -26.43  12.70   9.24  15.00 -15.00 -30.00  [grid]
   25 v= 1.085692:  26.90  12.70   9.24 -30.00 -15.00  30.00  [grid]
   26 v= 1.096015:  26.90 -13.96   9.24 -30.00  15.00  30.00  [grid]
   27 v= 1.101812:  13.57  12.70 -17.43  15.00 -15.00  30.00  [grid]
   28 v= 1.106678:  13.57 -13.96   9.24 -30.00  30.00  15.00  [grid]
   29 v= 1.112441: -13.97   8.82   0.74  15.99 -13.53 -29.93  [rand]
   30 v= 1.112620:  13.57 -13.96   9.24 -30.00  15.00  15.00  [grid]
   31 v= 1.112845:  13.57 -13.96  22.57 -15.00  30.00  15.00  [grid]
   32 v= 1.113900:  22.59 -17.01  11.74 -41.11  22.86   3.97  [rand]
   33 v= 1.117125:  19.73  16.04  -1.50 -30.54 -19.59  20.03  [rand]
   34 v= 1.129232:  26.90 -13.96   9.24 -30.00  15.00  15.00  [grid]
   35 v= 1.129766:  13.57 -13.96  22.57 -30.00  30.00 -15.00  [grid]
   36 v= 1.138588:  26.90 -13.96   9.24 -15.00  15.00  30.00  [grid]
   37 v= 1.142161: -13.10 -13.96  22.57  15.00  30.00 -15.00  [grid]
   38 v= 1.143461:  13.57 -13.96  22.57 -30.00  30.00  15.00  [grid]
   39 v= 1.147366:  26.90  12.70   9.24 -15.00 -15.00  30.00  [grid]
   40 v= 1.148412:  26.90 -13.96  22.57 -30.00  30.00  30.00  [grid]
   41 v= 1.150836:   4.32   5.60 -11.89  -4.32 -22.85  18.95  [rand]
   42 v= 1.156287:  13.57  26.04 -17.43  30.00 -30.00  30.00  [grid]
   43 v= 1.156790:  22.56  29.00 -11.09   8.73 -38.75  33.73  [rand]
   44 v= 1.160728:  22.59 -17.01  11.74 -41.11  22.86  -3.97  [rand]
*[#8004=0.467282] *[#8013=0.446345] *[#8014=0.41714] *[#8016=0.408134] *[#8019=0.407202] *[#8020=0.403688] *[#8021=0.398729] *[#8022=0.395389] *[#8024=0.393547] *[#8028=0.393424] *[#8029=0.391164] *[#8032=0.390939] *[#8033=0.390672] *[#8645=0.388594] *[#8650=0.388037]  + - costs of the above after a little optimization:
    0 v= 0.390672:   0.52  -1.48  -1.11   0.19  -1.51   0.10  [grid]
    1 v= 0.701018:  12.43   7.14  -5.96  12.92 -13.33  27.21  [rand]
    2 v= 0.473374:   2.53  -2.58  -2.00  -2.40  -1.36   2.95  [grid]
    3 v= 0.634472: -13.13   0.99  -1.97   3.61  -7.04 -18.98  [rand]
    4 v= 0.645492:   7.96   6.17  -8.58   7.66 -15.73  17.10  [rand]
    5 v= 0.751144:   8.34 -10.11   6.02 -29.96  19.61 -17.22  [grid]
    6 v= 0.446261:   0.65   1.93  -1.20  -0.12  -5.23  -0.16  [rand]
    7 v= 0.849904: -30.27  11.59   5.64  27.71 -16.10 -30.01  [grid]
    8 v= 0.466014:  -4.93   0.07  -0.33   1.67  -2.16  -3.90  [rand]
    9 v= 0.751597:  10.59  -9.87   6.35 -30.15  18.32 -12.61  [grid]
   10 v= 0.801698: -20.54  14.79  -3.99  26.27 -23.19 -13.06  [rand]
  *11 v= 0.388037:  -0.20  -0.43  -1.22   0.43  -2.08  -0.39  [grid]
   12 v= 0.682855:  12.19   7.45  -9.07   7.63 -18.14  23.52  [grid]
   13 v= 0.397601:  -0.74   0.86  -1.34   0.53  -3.17  -0.73  [rand]
   14 v= 0.403557:   1.30  -1.53  -0.97  -0.36  -1.52   1.05  [grid]
   15 v= 0.556734:  -1.59  -5.91   1.45   1.71   6.62  -1.65  [rand]
   16 v= 0.563910:   8.16  -4.72  -3.37  -7.25  -0.15   7.73  [rand]
   17 v= 0.782431:   8.50 -11.49   8.41 -31.58  25.44 -22.03  [grid]
   18 v= 0.764454:  16.04  -8.82   5.95 -10.34  11.40  25.97  [grid]
   19 v= 0.749563:  -9.73  -6.52   4.09 -10.15   9.74 -29.96  [rand]
   20 v= 0.461723:   2.73  -4.28  -1.01  -1.31   0.42   2.54  [rand]
   21 v= 0.685842:  -6.65  -5.72   2.64  -6.78   8.12 -19.41  [grid]
   22 v= 0.579696:   7.56  -7.13  -0.23  -7.42   5.67   7.83  [grid]
   23 v= 0.631475:  -4.30  -3.04   2.14   8.70   4.61   2.56  [grid]
   24 v= 0.480614:   2.91   1.41  -2.80  -0.72  -4.38   0.76  [grid]
   25 v= 0.671803:  18.20   2.44  -4.49 -15.40 -12.36  14.03  [grid]
   26 v= 0.696306:  19.01  -4.55   0.58 -16.97   1.95  19.41  [grid]
   27 v= 0.681738:   8.90   8.04  -7.77  14.15 -14.60  21.73  [grid]
   28 v= 0.575560:   4.26   3.00  -5.67  -7.10  -8.45   3.73  [grid]
   29 v= 0.641656: -14.31   1.12  -2.30   8.64  -8.42 -16.82  [rand]
   30 v= 0.400173:   0.12  -2.38  -0.79   0.25  -1.05  -0.01  [grid]
   31 v= 0.594728:   6.22  -6.08   0.97  -1.82   7.98   8.19  [grid]
   32 v= 0.801715:  18.63  -8.71   8.11 -36.27  20.65   1.00  [rand]
   33 v= 0.391603:  -0.67  -0.06  -1.31   0.51  -2.35  -0.69  [rand]
   34 v= 0.768832:  18.07  -8.68   8.10 -26.51  16.99  13.99  [grid]
   35 v= 0.398314:   0.31  -2.14  -0.67   0.40  -0.75   0.06  [grid]
   36 v= 0.619480:   9.66  -3.88   0.38 -12.72   4.85   3.67  [grid]
   37 v= 0.560001:   1.14  -6.67   1.85  -1.20   8.51   1.76  [grid]
   38 v= 0.454522:   3.44  -2.47  -1.24  -1.95  -0.70   2.50  [grid]
   39 v= 0.739905:  24.50   7.08  -2.48 -14.85 -15.83  25.60  [grid]
   40 v= 0.650337:  17.89   2.09  -3.85 -11.97  -8.34  19.55  [grid]
   41 v= 0.404272:  -0.29   1.11  -1.48   0.69  -3.63  -0.32  [rand]
   42 v= 0.885804:   8.61  22.06 -12.58  32.95 -32.14  32.46  [grid]
   43 v= 0.758587:   6.60  14.25 -11.32  22.83 -20.79  24.69  [rand]
   44 v= 0.791858:  18.80  -7.83   7.22 -34.58  18.82   2.51  [rand]
 + - save #11 for twobest
 + - skip # 0 for twobest: too close to set #11
 + - skip #33 for twobest: too close to set #11
 + - skip #13 for twobest: too close to set #11
 + - skip #35 for twobest: too close to set #11
 + - skip #30 for twobest: too close to set #11
 + - skip #14 for twobest: too close to set #11
 + - skip #41 for twobest: too close to set #11
 + - skip # 6 for twobest: too close to set #11
 + - skip #38 for twobest: too close to set #11
 + - skip #20 for twobest: too close to set #11
 + - save # 8 for twobest
 + - skip # 2 for twobest: too close to set #11
 + - skip #24 for twobest: too close to set #11
 + - save #15 for twobest
 + - skip #37 for twobest: too close to set #15
 + - save #16 for twobest
 + - save #28 for twobest
 + - save #22 for twobest
 + - save #31 for twobest
 + - save #36 for twobest
 + - save #23 for twobest
 + - save # 3 for twobest
 + - save #29 for twobest
 + - save # 4 for twobest
 + - save #40 for twobest
 + - save #25 for twobest
 + - save #27 for twobest
 + - save #12 for twobest
 + - save #21 for twobest
 + - save #26 for twobest
 + - save # 1 for twobest
 + - save #39 for twobest
 + - save #19 for twobest
 + - save # 5 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=18 usiz=40.5
 + - retaining old weight image
 + - using 80970 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 23.4026 .. 101.122; base clip 1526.57 .. 5417.87
 +  - versus source range 0.00696319 .. 95.0409; base range 0 .. 7053.2
 + 74689 total points stored in 735 'RHDD(9.42766)' bloks
 + - param set #1 has cost=0.400709
 + -- Parameters = -0.1420 -0.4330 -1.2361 0.3731 -2.1409 -0.2327 0.9998 1.0006 0.9998 -0.0006 0.0000 -0.0006
 + - param set #2 has cost=0.398562
 + -- Parameters = -1.1365 -0.9171 -0.7669 0.8918 -1.8485 -1.1374 0.9947 1.0051 0.9924 0.0073 0.0191 -0.0044
 + - param set #3 has cost=0.390103
 + -- Parameters = 0.0652 -0.8488 0.7301 0.3712 -1.6296 -0.5160 0.9906 1.0190 0.9630 -0.0165 0.0079 0.0057
 + - param set #4 has cost=0.417759
 + -- Parameters = 1.7973 -0.5027 -1.7852 -1.2241 -1.6230 1.3104 0.9929 0.9883 1.0092 -0.0388 -0.0316 0.0234
 + - param set #5 has cost=0.410405
 + -- Parameters = 0.1303 0.9750 -0.5912 0.4432 -2.6496 -0.2166 0.9885 0.9804 0.9838 -0.0063 -0.0018 -0.0024
 + - param set #6 has cost=0.471860
 + -- Parameters = 6.5347 -4.6415 0.5381 -1.4093 0.8008 5.7018 0.9558 1.0176 0.9769 -0.0094 -0.0900 0.0259
 + - param set #7 has cost=0.431282
 + -- Parameters = 0.5230 -3.2859 2.0324 1.4403 0.4030 0.7861 0.9976 1.0056 0.9532 0.0353 0.0135 0.0198
 + - param set #8 has cost=0.447030
 + -- Parameters = 4.3075 -1.0606 0.2518 0.0446 -0.8949 4.0331 0.9905 0.9816 0.9865 0.0121 -0.0462 -0.0084
 + - param set #9 has cost=0.414077
 + -- Parameters = -0.8748 -2.5772 1.0958 0.6949 -0.0102 -0.8875 0.9928 0.9971 0.9605 0.0253 0.0075 0.0254
 + - param set #10 has cost=0.569604
 + -- Parameters = -13.9826 2.6757 -1.6018 1.4135 -8.9141 -19.3699 0.9656 0.9931 0.9682 -0.0052 0.0002 0.0010
 + - param set #11 has cost=0.567350
 + -- Parameters = -14.7519 3.5741 -1.6280 0.9528 -9.7106 -19.5845 0.9648 0.9785 0.9807 -0.0070 -0.0013 0.0091
 + - param set #12 has cost=0.394498
 + -- Parameters = -0.1459 0.0553 -1.1204 0.3870 -2.4181 -0.2608 0.9952 0.9977 0.9955 -0.0030 -0.0032 -0.0029
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0887 
 + --- dist(#3,#1) = 0.107 
 + --- dist(#4,#1) = 0.1 
 + --- dist(#5,#1) = 0.105 
 + --- dist(#6,#1) = 0.188 
 + --- dist(#7,#1) = 0.178 
 + --- dist(#8,#1) = 0.233 
 + --- dist(#9,#1) = 0.244 
 + --- dist(#10,#1) = 0.441 
 + --- dist(#11,#1) = 0.212 
 + --- dist(#12,#1) = 0.209 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=18 usiz=40.5
 + - retaining old weight image
 + - using 80970 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 23.5422 .. 101.726; base clip 1530.44 .. 5502.07
 +  - versus source range 0.000188061 .. 95.0435; base range 0 .. 7067.18
 + 73602 total points stored in 763 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.399512
 + -- Parameters = -0.0346 -0.4202 -0.0697 0.0509 -2.0073 -0.5003 0.9945 1.0110 0.9776 -0.0240 0.0068 -0.0008
 + - param set #2 has cost=0.399684
 + -- Parameters = -0.2479 0.0454 -0.4679 0.5782 -2.3886 -0.4504 0.9938 1.0062 0.9856 -0.0055 0.0072 -0.0066
 + - param set #3 has cost=0.405590
 + -- Parameters = -0.9505 -0.5640 -0.7398 0.6711 -1.8566 -1.2633 0.9935 1.0052 0.9884 0.0075 0.0236 0.0034
 + - param set #4 has cost=0.400847
 + -- Parameters = -0.1084 -0.1027 -0.4681 0.6067 -2.2985 -0.2573 0.9930 1.0084 0.9847 -0.0000 0.0001 -0.0000
 + - param set #5 has cost=0.399510
 + -- Parameters = -0.2162 0.6684 -0.4519 0.6509 -2.9626 -0.2714 0.9964 1.0046 0.9834 -0.0010 0.0021 -0.0124
 + - param set #6 has cost=0.421030
 + -- Parameters = -0.5762 -2.3245 0.4505 0.8568 -0.4392 -0.5328 1.0071 1.0053 0.9674 0.0254 0.0053 0.0268
 + - param set #7 has cost=0.412780
 + -- Parameters = 1.1700 -0.4666 -0.9020 -0.1963 -1.5463 0.7781 0.9916 0.9997 0.9937 -0.0325 -0.0341 0.0165
 + - param set #8 has cost=0.421564
 + -- Parameters = -0.6647 -1.5605 0.4649 1.0592 -1.0674 -0.5909 1.0067 1.0067 0.9649 0.0268 0.0086 0.0241
 + - param set #9 has cost=0.416088
 + -- Parameters = 2.2276 -0.5716 -0.3305 0.5223 -2.0887 2.1801 0.9823 1.0149 0.9818 -0.0058 -0.0640 0.0095
 + - param set #10 has cost=0.435858
 + -- Parameters = 4.0837 -0.9565 -0.4463 0.0865 -1.1200 3.9449 0.9903 1.0059 0.9815 -0.0182 -0.0888 0.0280
 + - param set #11 has cost=0.566053
 + -- Parameters = -14.4887 3.4689 0.4385 0.6095 -9.9429 -18.5833 0.9525 1.0012 0.9451 -0.0025 -0.0057 0.0078
 + - param set #12 has cost=0.563726
 + -- Parameters = -13.8414 2.6402 0.3689 -0.1608 -10.2470 -17.6406 0.9234 1.0235 0.9434 0.0025 0.0124 0.0238
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.104 
 + --- dist(#3,#1) = 0.0262 
 + --- dist(#4,#1) = 0.0559 
 + --- dist(#5,#1) = 0.0967 
 + --- dist(#6,#1) = 0.163 
 + --- dist(#7,#1) = 0.298 
 + --- dist(#8,#1) = 0.177 
 + --- dist(#9,#1) = 0.164 
 + --- dist(#10,#1) = 0.409 
 + --- dist(#11,#1) = 0.199 
 + --- dist(#12,#1) = 0.203 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=18 usiz=40.5
 + - retaining old weight image
 + - using 80970 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 23.4947 .. 101.521; base clip 1532.36 .. 5556.46
 +  - versus source range 3.59898e-06 .. 95.0451; base range 0 .. 7075.85
 + 74396 total points stored in 769 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.401850
 + -- Parameters = -0.1864 0.7390 -0.5331 0.6146 -3.0042 -0.3319 0.9957 1.0050 0.9841 -0.0053 0.0019 -0.0130
 + - param set #2 has cost=0.403034
 + -- Parameters = -0.0227 -0.1749 -0.1050 0.1732 -2.1975 -0.3880 0.9959 1.0101 0.9781 -0.0207 0.0042 -0.0041
 + - param set #3 has cost=0.402979
 + -- Parameters = -0.2914 0.1851 -0.5161 0.5871 -2.4558 -0.5116 0.9937 1.0062 0.9857 -0.0054 0.0074 -0.0062
 + - param set #4 has cost=0.403603
 + -- Parameters = -0.2454 0.1003 -0.6200 0.7187 -2.4551 -0.3824 0.9926 1.0093 0.9856 -0.0007 0.0021 -0.0021
 + - param set #5 has cost=0.408709
 + -- Parameters = -0.8872 -0.4335 -0.7741 0.7443 -1.9623 -1.1511 0.9923 1.0053 0.9876 0.0050 0.0227 0.0039
 + - param set #6 has cost=0.409241
 + -- Parameters = 0.9688 -0.4725 -0.5898 0.1803 -1.7837 0.6898 0.9920 1.0089 0.9865 -0.0270 -0.0213 0.0080
 + - param set #7 has cost=0.412876
 + -- Parameters = 1.9027 -0.1268 -0.1442 0.5614 -2.3727 1.8932 0.9911 1.0140 0.9769 -0.0063 -0.0524 0.0054
 + - param set #8 has cost=0.418888
 + -- Parameters = -0.5501 -1.2751 -0.2303 1.0197 -1.2720 -0.4939 0.9964 1.0085 0.9761 0.0221 0.0056 0.0189
 + - param set #9 has cost=0.412631
 + -- Parameters = -0.8005 -1.1555 -0.1053 0.7284 -1.3417 -0.9885 0.9991 1.0095 0.9750 0.0039 0.0167 0.0152
 + - param set #10 has cost=0.426098
 + -- Parameters = 3.0219 -0.8080 -0.2526 0.4833 -1.6901 2.9467 0.9893 1.0136 0.9775 -0.0152 -0.0766 0.0195
 + - param set #11 has cost=0.565083
 + -- Parameters = -13.8920 2.5674 0.3011 -0.0315 -10.2091 -17.6777 0.9238 1.0236 0.9429 0.0072 0.0122 0.0236
 + - param set #12 has cost=0.566210
 + -- Parameters = -14.0616 3.8320 0.7651 0.0026 -11.0086 -18.4660 0.9363 1.0109 0.9362 0.0010 -0.0047 0.0053
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0309 
 + --- dist(#3,#1) = 0.0693 
 + --- dist(#4,#1) = 0.0492 
 + --- dist(#5,#1) = 0.0935 
 + --- dist(#6,#1) = 0.104 
 + --- dist(#7,#1) = 0.127 
 + --- dist(#8,#1) = 0.244 
 + --- dist(#9,#1) = 0.143 
 + --- dist(#10,#1) = 0.353 
 + --- dist(#11,#1) = 0.196 
 + --- dist(#12,#1) = 0.201 
 + - Total coarse refinement net CPU time = 0.0 s; 3258 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=18 usiz=40.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 +  - histogram: source clip 23.5106 .. 101.589; base clip 1532.36 .. 5556.46
 +  - versus source range 8.70658e-08 .. 95.0533; base range 0 .. 7076.12
 + 74407 total points stored in 786 'RHDD(9.27904)' bloks
 + - cost(#1)=0.402442 *
 + -- Parameters = -0.1864 0.7390 -0.5331 0.6146 -3.0042 -0.3319 0.9957 1.0050 0.9841 -0.0053 0.0019 -0.0130
 + - cost(#2)=0.403237  
 + -- Parameters = -0.2914 0.1851 -0.5161 0.5871 -2.4558 -0.5116 0.9937 1.0062 0.9857 -0.0054 0.0074 -0.0062
 + - cost(#3)=0.404395  
 + -- Parameters = -0.0227 -0.1749 -0.1050 0.1732 -2.1975 -0.3880 0.9959 1.0101 0.9781 -0.0207 0.0042 -0.0041
 + - cost(#4)=0.403670  
 + -- Parameters = -0.2454 0.1003 -0.6200 0.7187 -2.4551 -0.3824 0.9926 1.0093 0.9856 -0.0007 0.0021 -0.0021
 + - cost(#5)=0.408358  
 + -- Parameters = -0.8872 -0.4335 -0.7741 0.7443 -1.9623 -1.1511 0.9923 1.0053 0.9876 0.0050 0.0227 0.0039
 + - cost(#6)=0.410855  
 + -- Parameters = 0.9688 -0.4725 -0.5898 0.1803 -1.7837 0.6898 0.9920 1.0089 0.9865 -0.0270 -0.0213 0.0080
 + - cost(#7)=0.412185  
 + -- Parameters = -0.8005 -1.1555 -0.1053 0.7284 -1.3417 -0.9885 0.9991 1.0095 0.9750 0.0039 0.0167 0.0152
 + - cost(#8)=0.414772  
 + -- Parameters = 1.9027 -0.1268 -0.1442 0.5614 -2.3727 1.8932 0.9911 1.0140 0.9769 -0.0063 -0.0524 0.0054
 + - cost(#9)=0.417641  
 + -- Parameters = -0.5501 -1.2751 -0.2303 1.0197 -1.2720 -0.4939 0.9964 1.0085 0.9761 0.0221 0.0056 0.0189
 + - cost(#10)=0.428860  
 + -- Parameters = 3.0219 -0.8080 -0.2526 0.4833 -1.6901 2.9467 0.9893 1.0136 0.9775 -0.0152 -0.0766 0.0195
 + - cost(#11)=0.564901  
 + -- Parameters = -13.8920 2.5674 0.3011 -0.0315 -10.2091 -17.6777 0.9238 1.0236 0.9429 0.0072 0.0122 0.0236
 + - cost(#12)=0.565654  
 + -- Parameters = -14.0616 3.8320 0.7651 0.0026 -11.0086 -18.4660 0.9363 1.0109 0.9362 0.0010 -0.0047 0.0053
 + - cost(#13)=0.560118  
 + -- Parameters = 0.2361 -0.6287 -4.0964 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=0.402181 *
 + -- Parameters = -0.1541 0.7093 -0.4460 0.5870 -2.9361 -0.3297 0.9949 1.0050 0.9839 -0.0061 0.0018 -0.0130
 + - cost(#2)=0.402663  
 + -- Parameters = -0.3932 0.3210 -0.5891 0.5597 -2.6219 -0.5843 0.9934 1.0068 0.9847 -0.0055 0.0068 -0.0066
 + - cost(#3)=0.404004  
 + -- Parameters = -0.0180 -0.1874 -0.1348 0.2294 -2.2108 -0.3456 0.9960 1.0105 0.9780 -0.0169 0.0046 -0.0045
 + - cost(#4)=0.403216  
 + -- Parameters = -0.2325 0.0991 -0.6757 0.6223 -2.4415 -0.3904 0.9925 1.0096 0.9855 -0.0043 0.0029 -0.0019
 + - cost(#5)=0.405854  
 + -- Parameters = -0.9029 -0.0633 -0.7153 0.6239 -2.1481 -1.2259 0.9933 1.0050 0.9871 -0.0043 0.0210 0.0016
 + - cost(#6)=0.407258  
 + -- Parameters = 0.8136 -0.2914 -0.3642 0.1624 -2.0411 0.6471 0.9970 1.0059 0.9822 -0.0193 -0.0182 0.0021
 + - cost(#7)=0.408253  
 + -- Parameters = -0.7668 -0.7968 -0.3107 0.5610 -1.5810 -1.0472 0.9966 1.0105 0.9779 -0.0064 0.0164 0.0115
 + - cost(#8)=0.411920  
 + -- Parameters = 1.7200 -0.1879 -0.0669 0.5069 -2.3377 1.6618 0.9917 1.0129 0.9785 -0.0074 -0.0442 -0.0008
 + - cost(#9)=0.409919  
 + -- Parameters = -0.4333 -1.0249 -0.1977 0.8216 -1.5108 -0.4929 0.9958 1.0116 0.9779 0.0048 0.0085 0.0109
 + - cost(#10)=0.421739  
 + -- Parameters = 2.7596 -0.5906 -0.3586 0.2740 -1.9530 2.7420 0.9911 1.0114 0.9795 -0.0146 -0.0641 0.0102
 + - cost(#11)=0.564588  
 + -- Parameters = -13.8243 2.5440 0.2521 0.0236 -10.2987 -17.5821 0.9182 1.0238 0.9426 0.0074 0.0121 0.0239
 + - cost(#12)=0.563415  
 + -- Parameters = -13.8610 3.7055 0.7577 0.0527 -11.2064 -17.8291 0.9391 1.0207 0.9244 0.0094 -0.0059 0.0044
 + - cost(#13)=0.403304  
 + -- Parameters = -0.1345 0.0747 -0.5214 0.6072 -2.4606 -0.2842 0.9936 1.0085 0.9844 -0.0041 -0.0009 -0.0028
 + - case #1 is now the best
 + - Initial  cost = 0.402181
 + - Initial fine Parameters = -0.1541 0.7093 -0.4460 0.5870 -2.9361 -0.3297 0.9949 1.0050 0.9839 -0.0061 0.0018 -0.0130
 + - Finalish cost = 0.402181 ; 81 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 23.5065 .. 101.572; base clip 1532.36 .. 5556.46
 +  - versus source range 8.70658e-08 .. 95.0533; base range 0 .. 7076.12
*[#15715=-0.156041] *[#15722=-0.156818] *[#15723=-0.15766] *[#15746=-0.159629] *[#15754=-0.161213] *[#15760=-0.163209] *[#15797=-0.163974] *[#15799=-0.164602] *[#15800=-0.164867] *[#15801=-0.165022] *[#15802=-0.165184] *[#15803=-0.165421] *[#15804=-0.165591] *[#15806=-0.165738] *[#15807=-0.166067] *[#15810=-0.166332] *[#15827=-0.166473] *[#15828=-0.166736] *[#15829=-0.166849] *[#15833=-0.166994] *[#15835=-0.167084] *[#15837=-0.167293] *[#15840=-0.167599] *[#15847=-0.167688] *[#15848=-0.168017] *[#15849=-0.16846] *[#15854=-0.168687] *[#15861=-0.168922] *[#15864=-0.16899] *[#15865=-0.16916] *[#15868=-0.16925] *[#15869=-0.169312] *[#15874=-0.169508] *[#15877=-0.169636] *[#15878=-0.16983] *[#15879=-0.170152] *[#15880=-0.17022] *[#15882=-0.170442] *[#15883=-0.170455] *[#15889=-0.170458] *[#15891=-0.17073] *[#15896=-0.170803] *[#15909=-0.170832] *[#15918=-0.170983] *[#15927=-0.170991] *[#15931=-0.170999] *[#15939=-0.171045] *[#15944=-0.171106] *[#15949=-0.171117] *[#15953=-0.171195] *[#15956=-0.171243] *[#15962=-0.171333] *[#15967=-0.17135] *[#15972=-0.171385] *[#15973=-0.171419] *[#15974=-0.171484] *[#15984=-0.171582] *[#15985=-0.171771] *[#15986=-0.171803] *[#15988=-0.171868] *[#15993=-0.172046] *[#15996=-0.172054] *[#16000=-0.172136] *[#16001=-0.172228] *[#16004=-0.172331] *[#16009=-0.172356] *[#16016=-0.17241] *[#16019=-0.172426] *[#16022=-0.172487] *[#16041=-0.172517] *[#16044=-0.172527] *[#16057=-0.172555] *[#16063=-0.172571] *[#16065=-0.172574] *[#16068=-0.17258] *[#16071=-0.172587] *[#16072=-0.1726] *[#16073=-0.172609] *[#16074=-0.172614] *[#16077=-0.172625] *[#16078=-0.17264] *[#16081=-0.172651] *[#16086=-0.172655] *[#16087=-0.172656] *[#16090=-0.172658] *[#16091=-0.172663] *[#16094=-0.172669] *[#16095=-0.172672] *[#16098=-0.17268] *[#16101=-0.172687] *[#16102=-0.17269] *[#16103=-0.172691] *[#16105=-0.172692] *[#16110=-0.172695] *[#16117=-0.172697] *[#16122=-0.172698] *[#16124=-0.1727] *[#16125=-0.172704] *[#16128=-0.172706] *[#16131=-0.172707] *[#16134=-0.172708] *[#16142=-0.172713] *[#16145=-0.172717] *[#16148=-0.172717] *[#16149=-0.172718] *[#16158=-0.172721] *[#16165=-0.172722] *[#16171=-0.172722] *[#16176=-0.172722] *[#16177=-0.172723] *[#16178=-0.172723] 
 + - Final    cost = -0.172723 ; 473 funcs
 + Final fine fit Parameters:
       x-shift=-0.8799   y-shift= 1.0591   z-shift=-1.7645
       z-angle= 0.3742   x-angle=-3.9286   y-angle=-0.7811
       x-scale= 1.0336   y-scale= 1.0361   z-scale= 1.0114
     y/x-shear=-0.0082 z/x-shear= 0.0085 z/y-shear=-0.0212
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.8799 1.0591 -1.7645 0.3742 -3.9286 -0.7811 1.0336 1.0361 1.0114 -0.0082 0.0085 -0.0212
++ Output dataset ./__tt_sub-TAG138_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG138_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 182.3
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 10.133101 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG138_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0289 -0.0619 0.0761 21.4027 0.0605 -0.1262 -1.0059 174.8819 0.0774 1.0251 -0.0944 -1.2262
++ Output dataset ./sub-TAG138_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG138.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.133101 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG138.r01.despike+orig.BRIK is 10.133101 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG138.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 86761 voxels
 + 10488 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.663  pitch=-1.790  yaw=-0.129  dS=-0.585  dL=-0.045  dP=-0.061
++ Mean: roll=+0.818  pitch=-1.379  yaw=+0.007  dS=-0.290  dL=+0.118  dP=+0.165
++ Max : roll=+0.918  pitch=-1.045  yaw=+0.076  dS=-0.114  dL=+0.299  dP=+0.442
++ Max displacements (mm) for each sub-brick:
 3.11(0.00) 3.21(0.21) 3.15(0.23) 3.09(0.17) 2.89(0.30) 3.03(0.36) 3.07(0.27) 3.02(0.09) 3.00(0.04) 3.09(0.31) 3.13(0.17) 3.07(0.28) 2.99(0.23) 2.94(0.15) 2.87(0.15) 2.85(0.18) 2.92(0.21) 2.90(0.19) 2.88(0.10) 2.84(0.06) 2.93(0.24) 2.98(0.21) 2.90(0.17) 2.85(0.06) 2.92(0.35) 2.94(0.08) 2.92(0.22) 2.81(0.12) 2.84(0.30) 2.86(0.13) 2.84(0.24) 2.81(0.14) 2.95(0.21) 2.95(0.29) 2.88(0.08) 2.90(0.30) 2.87(0.23) 2.87(0.10) 2.83(0.22) 2.88(0.07) 2.81(0.28) 2.74(0.10) 2.72(0.35) 2.63(0.24) 2.55(0.36) 2.50(0.10) 2.49(0.15) 2.77(0.32) 2.58(0.28) 2.45(0.20) 2.57(0.18) 2.71(0.22) 2.65(0.20) 2.54(0.25) 2.48(0.10) 2.58(0.25) 2.59(0.11) 2.51(0.17) 2.47(0.15) 2.72(0.28) 2.61(0.27) 2.57(0.11) 2.51(0.10) 2.63(0.21) 2.54(0.33) 2.51(0.11) 2.64(0.26) 2.55(0.31) 2.45(0.11) 2.59(0.31) 2.50(0.12) 2.45(0.25) 2.41(0.14) 2.61(0.23) 2.53(0.23) 2.48(0.12) 2.58(0.32) 2.61(0.14) 2.58(0.26) 2.47(0.13) 2.68(0.34) 2.54(0.17) 2.47(0.23) 2.42(0.08) 2.51(0.23) 2.55(0.18) 2.52(0.10) 2.53(0.18) 2.56(0.06) 2.50(0.34) 2.51(0.22) 2.59(0.17) 2.56(0.29) 2.49(0.10) 2.66(0.33) 2.62(0.14) 2.51(0.26) 2.48(0.19) 2.65(0.23) 2.62(0.26) 2.50(0.14) 2.50(0.19) 2.70(0.22) 2.61(0.31) 2.49(0.13) 2.44(0.07) 2.70(0.37) 2.62(0.19) 2.55(0.20) 2.46(0.09) 2.61(0.30) 2.59(0.14) 2.58(0.28) 2.52(0.08) 2.59(0.24) 2.63(0.12) 2.59(0.21) 2.49(0.13) 2.46(0.06) 2.50(0.16) 2.71(0.22) 2.60(0.34) 2.52(0.09) 2.68(0.26) 2.83(0.29) 2.79(0.17) 2.95(0.22) 2.80(0.29) 2.71(0.17) 2.79(0.27) 2.92(0.14) 2.64(0.50) 2.59(0.09) 2.66(0.12) 2.76(0.27) 2.75(0.04) 2.63(0.25) 2.58(0.06) 2.83(0.33) 2.70(0.21) 2.63(0.21) 2.61(0.05) 2.83(0.40) 2.70(0.26) 2.63(0.17) 2.53(0.13) 2.83(0.36) 2.60(0.25) 2.37(0.34) 2.41(0.10) 2.77(0.44) 2.54(0.27) 2.45(0.26) 2.43(0.06) 2.70(0.41) 2.65(0.22) 2.56(0.25) 2.46(0.14) 2.74(0.41) 2.53(0.24) 2.46(0.17) 2.51(0.17) 2.79(0.29) 2.62(0.30) 2.48(0.17) 2.42(0.11) 2.63(0.27) 2.58(0.24) 2.50(0.14) 2.48(0.08) 2.71(0.29) 2.55(0.19) 2.50(0.18) 2.46(0.10) 2.77(0.36) 2.66(0.19) 2.63(0.17) 2.51(0.17) 2.41(0.15) 2.75(0.39) 2.63(0.22) 2.47(0.19) 2.51(0.12) 2.72(0.25) 2.42(0.34) 2.38(0.06) 2.44(0.28) 2.52(0.14) 2.47(0.23) 2.33(0.19) 2.55(0.38) 2.32(0.25) 2.37(0.20) 2.32(0.12) 2.51(0.32) 2.39(0.14) 2.29(0.22) 2.35(0.18) 2.56(0.25) 2.44(0.28) 2.41(0.22) 2.44(0.25) 2.65(0.25) 2.35(0.35) 2.29(0.12) 2.41(0.20) 2.60(0.21) 2.34(0.32) 2.31(0.13) 2.55(0.39) 2.43(0.14) 2.29(0.22) 2.29(0.08) 2.63(0.36) 2.36(0.36) 2.22(0.19) 2.44(0.33) 2.31(0.16) 2.23(0.13) 2.49(0.31) 2.39(0.13) 2.24(0.17) 2.22(0.07) 2.52(0.37) 2.43(0.11) 2.25(0.22) 2.22(0.06) 2.46(0.28) 2.42(0.06) 2.25(0.24) 2.25(0.10) 2.51(0.29) 2.44(0.09) 2.29(0.27) 2.25(0.09) 2.49(0.30) 2.43(0.09) 2.27(0.24) 2.23(0.10) 2.43(0.23) 2.50(0.10) 2.24(0.31) 2.18(0.11) 2.47(0.31) 2.42(0.07) 2.22(0.27) 2.25(0.10) 2.50(0.27) 2.42(0.18) 2.32(0.25) 2.32(0.16) 2.58(0.29) 2.49(0.15) 2.32(0.20) 2.27(0.12) 2.49(0.26) 2.43(0.07) 2.24(0.25) 2.26(0.05) 2.59(0.41) 2.68(0.11) 2.45(0.27) 2.47(0.20) 2.41(0.12) 2.61(0.33) 2.39(0.24) 2.28(0.23) 2.31(0.14) 2.50(0.22) 2.30(0.24) 2.26(0.14) 2.46(0.33) 2.47(0.09) 2.37(0.24) 2.35(0.06) 2.57(0.35) 2.49(0.09) 2.15(0.60) 2.33(0.27) 2.35(0.18) 2.63(0.41) 2.38(0.28) 2.29(0.20) 2.25(0.10) 2.58(0.36) 2.41(0.18) 2.33(0.22) 2.26(0.12) 2.50(0.30) 2.41(0.12) 2.31(0.19) 2.28(0.07) 2.43(0.22) 2.59(0.19) 2.39(0.24) 2.26(0.18) 2.23(0.04) 2.44(0.27) 2.30(0.16) 2.28(0.05) 2.44(0.19) 2.32(0.13) 2.26(0.07) 2.51(0.26) 2.38(0.15) 2.33(0.27) 2.42(0.31) 2.47(0.09) 2.23(0.33) 2.23(0.13) 2.59(0.40) 2.47(0.15) 2.23(0.27) 2.28(0.09) 2.47(0.22) 2.26(0.24) 2.30(0.08) 2.47(0.21) 2.27(0.21) 2.21(0.18) 2.39(0.32) 2.35(0.15) 2.33(0.20) 2.40(0.26) 2.47(0.14) 2.21(0.41) 2.14(0.17) 2.48(0.36) 2.67(0.20) 2.42(0.26) 2.29(0.22) 2.26(0.10) 2.49(0.25) 2.56(0.11) 2.24(0.34) 2.21(0.05) 2.24(0.05) 2.56(0.35) 2.41(0.18) 2.32(0.19) 2.24(0.10) 2.35(0.41) 2.46(0.21) 2.27(0.35) 2.29(0.11) 2.22(0.13) 2.44(0.30) 2.33(0.12) 2.26(0.14) 2.27(0.10) 2.49(0.32) 2.24(0.27) 2.21(0.10) 2.33(0.14) 2.55(0.26) 2.31(0.30) 2.25(0.14) 2.34(0.18) 2.57(0.29) 2.38(0.25) 2.28(0.13) 2.41(0.16) 2.61(0.25) 2.40(0.25) 2.32(0.26) 2.27(0.12) 2.52(0.28) 2.43(0.10) 2.31(0.20) 2.34(0.05) 2.57(0.26) 2.39(0.20) 2.32(0.14) 2.45(0.28) 2.59(0.16) 2.35(0.33) 2.34(0.06) 2.56(0.33) 2.45(0.15) 2.31(0.17) 2.43(0.14) 2.66(0.27) 2.45(0.24) 2.32(0.19) 2.50(0.27) 2.59(0.15) 2.31(0.32) 2.32(0.09) 2.58(0.29) 2.29(0.35)
++ Max displacement in automask = 3.21 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.60 (mm) at sub-brick 277
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG138.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG138_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG138_SurfVol_ns+orig -input pb01.sub-TAG138.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG138.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG138.r01.despike+orig.BRIK is 10.133101 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG138.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG138_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.3
++ ###########################################################
3dAllineate -base sub-TAG138_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.133101 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG138.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.133101 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG138.r02.despike+orig.BRIK is 10.133101 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG138.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 86912 voxels
 + 10514 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.107  pitch=-0.629  yaw=-0.564  dS=-0.193  dL=-0.110  dP=-0.233
++ Mean: roll=+0.046  pitch=-0.268  yaw=-0.222  dS=+0.013  dL=+0.033  dP=-0.024
++ Max : roll=+0.190  pitch=+0.084  yaw=+0.065  dS=+0.200  dL=+0.256  dP=+0.196
++ Max displacements (mm) for each sub-brick:
 0.32(0.00) 0.37(0.22) 0.38(0.15) 0.35(0.09) 0.30(0.12) 0.44(0.19) 0.35(0.25) 0.32(0.10) 0.43(0.31) 0.43(0.10) 0.41(0.18) 0.32(0.09) 0.36(0.20) 0.43(0.09) 0.36(0.20) 0.32(0.09) 0.40(0.25) 0.39(0.06) 0.32(0.23) 0.30(0.02) 0.38(0.24) 0.39(0.05) 0.31(0.27) 0.26(0.06) 0.29(0.13) 0.52(0.31) 0.51(0.19) 0.58(0.31) 0.43(0.17) 0.46(0.14) 0.46(0.19) 0.48(0.06) 0.44(0.24) 0.32(0.18) 0.49(0.26) 0.34(0.34) 0.27(0.08) 0.18(0.09) 0.33(0.20) 0.22(0.19) 0.17(0.05) 0.33(0.23) 0.22(0.17) 0.14(0.19) 0.26(0.23) 0.36(0.13) 0.19(0.22) 0.16(0.11) 0.19(0.11) 0.35(0.27) 0.18(0.20) 0.15(0.12) 0.16(0.07) 0.31(0.21) 0.15(0.23) 0.15(0.06) 0.15(0.04) 0.25(0.20) 0.14(0.20) 0.14(0.09) 0.15(0.09) 0.27(0.22) 0.12(0.23) 0.13(0.05) 0.18(0.18) 0.29(0.15) 0.15(0.26) 0.14(0.07) 0.21(0.21) 0.35(0.18) 0.15(0.28) 0.16(0.10) 0.18(0.13) 0.37(0.22) 0.16(0.25) 0.11(0.11) 0.21(0.18) 0.27(0.09) 0.12(0.20) 0.11(0.02) 0.37(0.29) 0.18(0.19) 0.16(0.11) 0.15(0.08) 0.41(0.27) 0.25(0.17) 0.16(0.19) 0.26(0.21) 0.32(0.09) 0.09(0.28) 0.06(0.05) 0.19(0.17) 0.23(0.07) 0.10(0.22) 0.15(0.16) 0.27(0.12) 0.06(0.27) 0.00(0.06) 0.18(0.18) 0.18(0.07) 0.11(0.25) 0.06(0.09) 0.28(0.28) 0.12(0.27) 0.05(0.10) 0.27(0.25) 0.30(0.06) 0.08(0.27) 0.13(0.14) 0.13(0.21) 0.16(0.03) 0.09(0.14) 0.12(0.10) 0.30(0.19) 0.10(0.26) 0.10(0.04) 0.16(0.14) 0.24(0.09) 0.12(0.24) 0.12(0.05) 0.28(0.29) 0.10(0.21) 0.12(0.10) 0.16(0.17) 0.22(0.07) 0.18(0.20) 0.23(0.16) 0.33(0.17) 0.17(0.19) 0.19(0.08) 0.23(0.14) 0.25(0.08) 0.18(0.17) 0.18(0.06) 0.23(0.17) 0.22(0.06) 0.19(0.18) 0.16(0.07) 0.27(0.23) 0.15(0.24) 0.14(0.13) 0.62(0.64) 0.91(0.40) 1.05(0.19) 1.01(0.26) 0.87(0.14) 0.84(0.09) 0.94(0.21) 0.92(0.09) 0.75(0.22) 0.71(0.07) 0.73(0.07) 1.02(0.36) 0.94(0.08) 0.98(0.05) 1.14(0.21) 0.87(0.36) 0.81(0.08) 0.84(0.09) 1.03(0.26) 0.82(0.24) 0.78(0.05) 0.81(0.11) 1.04(0.26) 0.86(0.21) 0.74(0.31) 0.70(0.10) 0.75(0.10) 0.90(0.21) 0.74(0.22) 0.79(0.08) 0.78(0.09) 0.95(0.23) 0.87(0.11) 0.71(0.22) 0.67(0.06) 0.78(0.16) 0.77(0.06) 0.67(0.15) 0.57(0.25) 0.74(0.23) 0.60(0.20) 0.57(0.07) 0.63(0.09) 0.77(0.17) 0.55(0.31) 0.50(0.07) 0.64(0.21) 0.62(0.08) 0.50(0.25) 0.50(0.11) 0.64(0.23) 0.48(0.22) 0.50(0.06) 0.68(0.24) 0.58(0.16) 0.47(0.18) 0.58(0.18) 0.56(0.06) 0.46(0.21) 0.53(0.17) 0.56(0.09) 0.42(0.27) 0.57(0.24) 0.65(0.08) 0.48(0.22) 0.62(0.21) 0.95(0.37) 0.81(0.20) 0.67(0.26) 0.59(0.08) 0.73(0.22) 0.97(0.30) 0.79(0.24) 0.67(0.19) 0.68(0.08) 0.84(0.21) 0.81(0.04) 0.62(0.27) 0.64(0.06) 0.80(0.24) 0.74(0.07) 0.59(0.23) 0.68(0.14) 0.78(0.15) 0.63(0.24) 0.72(0.16) 0.91(0.24) 0.78(0.22) 0.69(0.15) 0.72(0.11) 0.91(0.26) 0.78(0.18) 0.65(0.19) 0.67(0.11) 0.81(0.20) 0.62(0.23) 0.68(0.07) 0.83(0.22) 0.65(0.24) 0.63(0.05) 0.81(0.26) 0.67(0.19) 0.61(0.15) 0.73(0.16) 0.79(0.10) 0.58(0.29) 0.69(0.18) 0.85(0.21) 0.66(0.26) 0.59(0.11) 0.78(0.26) 0.67(0.19) 0.64(0.09) 0.75(0.16) 0.67(0.17) 0.72(0.06) 0.88(0.31) 0.74(0.20) 0.87(0.26) 1.01(0.24) 0.95(0.13) 0.89(0.20) 0.93(0.18) 0.86(0.14) 0.82(0.17) 0.94(0.28) 0.95(0.06) 0.85(0.25) 0.86(0.04) 1.01(0.31) 0.92(0.19) 0.89(0.19) 0.94(0.15) 1.10(0.29) 0.94(0.26) 0.88(0.10) 0.88(0.06) 1.03(0.30) 1.03(0.10) 0.90(0.22) 0.88(0.11) 0.88(0.14) 1.04(0.24) 0.95(0.17) 0.91(0.13) 0.89(0.06) 1.00(0.20) 0.94(0.21) 0.92(0.06) 0.94(0.11) 0.93(0.10) 0.91(0.10) 1.08(0.31) 1.01(0.15) 0.99(0.10) 1.06(0.15) 1.23(0.28) 1.08(0.26) 1.04(0.15) 1.16(0.16) 1.12(0.04) 1.49(0.52) 1.32(0.28) 1.15(0.26) 1.20(0.12) 1.37(0.24) 1.35(0.06) 1.18(0.28) 1.19(0.10) 1.28(0.14) 1.32(0.11) 1.11(0.31) 1.08(0.07) 1.20(0.21) 1.33(0.16) 1.16(0.27) 1.10(0.09) 1.16(0.13) 1.29(0.19) 1.13(0.25) 1.08(0.08) 1.21(0.19) 1.18(0.07) 1.10(0.15) 1.24(0.23) 1.31(0.09) 1.17(0.28) 1.26(0.14) 1.39(0.23) 1.28(0.24) 1.30(0.18) 1.42(0.22) 1.34(0.13) 1.20(0.25) 1.18(0.06) 1.37(0.30) 1.33(0.06) 1.18(0.24) 1.16(0.05) 1.31(0.22) 1.36(0.10) 1.18(0.27) 1.18(0.06) 1.21(0.06) 1.40(0.25) 1.27(0.19) 1.16(0.19) 1.24(0.13) 1.38(0.22) 1.27(0.21) 1.23(0.07) 1.21(0.07) 1.32(0.22) 1.26(0.10) 1.18(0.14) 1.20(0.04) 1.31(0.19) 1.17(0.18) 1.08(0.14) 1.16(0.12) 1.27(0.16) 1.15(0.21) 1.11(0.08) 1.23(0.21) 1.21(0.05) 1.15(0.13) 1.25(0.17) 1.27(0.05) 1.14(0.23) 1.21(0.14) 1.21(0.13) 1.11(0.21) 1.20(0.16) 1.33(0.17) 1.25(0.33) 1.35(0.20) 1.51(0.25) 1.31(0.34) 1.31(0.06) 1.40(0.19) 1.51(0.15) 1.33(0.29) 1.29(0.08) 1.38(0.20) 1.50(0.16) 1.31(0.32) 1.25(0.10) 1.37(0.23) 1.38(0.06)
++ Max displacement in automask = 1.51 (mm) at sub-brick 381
++ Max delta displ  in automask = 0.64 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG138.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG138_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG138_SurfVol_ns+orig -input pb01.sub-TAG138.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG138.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG138.r02.despike+orig.BRIK is 10.133101 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG138.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG138_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 56.5
++ ###########################################################
3dAllineate -base sub-TAG138_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.133101 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 47.6
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG138.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG138.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG138.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG138.r02.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG138_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG138_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.133101 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG138_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy sub-TAG138_SurfVol_ns+orig anat_final.sub-TAG138
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG138+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 4624 survived, 16772592 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 192686 survived, 16584530 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG138.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG138.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.7
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG138.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.7
++ ###########################################################
foreach run ( 01 02 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG138.r01.blur pb02.sub-TAG138.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG138.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG138.r02.blur pb02.sub-TAG138.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG138.r02.blur+orig.BRIK
end
foreach run ( 01 02 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG138.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG138.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2208.246338
 + Used gradual clip level = 1961.925293 .. 2322.487061
 + Number voxels above clip level = 89357
 + Clustering voxels ...
 + Largest cluster has 88483 voxels
 + Clustering voxels ...
 + Largest cluster has 87409 voxels
 + Filled   494 voxels in small holes; now have 87903 voxels
 + Filled  1402 voxels in large holes; now have 89305 voxels
 + Clustering voxels ...
 + Largest cluster has 89298 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 971910 voxels
 + Mask now has 89298 voxels
++ 89298 voxels in the mask [out of 1061208: 8.41%]
++ first  24 x-planes are zero [from R]
++ last   21 x-planes are zero [from L]
++ first  11 y-planes are zero [from S]
++ last   33 y-planes are zero [from I]
++ first  12 z-planes are zero [from P]
++ last   28 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG138.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG138.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2208.703857
 + Used gradual clip level = 1969.179932 .. 2316.856201
 + Number voxels above clip level = 89522
 + Clustering voxels ...
 + Largest cluster has 88266 voxels
 + Clustering voxels ...
 + Largest cluster has 87565 voxels
 + Filled   454 voxels in small holes; now have 88019 voxels
 + Filled  1465 voxels in large holes; now have 89484 voxels
 + Clustering voxels ...
 + Largest cluster has 89479 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 971729 voxels
 + Mask now has 89479 voxels
++ 89479 voxels in the mask [out of 1061208: 8.43%]
++ first  24 x-planes are zero [from R]
++ last   21 x-planes are zero [from L]
++ first  11 y-planes are zero [from S]
++ last   33 y-planes are zero [from I]
++ first  11 z-planes are zero [from P]
++ last   28 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD -union -prefix full_mask.sub-TAG138
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 2 volumes gives min count 0
++ voxel limits: 0 clipped, 89945 survived, 971263 were zero
++ writing result full_mask.sub-TAG138...
++ Output dataset ./full_mask.sub-TAG138+orig.BRIK
3dresample -master full_mask.sub-TAG138+orig -input sub-TAG138_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG138
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 88844 survived, 972364 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG138...
++ Output dataset ./mask_anat.sub-TAG138+orig.BRIK
3dmask_tool -input full_mask.sub-TAG138+orig mask_anat.sub-TAG138+orig -inter -prefix mask_epi_anat.sub-TAG138
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 13123 clipped, 82833 survived, 965252 were zero
++ writing result mask_epi_anat.sub-TAG138...
++ Output dataset ./mask_epi_anat.sub-TAG138+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG138+orig mask_anat.sub-TAG138+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG138+orig mask_anat.sub-TAG138+orig
foreach run ( 01 02 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG138.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG138.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG138+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG138.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG138.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG138.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG138.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG138+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG138.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG138.r02.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 2 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG138
1deval -a motion_sub-TAG138_censor.1D -b outcount_sub-TAG138_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 2
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 2 -set_run_lengths 390 390 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 2 -set_run_lengths 390 390 -write bpass.r02.1D
end
1dcat bpass.r01.1D bpass.r02.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG138_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 )
1d_tool.py -set_run_lengths 390 390 -select_runs 01 -infile censor_sub-TAG138_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG138.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 167 ; remaining = 223
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 223 retained time points MINUS 4 regressors ==> 219 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 620021 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 1h 45m 58s 514ms
end
1d_tool.py -set_run_lengths 390 390 -select_runs 02 -infile censor_sub-TAG138_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG138.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 77 ; remaining = 313
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 313 retained time points MINUS 4 regressors ==> 309 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 620021 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 2h 11m 53s 77ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 4.7 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG138_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG138.r01.scale+orig.HEAD pb04.sub-TAG138.r02.scale+orig.HEAD -mask full_mask.sub-TAG138+orig -censor censor_sub-TAG138_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG138 -errts errts.sub-TAG138 -x1D_stop -bucket stats.sub-TAG138
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 557 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 780 (before censor) ; 536 (after)
 + Number of parameters:  565 [565 baseline ; 0 signal]
[7m** ERROR:[0m  *** Censoring has made regression impossible :( ***
[7m** FATAL ERROR:[0m 3dDeconvolve dies: Insufficient data (536) for estimating 565 parameters
** Program compile date = Jul  6 2018
