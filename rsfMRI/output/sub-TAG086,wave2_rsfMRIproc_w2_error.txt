shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
echo auto-generated by afni_proc.py, Tue Jan 22 09:48:11 2019
echo (version 6.16, July 5, 2018)
echo execution started: `date`
date
afni -ver
afni_history -check_date 3 May 2018
if ( 0 ) then
if ( 0 > 0 ) then
set subj = sub-TAG086
endif
set output_dir = sub-TAG086.results
if ( -d sub-TAG086.results ) then
set runs = ( `count -digits 2 1 4` )
count -digits 2 1 4
mkdir sub-TAG086.results
mkdir sub-TAG086.results/stimuli
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG086/SUMA/sub-TAG086_SurfVol.nii.gz sub-TAG086.results/sub-TAG086_SurfVol
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
Traceback (most recent call last):
  File "/packages/afni/18.2.04/afni_proc.py", line 3665, in <module>
    rv = run_proc()
  File "/packages/afni/18.2.04/afni_proc.py", line 3641, in run_proc
    rv, proc = make_proc()
  File "/packages/afni/18.2.04/afni_proc.py", line 3603, in make_proc
    rv = proc.get_user_opts()
  File "/packages/afni/18.2.04/afni_proc.py", line 1511, in get_user_opts
    rv = self.apply_initial_opts(self.user_opts)
  File "/packages/afni/18.2.04/afni_proc.py", line 1610, in apply_initial_opts
    self.tlrcanat = self.anat.new(new_view='+tlrc')
  File "/gpfs/packages/afni/18.2.04/afni_base.py", line 378, in new
    an = afni_name()
  File "/gpfs/packages/afni/18.2.04/afni_base.py", line 19, in __init__
    res = parse_afni_name(name, do_sel=self.do_sel)
  File "/gpfs/packages/afni/18.2.04/afni_base.py", line 837, in parse_afni_name
    ap = os.path.abspath(rp) #absolute path
  File "/usr/lib64/python2.7/posixpath.py", line 356, in abspath
    cwd = os.getcwd()
OSError: [Errno 2] No such file or directory
rsfMRI_preproc_wave2.proc.sub-TAG086: No such file or directory.
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG086/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG086.results/copy_af_aaseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG086/SUMA/aparc.a2009s+aseg_rank.nii.gz sub-TAG086.results/copy_af_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG086/SUMA/sub-TAG086_vent.nii.gz sub-TAG086.results/copy_af_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dcopy /projects/dsnlab/shared/tag/bids_data/derivatives/freesurfer/sub-TAG086/SUMA/sub-TAG086_WM.nii.gz sub-TAG086.results/copy_af_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
3dTcat -prefix sub-TAG086.results/pb00.sub-TAG086.r01.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG086/ses-wave2/func/sub-TAG086_ses-wave2_task-rest_run-01_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 7.6 s
3dTcat -prefix sub-TAG086.results/pb00.sub-TAG086.r02.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG086/ses-wave2/func/sub-TAG086_ses-wave2_task-rest_run-02_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 6.3 s
3dTcat -prefix sub-TAG086.results/pb00.sub-TAG086.r03.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG086/ses-wave2/func/sub-TAG086_ses-wave2_task-rest_run-03_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 5.5 s
3dTcat -prefix sub-TAG086.results/pb00.sub-TAG086.r04.tcat /projects/dsnlab/shared/tag/bids_data/sub-TAG086/ses-wave2/func/sub-TAG086_ses-wave2_task-rest_run-04_bold.nii.gz[5..$]
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 3.1 s
set tr_counts = ( 390 390 390 265 )
cd sub-TAG086.results
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG086.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r01.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ 87827 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG086.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r02.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ 88199 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG086.r03.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r03.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ 88199 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.sub-TAG086.r04.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dToutcount: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r04.tcat+orig.BRIK is 4.832416 degrees from plumb.
++ 87310 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.1)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 390 390 390 265 -index_to_run_tr 438
set minoutrun = 02
set minouttr = 48
tee out.min_outlier.txt
echo min outlier: run 02, TR 48
foreach run ( 01 02 03 04 )
3dDespike -NEW -nomask -prefix pb01.sub-TAG086.r01.despike pb00.sub-TAG086.r01.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r01.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG086.r01.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 762ms

++ FINAL: 163144800 data points, 6367787 edits [3.903%], 528507 big edits [0.324%]
++ Output dataset ./pb01.sub-TAG086.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG086.r02.despike pb00.sub-TAG086.r02.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r02.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG086.r02.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 641ms

++ FINAL: 163144800 data points, 7950246 edits [4.873%], 1606819 big edits [0.985%]
++ Output dataset ./pb01.sub-TAG086.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG086.r03.despike pb00.sub-TAG086.r03.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r03.tcat+orig.BRIK is 10.137235 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 390
++ using 390 time points => -corder 13
++ Loading dataset pb00.sub-TAG086.r03.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  32s 627ms

++ FINAL: 163144800 data points, 7950246 edits [4.873%], 1606819 big edits [0.985%]
++ Output dataset ./pb01.sub-TAG086.r03.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.sub-TAG086.r04.despike pb00.sub-TAG086.r04.tcat+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDespike: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.sub-TAG086.r04.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.sub-TAG086.r04.tcat+orig.BRIK is 4.832416 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 265
++ using 265 time points => -corder 9
++ Loading dataset pb00.sub-TAG086.r04.tcat+orig
++ processing all 423360 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
.....................................................................................................................................................................................
++ Elapsed despike time =  20s 63ms

++ FINAL: 110853475 data points, 3975192 edits [3.586%], 208539 big edits [0.188%]
++ Output dataset ./pb01.sub-TAG086.r04.despike+orig.BRIK
end
3dbucket -prefix vr_base_min_outlier pb01.sub-TAG086.r02.despike+orig[48]
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
align_epi_anat.py -anat2epi -anat sub-TAG086_SurfVol+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -cost lpc+ZZ -volreg off -tshift off
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dWarp: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_sub-TAG086_SurfVol_ns_ob+orig.BRIK
++ 3dbucket: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 10.137235 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 2076.860840
 + Used gradual clip level = 1949.796631 .. 2161.759521
 + Number voxels above clip level = 90381
 + Clustering voxels ...
 + Largest cluster has 88010 voxels
 + Clustering voxels ...
 + Largest cluster has 87232 voxels
 + Filled   966 voxels in small holes; now have 88198 voxels
 + Filled     3 voxels in large holes; now have 88201 voxels
 + Clustering voxels ...
 + Largest cluster has 88200 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 335160 voxels
 + Mask now has 88200 voxels
++ 88200 voxels in the mask [out of 423360: 20.83%]
++ first  15 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    5 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ././__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 10.137235 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG086_SurfVol_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
++ 1448010 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=0
++ 88200 voxels [19.5%] in weight mask
++ Output dataset ./__tt_sub-TAG086_SurfVol_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 88200
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(9.225)'
++ -lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 42.011 37.728 33.853 (index)
 + source center of mass = 141.931 157.395 195.184 (index)
 + source-target CM = -0.361 3.488 4.398 (xyz)
 + center of mass shifts = -0.361 3.488 4.398
++ shift param auto-range: -67.0..66.2 -63.1..70.1 -46.2..55.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.360695 .. 9.639305
 + Range param#2 [y-shift] = -6.512367 .. 13.487633
 + Range param#3 [z-shift] = -5.601913 .. 14.398087
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.360695 .. 39.639305
 + Range param#2 [y-shift] = -36.512367 .. 43.487633
 + Range param#3 [z-shift] = -35.601913 .. 44.398087
 + 12 free parameters
++ Normalized convergence radius = 0.000443
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 1448010 [out of 26933676] voxels
 + base mask has 110517 [out of 451584] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.50
 + - Smoothing source; radius=2.50
 + !source mask fill: ubot=27 usiz=60.5
 + - copying weight image
 + - using 88200 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 34.5789 .. 149.416; base clip 1425.61 .. 5034.7
 +  - versus source range 0.0305545 .. 142.18; base range 0 .. 6583.01
 + 80598 total points stored in 771 'RHDD(9.55775)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-o+o+o-o-++-+ooooo+o+ooo$oo-+oo+++o + - best 45 costs found:
    0 v= 0.559228:  -0.36   3.49   4.40   0.00   0.00   0.00  [grid]
    1 v= 0.619203:   3.72  -2.74  -3.40  -4.32 -22.85 -18.95  [rand]
    2 v= 0.620004:  -4.44  -2.74  -3.40   4.32 -22.85  18.95  [rand]
    3 v= 0.629495:   3.72  -2.74  -3.40   4.32 -22.85 -18.95  [rand]
    4 v= 0.631934:  -4.44  -2.74  -3.40  -4.32 -22.85  18.95  [rand]
    5 v= 0.693054:   3.72  -2.74  -3.40  -4.32 -22.85  18.95  [rand]
    6 v= 0.705326:  -4.44  -2.74  -3.40   4.32 -22.85 -18.95  [rand]
    7 v= 0.711338:   3.72  -2.74  -3.40   4.32 -22.85  18.95  [rand]
    8 v= 0.724688:  -4.44  -2.74  -3.40  -4.32 -22.85 -18.95  [rand]
    9 v= 0.774706:  11.24  -1.07   0.50 -24.53 -29.49 -26.10  [rand]
   10 v= 0.813430:  13.84  -5.97  -0.44 -15.99 -13.53 -29.93  [rand]
   11 v= 0.823455: -11.96  -1.07   0.50  24.53 -29.49  26.10  [rand]
   12 v= 0.829013: -14.57  -5.97  -0.44  15.99 -13.53  29.93  [rand]
   13 v= 0.843348:   3.72   9.71  -3.40  -4.32 -22.85 -18.95  [rand]
   14 v= 0.853353:  -4.44  -2.74  12.19   4.32 -22.85  18.95  [rand]
   15 v= 0.854695:  -4.44  -2.74  12.19  -4.32 -22.85  18.95  [rand]
   16 v= 0.855648:   3.72  -2.74  12.19  -4.32 -22.85 -18.95  [rand]
   17 v= 0.870044:   3.72  -2.74  12.19   4.32 -22.85 -18.95  [rand]
   18 v= 0.881010:   3.72   9.71  -3.40   4.32 -22.85 -18.95  [rand]
   19 v= 0.881846:  -4.44   9.71  -3.40   4.32 -22.85  18.95  [rand]
   20 v= 0.890295:   3.72  -2.74  12.19  -4.32 -22.85  18.95  [rand]
   21 v= 0.896900:  -4.44   9.71  -3.40  -4.32 -22.85  18.95  [rand]
   22 v= 0.922864:   3.72  -2.74  12.19   4.32 -22.85  18.95  [rand]
   23 v= 0.935510:  -4.44  -2.74  12.19   4.32 -22.85 -18.95  [rand]
   24 v= 0.950361:  12.97  -9.85  -8.94 -30.00 -30.00 -30.00  [grid]
   25 v= 0.959149:   3.72   9.71  -3.40   4.32 -22.85  18.95  [rand]
   26 v= 0.966196:   3.72   9.71  -3.40  -4.32 -22.85  18.95  [rand]
   27 v= 0.972104:  -4.44  -2.74  12.19  -4.32 -22.85 -18.95  [rand]
   28 v= 0.975040: -13.69  -9.85  -8.94  30.00 -30.00  30.00  [grid]
   29 v= 0.978828:  12.97  -9.85  -8.94 -15.00 -30.00 -30.00  [grid]
   30 v= 0.980701:  11.24   8.05   0.50 -24.53  29.49 -26.10  [rand]
   31 v= 0.986095:  -4.44   9.71  -3.40  -4.32 -22.85 -18.95  [rand]
   32 v= 0.994857:  -4.44   9.71  -3.40   4.32 -22.85 -18.95  [rand]
   33 v= 1.006436:  12.97  -9.85  -8.94 -30.00 -30.00 -15.00  [grid]
   34 v= 1.012330:  11.24  -1.07   0.50 -24.53 -29.49  26.10  [rand]
   35 v= 1.014823: -13.69  -9.85  -8.94  15.00 -30.00  30.00  [grid]
   36 v= 1.014849: -11.96   8.05   0.50  24.53  29.49  26.10  [rand]
   37 v= 1.021192:  12.97  -9.85  -8.94 -15.00 -30.00 -15.00  [grid]
   38 v= 1.025472:  11.24   8.05   8.29 -24.53  29.49 -26.10  [rand]
   39 v= 1.029664:  13.84  -5.97   9.24 -15.99 -13.53 -29.93  [rand]
   40 v= 1.030978: -11.96  -1.07   0.50  24.53 -29.49 -26.10  [rand]
   41 v= 1.033773:   3.72   9.71  -3.40  -4.32  22.85 -18.95  [rand]
   42 v= 1.035888:  11.24  -1.07   8.29 -24.53 -29.49 -26.10  [rand]
   43 v= 1.037036:  11.24   8.05   0.50 -24.53 -29.49 -26.10  [rand]
   44 v= 1.037455: -13.69  -9.85  -8.94  30.00 -30.00  15.00  [grid]
*[#8007=0.557484] *[#8011=0.550476] *[#8014=0.544301] *[#8017=0.538791] *[#8018=0.533963] *[#8019=0.516873] *[#8020=0.461247] *[#8026=0.452217] *[#8027=0.416958] *[#8028=0.374669] *[#8030=0.34065] *[#8031=0.302691] *[#8032=0.262217] *[#8034=0.248395] *[#8035=0.236855] *[#8037=0.234777] *[#8038=0.220529] *[#8039=0.212458] *[#8045=0.203709] *[#8131=0.202875] *[#8187=0.202466] *[#8250=0.200829] *[#8510=0.200217]  + - costs of the above after a little optimization:
    0 v= 0.203709:   0.15   0.19   4.76  -0.84 -11.46  -0.87  [grid]
    1 v= 0.202875:   0.15   0.11   4.61  -0.72 -11.76  -0.72  [rand]
    2 v= 0.202466:   0.03   0.12   4.82  -0.87 -11.78  -0.79  [rand]
    3 v= 0.200829:   0.23   0.26   4.90  -0.78 -11.79  -0.75  [rand]
    4 v= 0.201063:   0.18   0.33   4.84  -0.77 -11.86  -0.56  [rand]
    5 v= 0.201636:   0.29   0.17   4.76  -0.86 -11.67  -0.55  [rand]
    6 v= 0.203854:   0.03   0.11   4.68  -0.84 -11.79  -1.04  [rand]
  * 7 v= 0.200217:   0.24   0.25   4.72  -0.84 -11.79  -0.76  [rand]
    8 v= 0.211055:  -0.07   0.14   4.80  -1.27 -11.66  -1.14  [rand]
    9 v= 0.205648:   0.14  -0.09   4.67  -0.77 -11.66  -0.74  [rand]
   10 v= 0.424923:  -1.02   2.05   3.11  -1.59 -16.69  -2.35  [rand]
   11 v= 0.203261:   0.15   0.22   4.59  -0.76 -11.69  -0.63  [rand]
   12 v= 0.624144:  -7.24   0.29  -0.83  15.59 -15.22  28.45  [rand]
   13 v= 0.202614:   0.23   0.35   4.90  -0.71 -12.04  -0.78  [rand]
   14 v= 0.202723:   0.02   0.34   4.84  -0.99 -11.88  -0.97  [rand]
   15 v= 0.201784:   0.15   0.28   4.86  -0.63 -11.83  -0.86  [rand]
   16 v= 0.201165:   0.18   0.33   4.77  -0.77 -11.94  -0.93  [rand]
   17 v= 0.200415:   0.19   0.30   4.74  -0.72 -11.86  -0.78  [rand]
   18 v= 0.214471:   0.51   0.47   4.71  -0.45 -12.12  -0.07  [rand]
   19 v= 0.207696:   0.42   0.50   4.73  -0.99 -12.09  -0.62  [rand]
   20 v= 0.202344:   0.14   0.18   4.89  -0.84 -11.82  -0.59  [rand]
   21 v= 0.201645:   0.19   0.23   4.82  -0.94 -11.90  -0.60  [rand]
   22 v= 0.202464:   0.27   0.31   4.67  -0.63 -11.96  -0.64  [rand]
   23 v= 0.207148:   0.07  -0.04   4.84  -1.05 -11.55  -0.76  [rand]
   24 v= 0.204023:   0.13   0.25   4.85  -0.77 -11.64  -1.09  [grid]
   25 v= 0.203834:   0.39   0.47   4.81  -0.79 -12.00  -0.56  [rand]
   26 v= 0.202646:   0.18   0.32   4.73  -0.94 -11.72  -0.96  [rand]
   27 v= 0.201703:   0.33   0.31   4.76  -0.81 -11.99  -0.60  [rand]
   28 v= 0.588196:  -3.70   0.79  -0.12  11.74 -17.15  16.80  [grid]
   29 v= 0.202970:   0.44   0.28   4.79  -0.76 -11.74  -0.66  [grid]
   30 v= 0.691883:   8.38   5.30  -2.38 -34.70  -2.35 -41.15  [rand]
   31 v= 0.205568:   0.38   0.38   5.01  -0.68 -11.89  -0.63  [rand]
   32 v= 0.203144:   0.45   0.21   4.81  -0.74 -11.82  -0.48  [rand]
   33 v= 0.202636:   0.25   0.42   4.80  -0.72 -12.08  -0.79  [grid]
   34 v= 0.203093:   0.03   0.21   4.90  -0.76 -11.75  -1.02  [rand]
   35 v= 0.201591:   0.16   0.15   4.80  -0.96 -11.75  -0.70  [grid]
   36 v= 0.683891: -10.89   3.30  -1.94  38.16  -2.01  37.96  [rand]
   37 v= 0.588523:   3.83   0.54   0.66 -12.19 -18.13 -20.57  [grid]
   38 v= 0.315413:   1.02  -0.92   3.62  -1.64 -11.78   0.25  [rand]
   39 v= 0.269744:  -1.07   0.30   5.07  -1.37 -11.80  -1.54  [rand]
   40 v= 0.204212:   0.22   0.47   4.69  -0.75 -12.00  -0.47  [rand]
   41 v= 0.371846:  -0.14   1.84   3.44  -0.69 -15.56  -0.84  [rand]
   42 v= 0.203518:   0.27   0.30   4.75  -0.76 -11.85  -1.02  [rand]
   43 v= 0.584485:   3.20   1.49   1.23 -10.97 -16.98 -19.43  [rand]
   44 v= 0.203628:   0.33   0.23   4.92  -0.96 -11.74  -0.75  [grid]
 + - save # 7 for twobest
 + - skip #17 for twobest: too close to set # 7
 + - skip # 3 for twobest: too close to set # 7
 + - skip # 4 for twobest: too close to set # 7
 + - skip #16 for twobest: too close to set # 7
 + - skip #35 for twobest: too close to set # 7
 + - skip # 5 for twobest: too close to set # 7
 + - skip #21 for twobest: too close to set # 7
 + - skip #27 for twobest: too close to set # 7
 + - skip #15 for twobest: too close to set # 7
 + - skip #20 for twobest: too close to set # 7
 + - skip #22 for twobest: too close to set # 7
 + - skip # 2 for twobest: too close to set # 7
 + - skip #13 for twobest: too close to set # 7
 + - skip #33 for twobest: too close to set # 7
 + - skip #26 for twobest: too close to set # 7
 + - skip #14 for twobest: too close to set # 7
 + - skip # 1 for twobest: too close to set # 7
 + - skip #29 for twobest: too close to set # 7
 + - skip #34 for twobest: too close to set # 7
 + - skip #32 for twobest: too close to set # 7
 + - skip #11 for twobest: too close to set # 7
 + - skip #42 for twobest: too close to set # 7
 + - skip #44 for twobest: too close to set # 7
 + - skip # 0 for twobest: too close to set # 7
 + - skip #25 for twobest: too close to set # 7
 + - skip # 6 for twobest: too close to set # 7
 + - skip #24 for twobest: too close to set # 7
 + - skip #40 for twobest: too close to set # 7
 + - skip #31 for twobest: too close to set # 7
 + - skip # 9 for twobest: too close to set # 7
 + - skip #23 for twobest: too close to set # 7
 + - skip #19 for twobest: too close to set # 7
 + - skip # 8 for twobest: too close to set # 7
 + - skip #18 for twobest: too close to set # 7
 + - skip #39 for twobest: too close to set # 7
 + - skip #38 for twobest: too close to set # 7
 + - skip #41 for twobest: too close to set # 7
 + - skip #10 for twobest: too close to set #41
 + - save #43 for twobest
 + - save #28 for twobest
 + - skip #37 for twobest: too close to set #43
 + - save #12 for twobest
 + - save #36 for twobest
 + - save #30 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 7 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.94
 + - Smoothing source; radius=1.94
 + !source mask fill: ubot=27 usiz=60.5
 + - retaining old weight image
 + - using 88200 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 34.7008 .. 149.942; base clip 1430.44 .. 5110.25
 +  - versus source range 0.00306145 .. 142.201; base range 0 .. 6604.56
 + 81344 total points stored in 792 'RHDD(9.42766)' bloks
 + - param set #1 has cost=0.230845
 + -- Parameters = 0.1414 0.3513 4.7983 -0.8913 -11.9673 -0.8933 1.0009 0.9954 1.0013 -0.0021 0.0051 -0.0039
 + - param set #2 has cost=0.274027
 + -- Parameters = 0.1754 0.8450 5.5300 -1.1076 -12.8717 -0.6535 1.0067 1.0151 0.9493 -0.0092 -0.0027 -0.0066
 + - param set #3 has cost=0.491165
 + -- Parameters = 0.9978 1.0353 8.7882 0.4263 -18.2819 2.0762 0.9711 0.9763 0.9703 -0.0365 -0.0227 -0.0219
 + - param set #4 has cost=0.574893
 + -- Parameters = -5.4132 1.4046 0.4140 15.5757 -21.8823 23.5075 0.9508 0.9902 0.9797 0.0023 0.0042 -0.0081
 + - param set #5 has cost=0.577430
 + -- Parameters = -12.1749 3.9088 -1.1301 41.7367 -3.7865 42.3157 0.9600 0.9777 0.9637 0.0267 -0.0059 -0.0415
 + - param set #6 has cost=0.579741
 + -- Parameters = 8.4666 5.8622 -1.3239 -36.6372 -9.6040 -36.7023 0.9728 0.9727 0.9747 0.0016 0.0038 -0.0041
 + - param set #7 has cost=0.288356
 + -- Parameters = 0.2299 -0.2206 5.1530 -1.0466 -9.6341 -0.5090 0.9954 0.9997 0.9595 -0.0113 -0.0122 0.0453
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.142 
 + --- dist(#3,#1) = 0.222 
 + --- dist(#4,#1) = 0.155 
 + --- dist(#5,#1) = 0.271 
 + --- dist(#6,#1) = 0.48 
 + --- dist(#7,#1) = 0.398 
++ Start refinement #2 on 7 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.51
 + - Smoothing source; radius=1.51
 + !source mask fill: ubot=27 usiz=60.5
 + - retaining old weight image
 + - using 88200 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 34.6888 .. 149.89; base clip 1435.02 .. 5191.91
 +  - versus source range 0.000103064 .. 142.148; base range 0 .. 6623.92
 + 80839 total points stored in 831 'RHDD(9.3481)' bloks
 + - param set #1 has cost=0.268116
 + -- Parameters = 0.1201 0.4350 4.8204 -1.0006 -12.0739 -0.8267 0.9988 0.9928 0.9951 -0.0083 0.0036 -0.0067
 + - param set #2 has cost=0.265563
 + -- Parameters = 0.1199 0.6682 4.8797 -0.9443 -12.7146 -0.8498 1.0003 0.9896 0.9887 -0.0047 0.0026 -0.0201
 + - param set #3 has cost=0.290447
 + -- Parameters = 0.2672 -0.0727 4.8714 -0.9969 -10.5906 -0.4514 0.9975 0.9894 0.9851 -0.0091 -0.0067 0.0242
 + - param set #4 has cost=0.301968
 + -- Parameters = 0.3499 0.6142 5.3046 -0.9810 -12.7207 0.2752 1.0005 1.0087 0.9617 -0.0115 -0.0285 -0.0223
 + - param set #5 has cost=0.568936
 + -- Parameters = -5.8198 2.7603 -0.1641 11.1331 -22.6981 10.7654 0.9548 0.9506 0.9371 -0.0030 -0.0096 -0.0068
 + - param set #6 has cost=0.581484
 + -- Parameters = -12.5200 3.7958 -0.4145 41.0206 -3.8509 40.7880 0.9625 0.9809 0.9558 0.0387 -0.0018 -0.0491
 + - param set #7 has cost=0.581648
 + -- Parameters = 8.6971 6.3623 -2.5935 -38.4887 -11.3384 -37.2170 0.9669 0.9610 0.9684 0.0024 0.0029 -0.0035
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0605 
 + --- dist(#3,#1) = 0.199 
 + --- dist(#4,#1) = 0.14 
 + --- dist(#5,#1) = 0.141 
 + --- dist(#6,#1) = 0.466 
 + --- dist(#7,#1) = 0.417 
++ Start refinement #3 on 7 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.18
 + - Smoothing source; radius=1.18
 + !source mask fill: ubot=27 usiz=60.5
 + - retaining old weight image
 + - using 88200 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 34.8637 .. 150.646; base clip 1437.77 .. 5243.63
 +  - versus source range 1.42719e-06 .. 142.146; base range 0 .. 6641.62
 + 81223 total points stored in 833 'RHDD(9.29965)' bloks
 + - param set #1 has cost=0.274663
 + -- Parameters = 0.1786 0.6313 4.8858 -0.9502 -12.7791 -0.6900 0.9990 0.9910 0.9933 -0.0067 0.0012 -0.0218
 + - param set #2 has cost=0.277133
 + -- Parameters = 0.1326 0.5108 4.8833 -1.0592 -12.2703 -0.7885 1.0013 0.9906 0.9935 -0.0091 0.0011 -0.0104
 + - param set #3 has cost=0.286791
 + -- Parameters = 0.2291 0.1935 4.7123 -1.0425 -11.3487 -0.5057 0.9998 0.9891 1.0021 -0.0076 -0.0061 0.0078
 + - param set #4 has cost=0.279894
 + -- Parameters = 0.3916 0.7069 4.9414 -1.0605 -12.8721 0.1031 0.9994 0.9892 0.9903 -0.0110 -0.0180 -0.0223
 + - param set #5 has cost=0.394103
 + -- Parameters = 1.3506 1.8363 5.8703 -1.7295 -14.9465 2.2788 0.9592 1.0001 0.9728 -0.0302 -0.0861 -0.0488
 + - param set #6 has cost=0.581438
 + -- Parameters = -12.3328 3.4701 -0.2098 40.6079 -3.1860 41.1324 0.9592 0.9908 0.9536 0.0390 -0.0004 -0.0524
 + - param set #7 has cost=0.583314
 + -- Parameters = 8.6816 7.1258 -2.7981 -37.9710 -11.6638 -37.4308 0.9582 0.9517 0.9726 -0.0101 0.0098 -0.0016
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0515 
 + --- dist(#3,#1) = 0.0865 
 + --- dist(#4,#1) = 0.133 
 + --- dist(#5,#1) = 0.393 
 + --- dist(#6,#1) = 0.465 
 + --- dist(#7,#1) = 0.411 
 + - Total coarse refinement net CPU time = 0.0 s; 1856 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=27 usiz=60.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 8 cases
 +  - histogram: source clip 34.8158 .. 150.439; base clip 1437.77 .. 5243.63
 +  - versus source range 2.60659e-08 .. 142.132; base range 0 .. 6642.91
 + 81305 total points stored in 855 'RHDD(9.27904)' bloks
 + - cost(#1)=0.274322 *
 + -- Parameters = 0.1786 0.6313 4.8858 -0.9502 -12.7791 -0.6900 0.9990 0.9910 0.9933 -0.0067 0.0012 -0.0218
 + - cost(#2)=0.277613  
 + -- Parameters = 0.1326 0.5108 4.8833 -1.0592 -12.2703 -0.7885 1.0013 0.9906 0.9935 -0.0091 0.0011 -0.0104
 + - cost(#3)=0.279069  
 + -- Parameters = 0.3916 0.7069 4.9414 -1.0605 -12.8721 0.1031 0.9994 0.9892 0.9903 -0.0110 -0.0180 -0.0223
 + - cost(#4)=0.288508  
 + -- Parameters = 0.2291 0.1935 4.7123 -1.0425 -11.3487 -0.5057 0.9998 0.9891 1.0021 -0.0076 -0.0061 0.0078
 + - cost(#5)=0.395856  
 + -- Parameters = 1.3506 1.8363 5.8703 -1.7295 -14.9465 2.2788 0.9592 1.0001 0.9728 -0.0302 -0.0861 -0.0488
 + - cost(#6)=0.583015  
 + -- Parameters = -12.3328 3.4701 -0.2098 40.6079 -3.1860 41.1324 0.9592 0.9908 0.9536 0.0390 -0.0004 -0.0524
 + - cost(#7)=0.583582  
 + -- Parameters = 8.6816 7.1258 -2.7981 -37.9710 -11.6638 -37.4308 0.9582 0.9517 0.9726 -0.0101 0.0098 -0.0016
 + - cost(#8)=0.577964  
 + -- Parameters = -0.3607 3.4876 4.3981 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 8 cases
 + - cost(#1)=0.273829 *
 + -- Parameters = 0.1507 0.6815 4.9027 -0.9717 -12.8203 -0.7017 0.9991 0.9907 0.9908 -0.0071 0.0008 -0.0222
 + - cost(#2)=0.274835  
 + -- Parameters = 0.1243 0.6332 4.8778 -1.0724 -12.6297 -0.8050 1.0000 0.9918 0.9940 -0.0091 0.0017 -0.0173
 + - cost(#3)=0.274875  
 + -- Parameters = 0.2709 0.7831 4.9113 -0.9458 -12.9872 -0.2808 0.9990 0.9920 0.9916 -0.0088 -0.0105 -0.0247
 + - cost(#4)=0.279518  
 + -- Parameters = 0.0718 0.4424 4.8995 -1.0391 -12.1559 -0.7980 1.0030 0.9871 0.9946 -0.0102 -0.0012 -0.0125
 + - cost(#5)=0.313591  
 + -- Parameters = 0.5595 1.1054 5.0086 -0.6155 -14.2142 1.3535 0.9940 1.0045 0.9760 -0.0029 -0.0488 -0.0416
 + - cost(#6)=0.582231  
 + -- Parameters = -12.8361 3.2633 -0.3389 41.5087 -2.8048 40.8429 0.9530 0.9903 0.9557 0.0382 0.0037 -0.0465
 + - cost(#7)=0.583223  
 + -- Parameters = 8.5635 7.4353 -2.6514 -38.0875 -11.3043 -37.4006 0.9588 0.9529 0.9718 -0.0102 0.0100 0.0020
 + - cost(#8)=0.277106  
 + -- Parameters = 0.2142 0.7402 4.9329 -0.7252 -12.9540 -0.5942 0.9958 0.9893 0.9852 0.0013 -0.0001 -0.0257
 + - case #1 is now the best
 + - Initial  cost = 0.273829
 + - Initial fine Parameters = 0.1507 0.6815 4.9027 -0.9717 -12.8203 -0.7017 0.9991 0.9907 0.9908 -0.0071 0.0008 -0.0222
 + - Finalish cost = 0.273828 ; 83 funcs
 +  - Set lpc+ parameters back to pure lpc before Final
 +  - histogram: source clip 34.8686 .. 150.667; base clip 1437.77 .. 5243.63
 +  - versus source range 2.60659e-08 .. 142.132; base range 0 .. 6642.91
*[#13971=-0.280458] *[#14029=-0.280499] *[#14040=-0.280578] *[#14044=-0.280592] *[#14079=-0.280698] *[#14080=-0.280702] *[#14081=-0.280726] *[#14082=-0.28077] *[#14085=-0.280815] *[#14088=-0.280838] *[#14091=-0.28084] *[#14092=-0.280857] *[#14095=-0.280863] *[#14098=-0.280878] *[#14099=-0.280899] *[#14101=-0.280913] *[#14102=-0.280941] *[#14103=-0.28095] *[#14104=-0.280967] *[#14105=-0.280994] *[#14106=-0.281011] *[#14107=-0.28105] *[#14114=-0.281062] *[#14115=-0.281068] *[#14116=-0.281076] *[#14117=-0.281082] *[#14118=-0.281083] *[#14120=-0.281091] *[#14123=-0.281106] *[#14124=-0.281116] *[#14125=-0.281126] *[#14128=-0.281135] *[#14129=-0.28114] *[#14130=-0.281141] *[#14132=-0.281149] *[#14133=-0.28115] *[#14135=-0.281153] *[#14136=-0.281159] *[#14137=-0.28116] *[#14140=-0.281165] *[#14145=-0.281175] *[#14148=-0.281179] *[#14151=-0.281191] *[#14152=-0.281194] *[#14155=-0.281197] *[#14156=-0.281198] *[#14157=-0.281203] *[#14164=-0.281209] *[#14165=-0.28121] *[#14167=-0.281211] *[#14168=-0.281213] *[#14171=-0.281214] *[#14172=-0.281222] *[#14173=-0.281239] *[#14176=-0.281255] *[#14177=-0.281263] *[#14178=-0.281266] *[#14181=-0.281276] *[#14182=-0.281279] *[#14185=-0.281284] *[#14186=-0.281289] *[#14187=-0.28129] *[#14192=-0.281299] *[#14193=-0.281306] *[#14194=-0.281311] *[#14197=-0.281317] *[#14198=-0.281319] *[#14199=-0.281324] *[#14200=-0.281327] *[#14201=-0.281329] *[#14206=-0.281338] *[#14211=-0.281349] *[#14214=-0.281355] *[#14215=-0.281366] *[#14218=-0.281371] *[#14219=-0.281376] *[#14220=-0.281379] *[#14223=-0.28138] *[#14224=-0.281385] *[#14227=-0.281389] *[#14228=-0.281389] *[#14233=-0.281399] *[#14236=-0.281403] *[#14239=-0.281403] *[#14245=-0.281405] *[#14246=-0.281406] *[#14247=-0.281407] *[#14250=-0.281409] *[#14251=-0.281409] *[#14270=-0.28141] *[#14276=-0.281411] *[#14285=-0.281411] *[#14287=-0.281411] *[#14299=-0.281411] *[#14300=-0.281412] *[#14308=-0.281412] 
 + - Final    cost = -0.281412 ; 338 funcs
 + Final fine fit Parameters:
       x-shift= 0.1326   y-shift= 0.7164   z-shift= 4.9821
       z-angle=-1.0274   x-angle=-13.0154   y-angle=-0.7407
       x-scale= 1.0009   y-scale= 0.9933   z-scale= 0.9907
     y/x-shear=-0.0085 z/x-shear= 0.0005 z/y-shear=-0.0262
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.1326 0.7164 4.9821 -1.0274 -13.0154 -0.7407 1.0009 0.9933 0.9907 -0.0085 0.0005 -0.0262
++ Output dataset ./__tt_sub-TAG086_SurfVol_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./sub-TAG086_SurfVol_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 138.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./__tt_sub-TAG086_SurfVol_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.9978 0.0775 -0.0263 15.3701 -0.0327 0.0321 -0.9945 159.7847 -0.0691 0.9844 0.0595 27.5006
++ Output dataset ./sub-TAG086_SurfVol_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.3
++ ###########################################################
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach run ( 01 02 03 04 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -Fourier -1Dmatrix_save mat.r01.vr.aff12.1D pb01.sub-TAG086.r01.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.137235 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG086.r01.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG086.r01.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 92896 voxels
 + 10853 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.327  pitch=-2.013  yaw=+0.051  dS=-1.471  dL=-0.023  dP=+2.242
++ Mean: roll=-0.174  pitch=-1.380  yaw=+0.257  dS=-1.019  dL=+0.037  dP=+2.446
++ Max : roll=-0.072  pitch=-0.655  yaw=+0.410  dS=-0.292  dL=+0.110  dP=+2.722
++ Max displacements (mm) for each sub-brick:
 3.61(0.00) 3.72(0.16) 3.70(0.21) 3.60(0.17) 3.62(0.13) 3.65(0.24) 3.59(0.13) 3.77(0.36) 3.80(0.25) 3.71(0.17) 3.62(0.25) 3.73(0.11) 3.79(0.24) 3.68(0.21) 3.71(0.11) 3.77(0.21) 3.67(0.14) 3.73(0.28) 3.89(0.18) 3.91(0.29) 3.77(0.26) 3.84(0.27) 3.97(0.24) 3.88(0.22) 3.73(0.20) 3.79(0.22) 3.90(0.26) 3.89(0.03) 3.87(0.28) 3.93(0.26) 3.79(0.15) 3.83(0.11) 3.85(0.04) 3.88(0.06) 3.92(0.26) 3.84(0.32) 3.93(0.11) 3.94(0.22) 3.62(0.45) 3.66(0.26) 3.69(0.12) 3.70(0.07) 3.70(0.12) 3.71(0.08) 3.86(0.17) 3.85(0.08) 3.89(0.07) 3.90(0.11) 3.85(0.09) 3.75(0.22) 3.82(0.13) 3.88(0.20) 3.75(0.28) 3.83(0.12) 3.96(0.30) 3.95(0.22) 3.92(0.19) 3.94(0.51) 4.01(0.08) 3.92(0.11) 3.82(0.30) 3.81(0.19) 3.85(0.34) 3.77(0.09) 3.84(0.35) 3.91(0.15) 3.97(0.28) 3.93(0.09) 3.79(0.27) 3.93(0.14) 3.99(0.18) 3.92(0.10) 3.83(0.22) 3.78(0.17) 3.90(0.31) 3.86(0.19) 3.97(0.44) 4.06(0.27) 4.03(0.08) 4.00(0.25) 4.10(0.17) 4.07(0.16) 4.03(0.07) 3.96(0.29) 4.08(0.12) 4.09(0.20) 4.04(0.05) 4.02(0.26) 4.15(0.13) 4.15(0.22) 4.07(0.10) 4.02(0.24) 4.09(0.16) 4.04(0.10) 4.01(0.19) 4.08(0.09) 4.13(0.09) 4.16(0.32) 4.38(0.24) 4.45(0.25) 4.35(0.32) 4.17(0.18) 4.10(0.37) 4.16(0.07) 4.19(0.09) 4.30(0.17) 4.34(0.36) 4.08(0.30) 3.78(0.63) 4.03(0.37) 4.12(0.24) 4.28(0.37) 4.19(0.14) 4.12(0.09) 4.10(0.07) 4.13(0.14) 4.18(0.07) 4.22(0.22) 4.20(0.35) 4.23(0.08) 4.18(0.17) 4.09(0.21) 4.18(0.18) 4.19(0.09) 4.21(0.14) 4.23(0.19) 4.20(0.31) 4.32(0.16) 4.38(0.22) 4.30(0.19) 4.22(0.29) 4.32(0.23) 4.41(0.25) 4.34(0.11) 4.33(0.03) 4.36(0.29) 4.22(0.17) 4.23(0.12) 4.26(0.10) 4.27(0.10) 4.26(0.28) 4.38(0.15) 4.40(0.21) 4.34(0.12) 4.21(0.13) 4.16(0.22) 4.19(0.18) 4.14(0.17) 4.21(0.08) 4.22(0.19) 4.18(0.14) 4.24(0.06) 4.24(0.19) 4.20(0.16) 4.27(0.09) 4.24(0.14) 4.17(0.08) 4.15(0.21) 4.24(0.15) 4.21(0.10) 4.25(0.11) 4.22(0.08) 4.23(0.09) 4.22(0.08) 4.26(0.05) 4.27(0.13) 4.24(0.10) 4.21(0.17) 4.28(0.13) 4.30(0.09) 4.16(0.21) 4.31(0.26) 4.47(0.17) 4.44(0.33) 4.30(0.15) 4.22(0.31) 4.29(0.18) 4.22(0.13) 4.19(0.10) 4.14(0.16) 4.10(0.08) 4.14(0.20) 4.25(0.17) 4.26(0.24) 4.19(0.09) 4.12(0.29) 4.21(0.11) 4.22(0.18) 4.08(0.20) 4.14(0.10) 4.14(0.07) 4.17(0.06) 4.17(0.13) 4.13(0.21) 4.21(0.12) 4.25(0.16) 4.20(0.10) 4.17(0.16) 4.26(0.14) 4.27(0.11) 4.20(0.18) 4.20(0.10) 4.19(0.23) 4.26(0.26) 4.37(0.28) 4.30(0.23) 4.25(0.23) 4.35(0.10) 4.42(0.20) 4.33(0.10) 4.18(0.35) 4.25(0.08) 4.30(0.21) 4.24(0.20) 4.42(0.67) 4.57(0.77) 4.35(0.45) 4.46(0.16) 4.39(0.23) 4.39(0.30) 4.36(0.07) 4.35(0.20) 4.24(0.13) 4.26(0.25) 4.33(0.18) 4.30(0.21) 4.22(0.08) 4.22(0.23) 4.34(0.20) 4.34(0.17) 4.33(0.30) 4.35(0.11) 4.41(0.26) 4.37(0.07) 4.32(0.38) 4.37(0.10) 4.40(0.25) 4.33(0.08) 4.29(0.30) 4.36(0.23) 4.37(0.10) 4.37(0.07) 4.42(0.28) 4.36(0.23) 4.36(0.18) 4.44(0.35) 4.31(0.19) 4.22(0.44) 4.53(0.39) 4.43(0.11) 4.38(0.20) 4.44(0.16) 4.55(0.30) 4.65(0.39) 4.61(0.08) 4.59(0.31) 4.48(0.11) 4.42(0.22) 4.51(0.14) 4.58(0.12) 4.54(0.13) 4.55(0.09) 4.59(0.18) 4.50(0.18) 4.49(0.12) 4.55(0.25) 4.50(0.09) 4.42(0.26) 4.46(0.15) 4.50(0.20) 4.47(0.28) 4.51(0.15) 4.54(0.17) 4.48(0.25) 4.54(0.09) 4.62(0.23) 4.58(0.06) 4.56(0.30) 4.61(0.20) 4.58(0.13) 4.52(0.09) 4.50(0.22) 4.58(0.16) 4.62(0.21) 4.51(0.12) 4.51(0.23) 4.58(0.22) 4.58(0.15) 4.48(0.30) 4.54(0.09) 4.59(0.23) 4.51(0.10) 4.45(0.23) 4.52(0.26) 4.49(0.04) 4.48(0.21) 4.53(0.12) 4.60(0.29) 4.56(0.08) 4.48(0.32) 4.56(0.19) 4.54(0.13) 4.46(0.35) 4.55(0.19) 4.56(0.21) 4.45(0.19) 4.53(0.12) 4.66(0.30) 4.84(0.39) 4.57(0.31) 4.53(0.20) 4.50(0.12) 4.45(0.29) 4.55(0.13) 4.60(0.20) 4.62(0.08) 4.50(0.25) 4.58(0.26) 4.56(0.10) 4.48(0.26) 4.59(0.12) 4.56(0.16) 4.48(0.42) 4.51(0.10) 4.61(0.32) 4.50(0.27) 4.54(0.06) 4.60(0.22) 4.50(0.27) 4.53(0.05) 4.60(0.21) 4.53(0.29) 4.58(0.12) 4.60(0.14) 4.49(0.28) 4.53(0.05) 4.62(0.29) 4.56(0.12) 4.55(0.23) 4.63(0.29) 4.57(0.15) 4.56(0.15) 4.67(0.33) 4.65(0.19) 4.60(0.29) 4.69(0.30) 4.60(0.15) 4.50(0.13) 4.65(0.37) 4.61(0.14) 4.62(0.23) 4.74(0.22) 4.92(0.34) 5.09(0.27) 4.84(0.30) 4.75(0.19) 4.78(0.30) 4.88(0.13) 4.79(0.21) 4.89(0.31) 4.84(0.11) 4.73(0.30) 4.84(0.36) 4.88(0.10) 4.88(0.32) 4.81(0.20) 4.80(0.22) 4.70(0.23) 4.74(0.06) 4.78(0.24) 4.73(0.28) 4.72(0.04) 4.77(0.28) 4.89(0.42) 4.90(0.30) 5.00(0.28) 4.87(0.16) 4.81(0.21) 4.82(0.10) 4.80(0.15) 4.76(0.05) 4.76(0.16) 4.87(0.27) 4.97(0.28) 4.94(0.15) 4.90(0.06) 4.87(0.27) 4.85(0.05) 4.83(0.22) 4.77(0.08)
++ Max displacement in automask = 5.09 (mm) at sub-brick 353
++ Max delta displ  in automask = 0.77 (mm) at sub-brick 215
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG086.r01.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG086_SurfVol_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input pb01.sub-TAG086.r01.despike+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG086.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG086.r01.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG086.r01.despike+orig.HEAD
++ Base dataset:   ./sub-TAG086_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.6
++ ###########################################################
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.137235 degrees from plumb.
++ Output dataset ./rm.epi.1.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 44.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r01+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -Fourier -1Dmatrix_save mat.r02.vr.aff12.1D pb01.sub-TAG086.r02.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.137235 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG086.r02.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG086.r02.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 93556 voxels
 + 10964 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.214  pitch=-0.681  yaw=-0.180  dS=-1.009  dL=-0.119  dP=-0.459
++ Mean: roll=+0.010  pitch=-0.212  yaw=-0.046  dS=+0.289  dL=-0.013  dP=-0.050
++ Max : roll=+0.124  pitch=+0.963  yaw=+0.289  dS=+1.402  dL=+0.054  dP=+0.656
++ Max displacements (mm) for each sub-brick:
 0.49(0.00) 0.34(0.41) 0.27(0.30) 0.31(0.13) 0.18(0.18) 0.18(0.13) 0.19(0.11) 0.26(0.10) 0.17(0.15) 0.22(0.07) 0.23(0.08) 0.26(0.14) 0.23(0.13) 0.27(0.08) 0.28(0.09) 0.30(0.11) 0.24(0.14) 0.23(0.10) 0.24(0.15) 0.23(0.08) 0.25(0.16) 0.26(0.11) 0.27(0.10) 0.36(0.44) 1.04(0.78) 1.12(0.32) 1.06(0.32) 1.06(0.12) 0.99(0.28) 0.97(0.17) 0.88(0.14) 0.78(0.17) 0.66(0.19) 0.73(0.24) 0.57(0.16) 0.30(0.48) 0.15(0.20) 0.16(0.17) 0.37(0.23) 0.31(0.13) 0.24(0.09) 0.22(0.22) 0.17(0.07) 0.15(0.05) 0.25(0.18) 0.09(0.19) 0.14(0.08) 0.20(0.14) 0.00(0.20) 0.09(0.09) 0.18(0.15) 0.07(0.13) 0.10(0.07) 0.22(0.24) 0.12(0.13) 0.08(0.16) 0.20(0.21) 0.15(0.12) 0.09(0.14) 0.29(0.24) 0.18(0.12) 0.08(0.13) 0.27(0.22) 0.15(0.12) 0.06(0.15) 0.20(0.17) 0.22(0.08) 0.08(0.17) 0.32(0.25) 0.33(0.06) 0.14(0.22) 0.29(0.18) 0.20(0.09) 0.20(0.05) 0.38(0.21) 0.18(0.21) 0.19(0.06) 0.28(0.12) 0.12(0.19) 0.31(0.22) 0.37(0.06) 0.21(0.21) 0.31(0.11) 0.43(0.16) 0.25(0.22) 0.31(0.06) 0.44(0.16) 0.28(0.20) 0.39(0.13) 0.54(0.20) 0.33(0.23) 0.33(0.11) 0.47(0.19) 0.47(0.03) 0.33(0.18) 0.37(0.10) 0.56(0.22) 0.40(0.19) 0.29(0.14) 0.44(0.20) 0.43(0.11) 0.32(0.18) 0.53(0.27) 0.48(0.12) 0.49(0.16) 0.84(0.42) 1.09(0.25) 1.05(0.31) 0.87(0.23) 0.51(0.38) 0.92(0.49) 0.77(0.27) 0.77(0.06) 1.02(0.34) 0.95(0.18) 0.96(0.04) 1.19(0.28) 1.02(0.26) 1.13(0.19) 1.14(0.07) 1.09(0.14) 1.19(0.18) 1.07(0.23) 1.08(0.08) 1.21(0.21) 1.13(0.15) 1.15(0.03) 1.35(0.28) 1.37(0.23) 1.34(0.13) 1.54(0.21) 1.42(0.12) 1.27(0.21) 1.15(0.25) 1.29(0.14) 1.22(0.17) 1.26(0.06) 1.23(0.09) 1.21(0.10) 1.26(0.13) 1.26(0.20) 1.19(0.11) 1.23(0.06) 1.34(0.14) 1.26(0.15) 1.36(0.11) 1.49(0.19) 1.32(0.24) 1.38(0.15) 1.39(0.08) 1.22(0.23) 1.07(0.21) 0.94(0.18) 0.93(0.19) 1.14(0.21) 1.36(0.29) 1.03(0.38) 1.10(0.07) 1.38(0.34) 1.34(0.16) 1.21(0.15) 0.88(0.36) 0.52(0.43) 0.59(0.13) 0.48(0.19) 0.44(0.10) 0.43(0.30) 0.41(0.06) 0.34(0.16) 0.33(0.08) 0.42(0.24) 0.30(0.16) 0.28(0.04) 0.33(0.08) 0.49(0.19) 0.38(0.19) 0.40(0.05) 0.53(0.23) 0.43(0.13) 0.49(0.11) 0.65(0.27) 0.52(0.16) 0.56(0.07) 0.72(0.23) 0.56(0.27) 0.74(0.23) 0.78(0.09) 0.62(0.26) 0.85(0.31) 0.79(0.10) 0.73(0.17) 0.84(0.28) 0.75(0.22) 0.75(0.08) 0.88(0.25) 0.78(0.16) 0.68(0.13) 0.86(0.23) 0.90(0.11) 0.84(0.19) 0.99(0.25) 1.01(0.10) 0.90(0.20) 1.03(0.21) 0.99(0.06) 0.95(0.15) 1.20(0.34) 1.08(0.16) 1.17(0.13) 1.37(0.28) 1.23(0.17) 1.25(0.09) 1.41(0.25) 1.22(0.22) 1.18(0.12) 1.37(0.27) 1.26(0.13) 1.20(0.17) 1.41(0.30) 1.30(0.13) 1.23(0.17) 1.54(0.40) 1.31(0.25) 1.20(0.20) 1.41(0.31) 1.23(0.21) 1.24(0.11) 1.37(0.26) 1.20(0.24) 1.26(0.06) 1.47(0.29) 1.30(0.19) 1.20(0.20) 1.34(0.24) 1.23(0.11) 1.14(0.20) 1.23(0.13) 1.38(0.21) 1.20(0.27) 1.32(0.14) 1.42(0.19) 1.26(0.24) 1.20(0.11) 1.36(0.32) 1.26(0.18) 1.18(0.17) 1.25(0.08) 1.31(0.13) 1.36(0.14) 1.20(0.25) 1.23(0.10) 1.38(0.22) 1.27(0.12) 1.18(0.17) 1.25(0.09) 1.32(0.11) 1.17(0.24) 1.22(0.07) 1.35(0.20) 0.73(0.70) 1.29(1.93) 1.32(0.54) 1.27(0.28) 1.36(0.15) 1.21(0.87) 1.10(0.40) 1.56(0.51) 1.40(0.38) 1.34(0.16) 1.27(0.11) 1.20(0.14) 1.15(0.11) 1.05(0.31) 0.95(0.19) 0.88(0.12) 0.98(0.13) 0.89(0.09) 0.89(0.06) 0.97(0.09) 0.79(0.23) 0.57(0.23) 0.36(0.25) 0.42(0.10) 0.49(0.29) 0.54(0.07) 0.49(0.20) 0.64(0.20) 0.63(0.06) 0.48(0.21) 0.36(0.13) 0.49(0.62) 0.41(0.19) 0.30(0.16) 0.38(0.18) 0.27(0.14) 0.18(0.13) 0.58(0.40) 0.59(0.05) 0.39(0.23) 0.47(0.11) 0.60(0.14) 0.45(0.22) 0.69(0.27) 0.71(0.07) 0.51(0.28) 0.72(0.24) 0.92(0.23) 0.68(0.32) 0.81(0.19) 0.85(0.07) 0.66(0.25) 0.90(0.28) 0.90(0.04) 0.74(0.27) 1.07(0.40) 1.13(0.11) 1.28(0.42) 0.70(0.59) 0.35(0.38) 0.69(0.37) 0.62(0.14) 0.61(0.07) 0.81(0.25) 0.68(0.15) 0.75(0.10) 1.10(0.39) 0.93(0.21) 0.75(0.26) 0.61(0.14) 0.58(0.34) 1.07(0.54) 1.07(0.74) 1.26(0.29) 1.38(0.17) 1.39(0.67) 0.76(1.34) 0.35(0.46) 0.42(0.73) 0.75(0.42) 1.77(1.10) 1.77(0.68) 1.57(0.53) 1.16(1.14) 1.64(0.95) 1.46(0.40) 1.39(0.26) 1.43(0.15) 1.58(0.27) 1.73(0.26) 1.82(0.13) 1.82(0.06) 1.87(0.15) 1.71(0.26) 1.55(0.29) 1.52(0.11) 1.71(0.20) 1.73(0.05) 1.59(0.22) 1.70(0.19) 1.68(0.10) 1.82(0.18) 1.89(0.10) 1.87(0.15) 1.98(0.22) 2.07(0.21) 2.10(0.09) 2.04(0.13) 2.04(0.21) 2.11(0.12) 2.14(0.14) 2.14(0.10) 2.02(0.22) 2.26(0.27) 2.26(0.14) 2.25(0.10) 1.87(0.38) 2.08(0.31) 2.21(0.23) 2.24(0.06) 2.15(0.10) 1.90(0.27) 1.94(0.24) 1.81(0.15) 1.15(0.78) 1.35(0.26) 1.25(0.15) 1.26(0.18) 1.23(0.12) 1.23(0.23) 1.28(0.16)
++ Max displacement in automask = 2.26 (mm) at sub-brick 372
++ Max delta displ  in automask = 1.93 (mm) at sub-brick 260
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG086.r02.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG086_SurfVol_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input pb01.sub-TAG086.r02.despike+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG086.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG086.r02.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG086.r02.despike+orig.HEAD
++ Base dataset:   ./sub-TAG086_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.6
++ ###########################################################
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.137235 degrees from plumb.
++ Output dataset ./rm.epi.1.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 45.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r02+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -Fourier -1Dmatrix_save mat.r03.vr.aff12.1D pb01.sub-TAG086.r03.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.137235 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG086.r03.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Reading input dataset ./pb01.sub-TAG086.r03.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 93556 voxels
 + 10964 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 390 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.214  pitch=-0.681  yaw=-0.180  dS=-1.009  dL=-0.119  dP=-0.459
++ Mean: roll=+0.010  pitch=-0.212  yaw=-0.046  dS=+0.289  dL=-0.013  dP=-0.050
++ Max : roll=+0.124  pitch=+0.963  yaw=+0.289  dS=+1.402  dL=+0.054  dP=+0.656
++ Max displacements (mm) for each sub-brick:
 0.49(0.00) 0.34(0.41) 0.27(0.30) 0.31(0.13) 0.18(0.18) 0.18(0.13) 0.19(0.11) 0.26(0.10) 0.17(0.15) 0.22(0.07) 0.23(0.08) 0.26(0.14) 0.23(0.13) 0.27(0.08) 0.28(0.09) 0.30(0.11) 0.24(0.14) 0.23(0.10) 0.24(0.15) 0.23(0.08) 0.25(0.16) 0.26(0.11) 0.27(0.10) 0.36(0.44) 1.04(0.78) 1.12(0.32) 1.06(0.32) 1.06(0.12) 0.99(0.28) 0.97(0.17) 0.88(0.14) 0.78(0.17) 0.66(0.19) 0.73(0.24) 0.57(0.16) 0.30(0.48) 0.15(0.20) 0.16(0.17) 0.37(0.23) 0.31(0.13) 0.24(0.09) 0.22(0.22) 0.17(0.07) 0.15(0.05) 0.25(0.18) 0.09(0.19) 0.14(0.08) 0.20(0.14) 0.00(0.20) 0.09(0.09) 0.18(0.15) 0.07(0.13) 0.10(0.07) 0.22(0.24) 0.12(0.13) 0.08(0.16) 0.20(0.21) 0.15(0.12) 0.09(0.14) 0.29(0.24) 0.18(0.12) 0.08(0.13) 0.27(0.22) 0.15(0.12) 0.06(0.15) 0.20(0.17) 0.22(0.08) 0.08(0.17) 0.32(0.25) 0.33(0.06) 0.14(0.22) 0.29(0.18) 0.20(0.09) 0.20(0.05) 0.38(0.21) 0.18(0.21) 0.19(0.06) 0.28(0.12) 0.12(0.19) 0.31(0.22) 0.37(0.06) 0.21(0.21) 0.31(0.11) 0.43(0.16) 0.25(0.22) 0.31(0.06) 0.44(0.16) 0.28(0.20) 0.39(0.13) 0.54(0.20) 0.33(0.23) 0.33(0.11) 0.47(0.19) 0.47(0.03) 0.33(0.18) 0.37(0.10) 0.56(0.22) 0.40(0.19) 0.29(0.14) 0.44(0.20) 0.43(0.11) 0.32(0.18) 0.53(0.27) 0.48(0.12) 0.49(0.16) 0.84(0.42) 1.09(0.25) 1.05(0.31) 0.87(0.23) 0.51(0.38) 0.92(0.49) 0.77(0.27) 0.77(0.06) 1.02(0.34) 0.95(0.18) 0.96(0.04) 1.19(0.28) 1.02(0.26) 1.13(0.19) 1.14(0.07) 1.09(0.14) 1.19(0.18) 1.07(0.23) 1.08(0.08) 1.21(0.21) 1.13(0.15) 1.15(0.03) 1.35(0.28) 1.37(0.23) 1.34(0.13) 1.54(0.21) 1.42(0.12) 1.27(0.21) 1.15(0.25) 1.29(0.14) 1.22(0.17) 1.26(0.06) 1.23(0.09) 1.21(0.10) 1.26(0.13) 1.26(0.20) 1.19(0.11) 1.23(0.06) 1.34(0.14) 1.26(0.15) 1.36(0.11) 1.49(0.19) 1.32(0.24) 1.38(0.15) 1.39(0.08) 1.22(0.23) 1.07(0.21) 0.94(0.18) 0.93(0.19) 1.14(0.21) 1.36(0.29) 1.03(0.38) 1.10(0.07) 1.38(0.34) 1.34(0.16) 1.21(0.15) 0.88(0.36) 0.52(0.43) 0.59(0.13) 0.48(0.19) 0.44(0.10) 0.43(0.30) 0.41(0.06) 0.34(0.16) 0.33(0.08) 0.42(0.24) 0.30(0.16) 0.28(0.04) 0.33(0.08) 0.49(0.19) 0.38(0.19) 0.40(0.05) 0.53(0.23) 0.43(0.13) 0.49(0.11) 0.65(0.27) 0.52(0.16) 0.56(0.07) 0.72(0.23) 0.56(0.27) 0.74(0.23) 0.78(0.09) 0.62(0.26) 0.85(0.31) 0.79(0.10) 0.73(0.17) 0.84(0.28) 0.75(0.22) 0.75(0.08) 0.88(0.25) 0.78(0.16) 0.68(0.13) 0.86(0.23) 0.90(0.11) 0.84(0.19) 0.99(0.25) 1.01(0.10) 0.90(0.20) 1.03(0.21) 0.99(0.06) 0.95(0.15) 1.20(0.34) 1.08(0.16) 1.17(0.13) 1.37(0.28) 1.23(0.17) 1.25(0.09) 1.41(0.25) 1.22(0.22) 1.18(0.12) 1.37(0.27) 1.26(0.13) 1.20(0.17) 1.41(0.30) 1.30(0.13) 1.23(0.17) 1.54(0.40) 1.31(0.25) 1.20(0.20) 1.41(0.31) 1.23(0.21) 1.24(0.11) 1.37(0.26) 1.20(0.24) 1.26(0.06) 1.47(0.29) 1.30(0.19) 1.20(0.20) 1.34(0.24) 1.23(0.11) 1.14(0.20) 1.23(0.13) 1.38(0.21) 1.20(0.27) 1.32(0.14) 1.42(0.19) 1.26(0.24) 1.20(0.11) 1.36(0.32) 1.26(0.18) 1.18(0.17) 1.25(0.08) 1.31(0.13) 1.36(0.14) 1.20(0.25) 1.23(0.10) 1.38(0.22) 1.27(0.12) 1.18(0.17) 1.25(0.09) 1.32(0.11) 1.17(0.24) 1.22(0.07) 1.35(0.20) 0.73(0.70) 1.29(1.93) 1.32(0.54) 1.27(0.28) 1.36(0.15) 1.21(0.87) 1.10(0.40) 1.56(0.51) 1.40(0.38) 1.34(0.16) 1.27(0.11) 1.20(0.14) 1.15(0.11) 1.05(0.31) 0.95(0.19) 0.88(0.12) 0.98(0.13) 0.89(0.09) 0.89(0.06) 0.97(0.09) 0.79(0.23) 0.57(0.23) 0.36(0.25) 0.42(0.10) 0.49(0.29) 0.54(0.07) 0.49(0.20) 0.64(0.20) 0.63(0.06) 0.48(0.21) 0.36(0.13) 0.49(0.62) 0.41(0.19) 0.30(0.16) 0.38(0.18) 0.27(0.14) 0.18(0.13) 0.58(0.40) 0.59(0.05) 0.39(0.23) 0.47(0.11) 0.60(0.14) 0.45(0.22) 0.69(0.27) 0.71(0.07) 0.51(0.28) 0.72(0.24) 0.92(0.23) 0.68(0.32) 0.81(0.19) 0.85(0.07) 0.66(0.25) 0.90(0.28) 0.90(0.04) 0.74(0.27) 1.07(0.40) 1.13(0.11) 1.28(0.42) 0.70(0.59) 0.35(0.38) 0.69(0.37) 0.62(0.14) 0.61(0.07) 0.81(0.25) 0.68(0.15) 0.75(0.10) 1.10(0.39) 0.93(0.21) 0.75(0.26) 0.61(0.14) 0.58(0.34) 1.07(0.54) 1.07(0.74) 1.26(0.29) 1.38(0.17) 1.39(0.67) 0.76(1.34) 0.35(0.46) 0.42(0.73) 0.75(0.42) 1.77(1.10) 1.77(0.68) 1.57(0.53) 1.16(1.14) 1.64(0.95) 1.46(0.40) 1.39(0.26) 1.43(0.15) 1.58(0.27) 1.73(0.26) 1.82(0.13) 1.82(0.06) 1.87(0.15) 1.71(0.26) 1.55(0.29) 1.52(0.11) 1.71(0.20) 1.73(0.05) 1.59(0.22) 1.70(0.19) 1.68(0.10) 1.82(0.18) 1.89(0.10) 1.87(0.15) 1.98(0.22) 2.07(0.21) 2.10(0.09) 2.04(0.13) 2.04(0.21) 2.11(0.12) 2.14(0.14) 2.14(0.10) 2.02(0.22) 2.26(0.27) 2.26(0.14) 2.25(0.10) 1.87(0.38) 2.08(0.31) 2.21(0.23) 2.24(0.06) 2.15(0.10) 1.90(0.27) 1.94(0.24) 1.81(0.15) 1.15(0.78) 1.35(0.26) 1.25(0.15) 1.26(0.18) 1.23(0.12) 1.23(0.23) 1.28(0.16)
++ Max displacement in automask = 2.26 (mm) at sub-brick 372
++ Max delta displ  in automask = 1.93 (mm) at sub-brick 260
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG086.r03.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG086_SurfVol_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input pb01.sub-TAG086.r03.despike+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r03
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG086.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG086.r03.despike+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG086.r03.despike+orig.HEAD
++ Base dataset:   ./sub-TAG086_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 390 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389
++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 54.4
++ ###########################################################
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r03
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.137235 degrees from plumb.
++ Output dataset ./rm.epi.1.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 46.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r03+orig.BRIK
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r04.1D -prefix rm.epi.volreg.r04 -Fourier -1Dmatrix_save mat.r04.vr.aff12.1D pb01.sub-TAG086.r04.despike+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dvolreg: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.137235 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.sub-TAG086.r04.despike+orig.BRIK is 4.832416 degrees from plumb.
++ centers of base and input datasets are 18.98 mm apart
++ Reading input dataset ./pb01.sub-TAG086.r04.despike+orig.BRIK
++ Edging: x=4 y=4 z=3
++ Creating mask for -maxdisp
 + Automask has 91021 voxels
 + 10092 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 265 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.992  pitch=-4.312  yaw=+0.541  dS=-4.664  dL=-1.611  dP=+3.501
++ Mean: roll=+1.087  pitch=-4.112  yaw=+0.624  dS=-4.193  dL=-1.502  dP=+3.672
++ Max : roll=+1.169  pitch=-3.727  yaw=+0.729  dS=-4.017  dL=-1.408  dP=+3.842
++ Max displacements (mm) for each sub-brick:
 11.69(0.00) 11.77(0.11) 11.92(0.20) 11.89(0.19) 11.73(0.18) 11.72(0.22) 11.84(0.20) 11.78(0.27) 11.87(0.36) 11.94(0.24) 11.93(0.37) 11.83(0.11) 11.78(0.20) 11.78(0.36) 11.72(0.06) 11.75(0.19) 11.78(0.05) 11.73(0.15) 11.67(0.12) 11.62(0.09) 11.66(0.18) 11.63(0.24) 11.79(0.18) 11.97(0.28) 11.88(0.19) 11.92(0.20) 11.76(0.18) 11.41(0.36) 11.56(0.21) 11.55(0.05) 11.53(0.18) 11.64(0.26) 11.60(0.17) 11.70(0.12) 11.81(0.16) 11.73(0.19) 11.83(0.11) 11.82(0.22) 11.71(0.20) 11.74(0.06) 11.74(0.22) 11.67(0.22) 11.77(0.10) 11.82(0.20) 11.75(0.30) 11.81(0.16) 11.77(0.11) 11.69(0.23) 11.75(0.20) 11.70(0.08) 11.70(0.18) 11.85(0.20) 11.86(0.21) 11.92(0.17) 11.88(0.14) 11.76(0.17) 11.74(0.09) 11.77(0.22) 11.69(0.26) 11.72(0.04) 11.77(0.20) 11.72(0.23) 11.81(0.15) 11.79(0.14) 11.69(0.22) 11.83(0.19) 11.78(0.06) 11.70(0.22) 11.80(0.22) 11.63(0.20) 11.63(0.04) 11.71(0.25) 11.59(0.30) 11.70(0.19) 11.71(0.08) 11.62(0.18) 11.70(0.21) 11.59(0.21) 11.71(0.12) 11.73(0.07) 11.71(0.26) 11.84(0.28) 11.71(0.15) 11.65(0.10) 11.72(0.26) 11.62(0.18) 11.66(0.09) 11.70(0.28) 11.58(0.25) 11.65(0.08) 11.67(0.20) 11.59(0.30) 11.72(0.23) 11.65(0.10) 11.58(0.14) 11.75(0.26) 11.65(0.19) 11.68(0.09) 11.71(0.20) 11.61(0.23) 11.71(0.11) 11.74(0.12) 11.62(0.23) 11.73(0.17) 11.72(0.07) 11.61(0.24) 11.73(0.14) 11.74(0.11) 11.62(0.21) 11.77(0.17) 11.77(0.09) 11.69(0.21) 11.81(0.21) 11.76(0.07) 11.71(0.16) 11.85(0.22) 11.80(0.12) 11.79(0.12) 11.87(0.21) 11.79(0.22) 11.88(0.12) 11.88(0.13) 11.78(0.24) 11.87(0.17) 11.83(0.10) 11.76(0.20) 11.84(0.31) 11.74(0.15) 11.71(0.10) 11.84(0.18) 11.86(0.34) 11.99(0.16) 11.98(0.23) 11.84(0.16) 11.76(0.19) 11.85(0.20) 11.74(0.17) 11.84(0.11) 11.83(0.16) 11.75(0.22) 11.86(0.14) 11.81(0.12) 11.69(0.21) 11.81(0.16) 11.78(0.06) 11.70(0.25) 11.82(0.20) 11.77(0.06) 11.68(0.20) 11.82(0.20) 11.78(0.07) 11.80(0.15) 11.86(0.30) 11.76(0.21) 11.82(0.07) 11.85(0.22) 11.83(0.39) 11.95(0.15) 11.93(0.12) 11.85(0.23) 11.94(0.24) 11.90(0.08) 11.84(0.11) 11.84(0.29) 11.76(0.27) 11.85(0.12) 11.87(0.12) 11.85(0.19) 11.87(0.06) 11.93(0.25) 11.82(0.18) 11.80(0.06) 11.88(0.26) 11.76(0.18) 11.80(0.04) 11.82(0.19) 11.75(0.25) 11.85(0.10) 11.88(0.17) 11.78(0.22) 11.85(0.08) 11.67(0.37) 11.72(0.44) 11.82(0.17) 11.79(0.05) 11.75(0.18) 11.91(0.23) 11.85(0.11) 11.84(0.10) 11.89(0.24) 11.81(0.18) 11.81(0.07) 11.92(0.25) 11.80(0.23) 11.89(0.12) 11.90(0.16) 11.80(0.31) 11.94(0.15) 11.99(0.18) 11.89(0.16) 11.89(0.20) 12.06(0.24) 12.07(0.04) 11.88(0.20) 12.02(0.14) 12.23(0.27) 12.00(0.28) 11.86(0.17) 12.07(0.26) 12.03(0.06) 11.96(0.22) 12.04(0.09) 12.06(0.20) 11.98(0.12) 11.97(0.16) 12.06(0.18) 11.75(0.44) 11.91(0.26) 12.11(0.25) 12.07(0.25) 11.94(0.13) 11.87(0.23) 11.91(0.05) 11.89(0.07) 11.85(0.09) 11.89(0.05) 11.93(0.19) 11.86(0.07) 11.84(0.15) 11.95(0.14) 11.95(0.08) 11.87(0.17) 11.97(0.12) 11.95(0.09) 11.86(0.16) 11.95(0.11) 11.95(0.24) 11.90(0.16) 11.92(0.08) 11.99(0.24) 11.91(0.19) 12.00(0.12) 12.01(0.10) 11.92(0.20) 12.02(0.18) 11.92(0.11) 11.77(0.29) 12.02(0.31) 12.00(0.10) 11.89(0.19) 11.94(0.06) 11.95(0.19) 11.80(0.22) 11.85(0.06) 11.89(0.17) 11.79(0.23) 11.85(0.14) 11.85(0.05) 11.81(0.23) 11.95(0.24) 11.89(0.09) 11.87(0.12) 11.98(0.25) 11.84(0.19) 11.83(0.04)
++ Max displacement in automask = 12.23 (mm) at sub-brick 205
++ Max delta displ  in automask = 0.44 (mm) at sub-brick 216
++ Wrote dataset to disk in ./rm.epi.volreg.r04+orig.BRIK
3dcalc -overwrite -a pb01.sub-TAG086.r04.despike+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Output dataset ./rm.epi.all1+orig.BRIK
cat_matvec -ONELINE sub-TAG086_SurfVol_al_junk_mat.aff12.1D -I mat.r04.vr.aff12.1D
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input pb01.sub-TAG086.r04.despike+orig -1Dmatrix_apply mat.r04.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r04
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.sub-TAG086.r04.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.sub-TAG086.r04.despike+orig.BRIK is 4.832416 degrees from plumb.
++ Source dataset: ./pb01.sub-TAG086.r04.despike+orig.HEAD
++ Base dataset:   ./sub-TAG086_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 265 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264
++ Output dataset ./rm.epi.nomask.r04+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 37.1
++ ###########################################################
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r04.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r04
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.832416 degrees from plumb.
++ Output dataset ./rm.epi.1.r04+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 31.2
3dTstat -min -prefix rm.epi.min.r04 rm.epi.1.r04+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.epi.min.r04+orig.BRIK
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D dfile.r04.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD rm.epi.min.r04+orig.HEAD
++ 3dMean: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./mask_epi_extents+orig.BRIK
foreach run ( 01 02 03 04 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG086.r01.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG086.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG086.r02.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG086.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG086.r03.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG086.r03.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r04+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.sub-TAG086.r04.volreg
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb02.sub-TAG086.r04.volreg+orig.BRIK
end
cat_matvec -ONELINE sub-TAG086_SurfVol_al_junk_mat.aff12.1D -I
3dAllineate -base sub-TAG086_SurfVol_ns+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 10.137235 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./sub-TAG086_SurfVol_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy sub-TAG086_SurfVol_ns+orig anat_final.sub-TAG086
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dcopy: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
tee out.allcostX.txt
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.sub-TAG086+orig
3dmask_tool -input copy_af_FSvent+orig -dilate_input -1 -prefix copy_af_FSvent_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 488 survived, 16776728 were zero
++ writing result copy_af_FSvent_erode...
++ Output dataset ./copy_af_FSvent_erode+orig.BRIK
3dmask_tool -input copy_af_FSWe+orig -dilate_input -1 -prefix copy_af_FSWe_erode
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 211037 survived, 16566179 were zero
++ writing result copy_af_FSWe_erode...
++ Output dataset ./copy_af_FSWe_erode+orig.BRIK
3dAllineate -source copy_af_aeseg+orig -master pb02.sub-TAG086.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_aeseg
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_aeseg+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_aeseg+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
3dAllineate -source copy_af_FSvent_erode+orig -master pb02.sub-TAG086.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSvent
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSvent_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSvent+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
3dAllineate -source copy_af_FSWe_erode+orig -master pb02.sub-TAG086.r01.volreg+orig -final NN -1Dparam_apply 1D: 12@0' -prefix follow_ROI_FSWe
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAllineate: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./copy_af_FSWe_erode+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets
++ OpenMP thread count = 1
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./follow_ROI_FSWe+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
foreach run ( 01 02 03 04 )
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG086.r01.blur pb02.sub-TAG086.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG086.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG086.r02.blur pb02.sub-TAG086.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG086.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG086.r03.blur pb02.sub-TAG086.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG086.r03.blur+orig.BRIK
end
3dmerge -1blur_fwhm 2 -doall -prefix pb03.sub-TAG086.r04.blur pb02.sub-TAG086.r04.volreg+orig
++ 3dmerge: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ default -1dindex = 0
++ default -1tindex = 1
-- Wrote edited dataset: ./pb03.sub-TAG086.r04.blur+orig.BRIK
end
foreach run ( 01 02 03 04 )
3dAutomask -prefix rm.mask_r01 pb03.sub-TAG086.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG086.r01.blur+orig
++ Forming automask
 + Fixed clip level = 2072.802246
 + Used gradual clip level = 1954.634399 .. 2158.910400
 + Number voxels above clip level = 88100
 + Clustering voxels ...
 + Largest cluster has 86673 voxels
 + Clustering voxels ...
 + Largest cluster has 86494 voxels
 + Filled   363 voxels in small holes; now have 86857 voxels
 + Filled  1213 voxels in large holes; now have 88070 voxels
 + Clustering voxels ...
 + Largest cluster has 88070 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 973138 voxels
 + Mask now has 88070 voxels
++ 88070 voxels in the mask [out of 1061208: 8.30%]
++ first  23 x-planes are zero [from R]
++ last   25 x-planes are zero [from L]
++ first   9 y-planes are zero [from S]
++ last   39 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r01+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.sub-TAG086.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG086.r02.blur+orig
++ Forming automask
 + Fixed clip level = 2065.347168
 + Used gradual clip level = 1961.327759 .. 2148.596680
 + Number voxels above clip level = 88300
 + Clustering voxels ...
 + Largest cluster has 86982 voxels
 + Clustering voxels ...
 + Largest cluster has 86809 voxels
 + Filled   360 voxels in small holes; now have 87169 voxels
 + Filled  1171 voxels in large holes; now have 88340 voxels
 + Clustering voxels ...
 + Largest cluster has 88336 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 972872 voxels
 + Mask now has 88336 voxels
++ 88336 voxels in the mask [out of 1061208: 8.32%]
++ first  23 x-planes are zero [from R]
++ last   25 x-planes are zero [from L]
++ first   9 y-planes are zero [from S]
++ last   39 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r02+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb03.sub-TAG086.r03.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG086.r03.blur+orig
++ Forming automask
 + Fixed clip level = 2065.347168
 + Used gradual clip level = 1961.327759 .. 2148.596680
 + Number voxels above clip level = 88300
 + Clustering voxels ...
 + Largest cluster has 86982 voxels
 + Clustering voxels ...
 + Largest cluster has 86809 voxels
 + Filled   360 voxels in small holes; now have 87169 voxels
 + Filled  1171 voxels in large holes; now have 88340 voxels
 + Clustering voxels ...
 + Largest cluster has 88336 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 972872 voxels
 + Mask now has 88336 voxels
++ 88336 voxels in the mask [out of 1061208: 8.32%]
++ first  23 x-planes are zero [from R]
++ last   25 x-planes are zero [from L]
++ first   9 y-planes are zero [from S]
++ last   39 y-planes are zero [from I]
++ first  16 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r03+orig.BRIK
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r04 pb03.sub-TAG086.r04.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dAutomask: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.sub-TAG086.r04.blur+orig
++ Forming automask
 + Fixed clip level = 2234.027344
 + Used gradual clip level = 2065.597900 .. 2303.551025
 + Number voxels above clip level = 86728
 + Clustering voxels ...
 + Largest cluster has 86015 voxels
 + Clustering voxels ...
 + Largest cluster has 85846 voxels
 + Filled   383 voxels in small holes; now have 86229 voxels
 + Filled  1208 voxels in large holes; now have 87437 voxels
 + Clustering voxels ...
 + Largest cluster has 87433 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 973775 voxels
 + Mask now has 87433 voxels
++ 87433 voxels in the mask [out of 1061208: 8.24%]
++ first  23 x-planes are zero [from R]
++ last   25 x-planes are zero [from L]
++ first   9 y-planes are zero [from S]
++ last   39 y-planes are zero [from I]
++ first  17 z-planes are zero [from P]
++ last   19 z-planes are zero [from A]
++ Output dataset ./rm.mask_r04+orig.BRIK
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD rm.mask_r04+orig.HEAD -union -prefix full_mask.sub-TAG086
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 4 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 4 volumes gives min count 0
++ voxel limits: 0 clipped, 89651 survived, 971557 were zero
++ writing result full_mask.sub-TAG086...
++ Output dataset ./full_mask.sub-TAG086+orig.BRIK
3dresample -master full_mask.sub-TAG086+orig -input sub-TAG086_SurfVol_ns+orig -prefix rm.resam.anat
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.sub-TAG086
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 88756 survived, 972452 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.sub-TAG086...
++ Output dataset ./mask_anat.sub-TAG086+orig.BRIK
3dmask_tool -input full_mask.sub-TAG086+orig mask_anat.sub-TAG086+orig -inter -prefix mask_epi_anat.sub-TAG086
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ processing 2 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 10061 clipped, 84173 survived, 966974 were zero
++ writing result mask_epi_anat.sub-TAG086...
++ Output dataset ./mask_epi_anat.sub-TAG086+orig.BRIK
tee out.mask_ae_overlap.txt
3dABoverlap -no_automask full_mask.sub-TAG086+orig mask_anat.sub-TAG086+orig
tee out.mask_ae_dice.txt
3ddot -dodice full_mask.sub-TAG086+orig mask_anat.sub-TAG086+orig
foreach run ( 01 02 03 04 )
3dTstat -prefix rm.mean_r01 pb03.sub-TAG086.r01.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.sub-TAG086.r01.blur+orig -b rm.mean_r01+orig -c full_mask.sub-TAG086+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG086.r01.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG086.r01.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.sub-TAG086.r02.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+orig.BRIK
3dcalc -a pb03.sub-TAG086.r02.blur+orig -b rm.mean_r02+orig -c full_mask.sub-TAG086+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG086.r02.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG086.r02.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r03 pb03.sub-TAG086.r03.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+orig.BRIK
3dcalc -a pb03.sub-TAG086.r03.blur+orig -b rm.mean_r03+orig -c full_mask.sub-TAG086+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG086.r03.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG086.r03.scale+orig.BRIK
end
3dTstat -prefix rm.mean_r04 pb03.sub-TAG086.r04.blur+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTstat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+orig.BRIK
3dcalc -a pb03.sub-TAG086.r04.blur+orig -b rm.mean_r04+orig -c full_mask.sub-TAG086+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.sub-TAG086.r04.scale
++ 3dcalc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: A cast of thousands
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Output dataset ./pb04.sub-TAG086.r04.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_run_lengths 390 390 390 265 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 390 390 390 265 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_run_lengths 390 390 390 265 -show_censor_count -censor_prev_TR -censor_motion 0.2 motion_sub-TAG086
1deval -a motion_sub-TAG086_censor.1D -b outcount_sub-TAG086_censor.1D -expr a*b
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
foreach index ( `count -digits 1 1 $#runs` )
count -digits 1 1 4
set nt = 390
set run = 01
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 01 4 -set_run_lengths 390 390 390 265 -write bpass.r01.1D
end
set nt = 390
set run = 02
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 02 4 -set_run_lengths 390 390 390 265 -write bpass.r02.1D
end
set nt = 390
set run = 03
1dBport -nodata 390 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 390
 + Frequency indexes: blocklen=390 :: 1 2 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 03 4 -set_run_lengths 390 390 390 265 -write bpass.r03.1D
end
set nt = 265
set run = 04
1dBport -nodata 265 0.78 -band 0.009 0.2 -invert -nozero
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ Block length: 265
 + Frequency indexes: blocklen=265 :: 1 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132
1d_tool.py -infile rm.bpass.1D -pad_into_many_runs 04 4 -set_run_lengths 390 390 390 265 -write bpass.r04.1D
end
1dcat bpass.r01.1D bpass.r02.1D bpass.r03.1D bpass.r04.1D
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_sub-TAG086_combined_2.1D -show_trs_uncensored encoded
foreach run ( 01 02 03 04 )
1d_tool.py -set_run_lengths 390 390 390 265 -select_runs 01 -infile censor_sub-TAG086_combined_2.1D -write rm.censor.r01.1D
3dTproject -polort 3 -prefix rm.det_pcin_r01 -censor rm.censor.r01.1D -cenmode KILL -input pb02.sub-TAG086.r01.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 120 ; remaining = 270
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 270 retained time points MINUS 4 regressors ==> 266 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 677054 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r01+orig.BRIK
++ ===== clock time = 48m 3s 328ms
end
1d_tool.py -set_run_lengths 390 390 390 265 -select_runs 02 -infile censor_sub-TAG086_combined_2.1D -write rm.censor.r02.1D
3dTproject -polort 3 -prefix rm.det_pcin_r02 -censor rm.censor.r02.1D -cenmode KILL -input pb02.sub-TAG086.r02.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 111 ; remaining = 279
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 279 retained time points MINUS 4 regressors ==> 275 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 677054 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r02+orig.BRIK
++ ===== clock time = 45m 27s 239ms
end
1d_tool.py -set_run_lengths 390 390 390 265 -select_runs 03 -infile censor_sub-TAG086_combined_2.1D -write rm.censor.r03.1D
3dTproject -polort 3 -prefix rm.det_pcin_r03 -censor rm.censor.r03.1D -cenmode KILL -input pb02.sub-TAG086.r03.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 390 ; censored = 111 ; remaining = 279
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 279 retained time points MINUS 4 regressors ==> 275 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 677054 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r03+orig.BRIK
++ ===== clock time = 46m 42s 389ms
end
1d_tool.py -set_run_lengths 390 390 390 265 -select_runs 04 -infile censor_sub-TAG086_combined_2.1D -write rm.censor.r04.1D
3dTproject -polort 3 -prefix rm.det_pcin_r04 -censor rm.censor.r04.1D -cenmode KILL -input pb02.sub-TAG086.r04.volreg+orig
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dTproject: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ input time points = 265 ; censored = 78 ; remaining = 187
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 187 retained time points MINUS 4 regressors ==> 183 D.O.F. left
++ no -mask option ==> processing all 1061208 voxels in dataset
++ Compute pseudo-inverse of fixed orts
++ Loading dataset
[7m*+ WARNING:[0m 3dTproject input data :: 677054 vectors are constant
++ Starting project-orization
++ Convert results to output dataset
++ Output dataset ./rm.det_pcin_r04+orig.BRIK
++ ===== clock time = 6m 28s 42ms
end
3dTcat -prefix rm.det_pcin_rall rm.det_pcin_r01+orig.HEAD rm.det_pcin_r02+orig.HEAD rm.det_pcin_r03+orig.HEAD rm.det_pcin_r04+orig.HEAD
++ 3dTcat: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ elapsed time = 8.2 s
3dpc -mask follow_ROI_FSvent+orig -pcsave 3 -prefix rm.ROIPC.FSvent rm.det_pcin_rall+orig
++ 3dpc: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
1d_tool.py -censor_fill_parent censor_sub-TAG086_combined_2.1D -infile rm.ROIPC.FSvent_vec.1D -write ROIPC.FSvent.1D
3dDeconvolve -input pb04.sub-TAG086.r01.scale+orig.HEAD pb04.sub-TAG086.r02.scale+orig.HEAD pb04.sub-TAG086.r03.scale+orig.HEAD pb04.sub-TAG086.r04.scale+orig.HEAD -mask full_mask.sub-TAG086+orig -censor censor_sub-TAG086_combined_2.1D -ortvec bandpass_rall.1D bandpass -ortvec ROIPC.FSvent.1D ROIPC.FSvent -polort 3 -num_stimts 12 -stim_file 1 motion_demean.1D[0] -stim_base 1 -stim_label 1 roll_01 -stim_file 2 motion_demean.1D[1] -stim_base 2 -stim_label 2 pitch_01 -stim_file 3 motion_demean.1D[2] -stim_base 3 -stim_label 3 yaw_01 -stim_file 4 motion_demean.1D[3] -stim_base 4 -stim_label 4 dS_01 -stim_file 5 motion_demean.1D[4] -stim_base 5 -stim_label 5 dL_01 -stim_file 6 motion_demean.1D[5] -stim_base 6 -stim_label 6 dP_01 -stim_file 7 motion_deriv.1D[0] -stim_base 7 -stim_label 7 roll_02 -stim_file 8 motion_deriv.1D[1] -stim_base 8 -stim_label 8 pitch_02 -stim_file 9 motion_deriv.1D[2] -stim_base 9 -stim_label 9 yaw_02 -stim_file 10 motion_deriv.1D[3] -stim_base 10 -stim_label 10 dS_02 -stim_file 11 motion_deriv.1D[4] -stim_base 11 -stim_label 11 dL_02 -stim_file 12 motion_deriv.1D[5] -stim_base 12 -stim_label 12 dP_02 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.sub-TAG086 -errts errts.sub-TAG086 -x1D_stop -bucket stats.sub-TAG086
++ WARNING: file /home/jpfeifer/.afni.log is now 414384078 (414 million [mega]) bytes long!
++ 3dDeconvolve extending num_stimts from 12 to 1012 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_18.2.04 (Jul  6 2018) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 390 780 1170
++ Skipping check for initial transients
++ Input polort=3; Longest run=304.2 s; Recommended minimum polort=3 ++ OK ++
++ Number of time points: 1435 (before censor) ; 1015 (after)
 + Number of parameters:  1028 [1028 baseline ; 0 signal]
[7m** ERROR:[0m  *** Censoring has made regression impossible :( ***
[7m** FATAL ERROR:[0m 3dDeconvolve dies: Insufficient data (1015) for estimating 1028 parameters
** Program compile date = Jul  6 2018
